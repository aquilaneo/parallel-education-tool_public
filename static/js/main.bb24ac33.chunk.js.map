{"version":3,"sources":["common.tsx","valueBlockBehaviors.ts","blockSettings.ts","commandBlockBehavior.ts","blockDefinitions.ts","playground.tsx","variableCanvas.ts","img/Flag.svg","img/Explanation.svg","img/Close.svg","img/Score.svg","img/Next.svg","img/Back.svg","playground-modals.tsx","img/Home.svg","img/Clear_small.svg","img/NotClear_purple.svg","img/NotClear_white.svg","img/Info.svg","img/Program.svg","img/Visualizer.svg","img/Console.svg","img/Threads.svg","img/Play.svg","img/Bin.svg","mission.ts","missionContents.tsx","img/Clear.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["assertIsDefined","value","undefined","Error","assertIsNumber","assertIsString","assertIsBoolean","BlockType","ValueBlock","blockXml","userProgram","myRoutine","wait","blockType","id","getAttribute","this","a","type","Array","from","children","find","child","block","tagName","field","textContent","definition","BlockDefinitions","valueBlockDefinition","instantiate","CompareBlock","operand1","operand2","operator","constructBlock","executeValueBlock","LogicOperationBlock","NotBlock","NumberBlock","num","Number","CalculateBlock","Math","pow","TextBlock","text","TextCalculateBlock","toString","VariablesGetNumber","variableName","result","readLocalNumberVariable","VariablesGetString","readLocalStringVariable","GlobalVariableReadBlock","name","mission","addGlobalVariableAccess","routineColor","readVariable","removeGlobalVariableAccess","GlobalOneDimensionalArrayRead","blocklyXml","index","indexNumber","addOneDimensionalArrayAccess","readOneDimensionalArray","removeOneDimensionalArrayAccess","GlobalTwoDimensionalArrayRead","row","rowNumber","col","colNumber","addTwoDimensionalArrayAccess","readTwoDimensionalArray","removeTwoDimensionalArrayAccess","GetArgumentBlock","argument","getArgument","FunctionCallWithReturnBlock","argument1","argument2","argument3","executeFunction","StopwatchReadBlock","swNumber","threadNumber","round","getStopwatch","read","CommandBlock","workspace","randomSpeed","blocklyBlock","baseBlockColor","executingBlockColor","console","log","getColour","rgbString","replace","rNumber","parseInt","gNumber","bNumber","setColour","statement","getBlockById","calcBlockColor","constructedBlocks","commandBlockDefinition","push","next","nodeName","getElementsByTagName","PrintBlock","ValueBlockBehaviors","printLog","SecondsWaitBlock","second","MilliSecondsWaitBlock","millisecond","IfBlock","condition","setWorkspace","executeBlockList","IfElseBlock","statement1","statement2","ForBlock","count","i","stopFlg","WhileBlock","mode","VariablesSetNumber","variable","writeLocalNumberVariable","VariablesAddNumber","operand","VariablesSetString","writeLocalStringVariable","GlobalVariableWriteBlock","writeVariable","GlobalOneDimensionalArrayWrite","writeOneDimensionalArray","GlobalTwoDimensionalArrayWrite","writeTwoDimensionalArray","FunctionDefinitionBlock","functionName","length","functionBlockDefinition","FunctionCallBlock","ReturnValueBlock","returnValue","EntryPointBlock","StopwatchStartBlock","start","StopwatchStopBlock","stop","StopwatchResetBlock","reset","ThreadCreateBlock","routineName","threadID","threadFunctionName","functionStatementElement","getFunctionStatementElementByName","addThread","element","executeThread","printError","ThreadJoinBlock","threadIDStr","threadName","thread","getThread","isExecuting","MutexLockBlock","mutexID","mutexIDStr","lockMutex","MutexUnlockBlock","unlockMutex","UserProgram","xml","programSpeed","entryFunction","functions","threads","maxThreadCount","functionStatementElements","currentMilliSecond","oldTime","mutexes","stopwatches","blocks","entryFunctionXml","functionsXml","filter","Function","entryFunctionBlock","CommandBlockBehaviors","setDefinitionBlock","functionXml","func","functionBlock","setFunctionName","blockList","setBlockColorToExecuting","executeBlock","Date","time","random","sleep1ms","getTime","isWaiting","finalizeBlock","setBlockColorToBase","now","setTimeout","tick","stopUserProgram","valueBlock","Promise","resolve","speed","searchedFunction","getFunctionByName","setArguments","item","searchedIndex","findIndex","sw","key","Stopwatch","searched","addStopwatch","Thread","functionInstance","threadIndex","Object","keys","NumberVariable","initValue","StringVariable","startTime","getCurrentMilliSecond","Routine","definitionBlock","localNumberVariables","localStringVariables","argumentNumber","getLocalNumberVariable","readValue","getLocalStringVariable","writeValue","searchedVariable","localVariable","addLocalNumberVariable","addLocalStringVariable","newVariable","removeThread","commandBlockDefinitions","blocklyJson","valueBlockDefinitions","ConsoleOutputType","VariableCanvas","canvas","context","screenWidth","screenHeight","twoDimensionalArrayAccesses","oneDimensionalArrayAccesses","globalVariableAccesses","whiteReadAccessMark","blackReadAccessMark","whiteWriteAccessMark","blackWriteAccessMark","Image","src","process","getContext","resize","color","twoDimensionalArrays","oneDimensionalArrays","variables","clearRect","colors","defaultLineWidth","lineWidth","nameWidth","cellWidth","cellHeight","accessMarkWidth","accessMarkHeight","nameFontSize","indexFontSize","tableFontSize","originX","originY","font","fillStyle","textAlign","fillText","indexY","indexX","cellX","cellY","fillRect","strokeStyle","strokeRect","accesses","accessMarkX","accessMarkY","decideAccessMark","xOffset","width","yOffset","height","drawImage","clientWidth","window","devicePixelRatio","clientHeight","setAttribute","MissionDetailModal","props","className","style","display","isVisible","missionContent","chapterName","missionTitle","FlagIcon","goal","ExplanationIcon","missionExplanation","onClick","setIsVisible","CloseIcon","MissionClearModal","chapter","nextMission","chapterNameURL","missionID","ScoreIcon","score","getTimeSecond","getBlockCount","BackIcon","close","to","NextIcon","MissionFailedModal","failReason","EditorView","initialWorkspace","jsonArray","commandBlock","Blockly","Blocks","defineBlocksWithJsonArray","BlockSettings","options","document","DOMParser","parseFromString","categories","entries","forEach","category","getElementById","setLocale","Ja","blockCountLimit","Infinity","editable","toolbox","maxBlocks","move","scrollbars","drag","wheel","readOnly","inject","registerButtonCallback","prompt","createVariable","registerToolboxCategoryCallback","xmlStringList","numberVariables","getVariablesOfType","getId","numberVariable","stringVariables","map","Xml","textToDom","program","defaultProgram","xmlToWorkspace","getXml","dom","workspaceToDom","domToText","clear","domToWorkspace","variableCanvas","initialProgramSpeed","parseBlocks","resetGlobalArray","drawTable","currentTwoDimensionalArrays","currentOneDimensionalArrays","currentVariables","setProgramSpeed","executeUserProgram","closeDetailModal","missionResult","judge","cleared","setClear","getAllBlocks","showClearModal","showFailedModal","svgResize","React","Component","ThreadView","threadColors","threadNames","onDidMount","onResize","divWidth","threadCount","backgroundColor","GlobalDataType","ConsoleView","state","outputs","output","setState","Log","Playground","useState","isDetailVisible","setIsDetailVisible","isClearVisible","setIsClearVisible","isFailedVisible","setIsFailedVisible","threadInfos","setThreadInfos","setThreadCount","missionFailReason","setMissionFailReason","editorRef","useRef","threadRefs","consoleRef","foundMission","missionContents","findMissionByID","contents","findNextMission","Mission","current","writeConsole","clearConsole","threadInfo","oldThreadNames","oldThreadCount","oldThreadInfos","newThreadNames","onCenterPanelResized","threadView","useEffect","initialize","addEventListener","isGlobalDataExists","globalVariables","arrays","isThreadsExists","HomeIcon","icon","currentMission","isClear","ClearSmallIcon","NotClearPurpleIcon","NotClearWhiteIcon","content","visibility","InfoIcon","ProgramIcon","min","max","step","onChange","event","parseFloat","target","toFixed","PlayIcon","ref","VisualizerIcon","ThreadIcon","blocksXml","setWorkspaceToThread","ConsoleIcon","BinIcon","MissionList","currentMissionID","chapterIndex","missionIndex","TwoDimensionalArrays","arrayTypes","randomRanges","rowLength","colLength","getRandomArray","randomMin","randomMax","array","floor","constant","OneDimensionalArrays","GlobalVariables","variableTypes","getRandomValue","MissionScore","blockCount","consoleOutputs","writeConsoleView","clearConsoleView","addThreadView","removeThreadView","arrayName","randomizeAll","JSON","parse","stringify","isEqual","correctValue","number","isNaN","abs","EPSILON","addMissionContent","missionSummary","behaviors","TEXT_PRINT","WAIT_MS","WAIT_S","logic","loops","math","TEXT","localVariables","globalArrays","measurement","parallel","initialTwoDimensionalArrays","initialOneDimensionalArrays","initialVariables","twoDimensionalArraysResult","oneDimensionalArraysResult","variablesResult","CONTROLS_REPEAT_EXT","CONTROLS_WHILEUNTIL","MATH_NUMBER","MATH_ARITHMETIC","STR_ARITHMETIC","LOCAL_VARIABLE_AVAILABLE","FUNCTION_DEFINITION","FUNCTION_CALL","ENTRY_POINT","FUNCTION_CALL_WITH_RETURN","GET_ARGUMENT","RETURN_VALUE","STOPWATCH_START","STOPWATCH_STOP","STOPWATCH_RESET","STOPWATCH_READ","addConstValue","GLOBAL_VARIABLE_READ","GLOBAL_VARIABLE_WRITE","addConstArray","GLOBAL_ONE_DIMENSIONAL_ARRAY_READ","GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE","GLOBAL_TWO_DIMENSIONAL_ARRAY_READ","GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE","addRandomArray","sum","CONTROLS_IF","CONTROLS_IFELSE","LOGIC_COMPARE","LOGIC_OPERATION","LOGIC_NEGATE","average","THREAD_CREATE","THREAD_JOIN","j","fill","correct","MUTEX_LOCK","MUTEX_UNLOCK","addRandomValue","Top","chapters","missionLinks","ClearIcon","flexWrap","App","commonRoutes","url","component","missionRoutes","routes","concat","route","path","exact","render","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.bb24ac33.chunk.js","sourcesContent":["export function assertIsDefined<T> (value: T): asserts value is NonNullable<T> {\n\tif (value === undefined || value === null) {\n\t\tthrow new Error (`Error: valueの値が${value}です！`);\n\t}\n}\n\nexport function assertIsNumber (value: unknown): asserts value is number {\n\tif (typeof (value) !== \"number\") {\n\t\tthrow new Error (`Error: valueはnumber型ではありません！${typeof (value)}型です。`);\n\t}\n}\n\nexport function assertIsString (value: unknown): asserts value is string {\n\tif (typeof (value) !== \"string\") {\n\t\tthrow new Error (`Error: valueはstring型ではありません！${typeof (value)}型です。`);\n\t}\n}\n\nexport function assertIsBoolean (value: unknown): asserts value is boolean {\n\tif (typeof (value) !== \"boolean\") {\n\t\tthrow new Error (`Error: valueはboolean型ではありません！${typeof (value)}型です。`);\n\t}\n}\n","import * as BlockDefinitions from \"./blockDefinitions\";\nimport {assertIsBoolean, assertIsDefined, assertIsNumber, assertIsString} from \"./common\";\n\nexport class ValueBlock {\n\tblockType: string;\n\tid: string;\n\tblockXml: Element;\n\tuserProgram: BlockDefinitions.UserProgram;\n\tmyRoutine: BlockDefinitions.Routine;\n\twait: number;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\t// ブロックのxmlからブロックタイプを取得\n\t\tconst blockType = blockXml.getAttribute (\"type\");\n\t\tthis.blockType = blockType ? blockType : \"\";\n\t\t// ブロックのxmlからブロックIDを取得\n\t\tconst id = blockXml.getAttribute (\"id\");\n\t\tthis.id = id ? id : \"\";\n\t\t// ブロックのxmlを取得\n\t\tthis.blockXml = blockXml;\n\n\t\tthis.userProgram = userProgram;\n\t\tthis.myRoutine = myRoutine;\n\t\tthis.wait = wait;\n\t}\n\n\tasync executeBlock (): Promise<number | string | boolean> {\n\t\treturn 0;\n\t}\n\n\tfinalizeBlock () {\n\t}\n\n\t// 指定した名前のパラメータ(block or shadow)を取得\n\tgetValue (type: string) {\n\t\t// typeに合致するタグを探す\n\t\tconst value = Array.from (this.blockXml.children).find ((child) => {\n\t\t\treturn child.getAttribute (\"name\") === type;\n\t\t});\n\t\tif (value) {\n\t\t\t// blockタグを探す\n\t\t\tconst block = Array.from (value.children).find ((child) => {\n\t\t\t\treturn child.tagName === \"block\";\n\t\t\t});\n\t\t\treturn block ? block : value.children[0]; // blockがあったらそれを、なかったらshadowタグを返す\n\t\t}\n\t}\n\n\t// 指定した名前の値(field)を取得\n\tgetField (type: string) {\n\t\tconst field = Array.from (this.blockXml.children).find ((child) => {\n\t\t\treturn child.tagName === \"field\" && child.getAttribute (\"name\") === type;\n\t\t});\n\n\t\treturn field ? field.textContent : null;\n\t}\n\n\t// 与えられた値ブロックをオブジェクトに変換\n\tstatic constructBlock (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine): ValueBlock | null {\n\t\tconst definition = BlockDefinitions.valueBlockDefinitions.find ((valueBlockDefinition) => {\n\t\t\treturn valueBlockDefinition.type === blockXml.getAttribute (\"type\");\n\t\t});\n\t\treturn definition ? definition.instantiate (blockXml, userProgram, myRoutine, definition.wait) : null;\n\t}\n}\n\nexport class CompareBlock extends ValueBlock {\n\toperand1: ValueBlock | null;\n\toperand2: ValueBlock | null;\n\toperator: string;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst operand1 = super.getValue (\"A\");\n\t\tthis.operand1 = operand1 ? ValueBlock.constructBlock (operand1, userProgram, myRoutine) : null;\n\t\tconst operand2 = super.getValue (\"B\");\n\t\tthis.operand2 = operand2 ? ValueBlock.constructBlock (operand2, userProgram, myRoutine) : null;\n\t\tconst operator = super.getField (\"OP\");\n\t\tthis.operator = operator ? operator : \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.operand1);\n\t\tassertIsDefined (this.operand2);\n\n\t\tconst operand1 = await this.userProgram.executeValueBlock (this.operand1);\n\t\tconst operand2 = await this.userProgram.executeValueBlock (this.operand2);\n\t\tassertIsNumber (operand1);\n\t\tassertIsNumber (operand2);\n\t\t// 演算子ごとに適した演算結果を返す\n\t\tswitch (this.operator) {\n\t\t\tcase \"EQ\":\n\t\t\t\treturn operand1 === operand2;\n\t\t\tcase \"NEQ\":\n\t\t\t\treturn operand1 !== operand2;\n\t\t\tcase \"LT\":\n\t\t\t\treturn operand1 < operand2;\n\t\t\tcase \"LTE\":\n\t\t\t\treturn operand1 <= operand2;\n\t\t\tcase \"GT\":\n\t\t\t\treturn operand1 > operand2;\n\t\t\tcase \"GTE\":\n\t\t\t\treturn operand1 >= operand2;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport class LogicOperationBlock extends ValueBlock {\n\toperand1: ValueBlock | null;\n\toperand2: ValueBlock | null;\n\toperator: string;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst operand1 = super.getValue (\"A\");\n\t\tthis.operand1 = operand1 ? ValueBlock.constructBlock (operand1, userProgram, myRoutine) : null;\n\t\tconst operand2 = super.getValue (\"B\");\n\t\tthis.operand2 = operand2 ? ValueBlock.constructBlock (operand2, userProgram, myRoutine) : null;\n\t\tconst operator = super.getField (\"OP\");\n\t\tthis.operator = operator ? operator : \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.operand1);\n\t\tassertIsDefined (this.operand2);\n\n\t\tconst operand1 = await this.userProgram.executeValueBlock (this.operand1);\n\t\tconst operand2 = await this.userProgram.executeValueBlock (this.operand2);\n\t\tassertIsBoolean (operand1);\n\t\tassertIsBoolean (operand2);\n\t\t// 演算子ごとに適した演算結果を返す。\n\t\tswitch (this.operator) {\n\t\t\tcase \"AND\":\n\t\t\t\treturn operand1 && operand2;\n\t\t\tcase \"OR\":\n\t\t\t\treturn operand1 || operand2;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport class NotBlock extends ValueBlock {\n\tvalue: ValueBlock | null;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst value = super.getValue (\"BOOL\");\n\t\tthis.value = value ? ValueBlock.constructBlock (value, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.value);\n\n\t\tconst value = await this.userProgram.executeValueBlock (this.value);\n\t\tassertIsBoolean (value);\n\t\treturn value;\n\t}\n}\n\nexport class NumberBlock extends ValueBlock {\n\tnum: number;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst num = super.getField (\"NUM\");\n\t\tthis.num = num ? Number (num) : 0;\n\t}\n\n\tasync executeBlock () {\n\t\treturn this.num;\n\t}\n}\n\nexport class CalculateBlock extends ValueBlock {\n\toperand1: ValueBlock | null;\n\toperand2: ValueBlock | null;\n\toperator: string;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst operand1 = super.getValue (\"A\");\n\t\tthis.operand1 = operand1 ? ValueBlock.constructBlock (operand1, userProgram, myRoutine) : null;\n\t\tconst operand2 = super.getValue (\"B\");\n\t\tthis.operand2 = operand2 ? ValueBlock.constructBlock (operand2, userProgram, myRoutine) : null;\n\t\tconst operator = super.getField (\"OP\");\n\t\tthis.operator = operator ? operator : \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.operand1);\n\t\tassertIsDefined (this.operand2);\n\n\t\tconst operand1 = await this.userProgram.executeValueBlock (this.operand1);\n\t\tconst operand2 = await this.userProgram.executeValueBlock (this.operand2);\n\t\tassertIsNumber (operand1);\n\t\tassertIsNumber (operand2);\n\t\t// 演算子ごとに適した演算結果を返す。\n\t\tswitch (this.operator) {\n\t\t\tcase \"ADD\":\n\t\t\t\treturn operand1 + operand2;\n\t\t\tcase \"MINUS\":\n\t\t\t\treturn operand1 - operand2;\n\t\t\tcase \"MULTIPLY\":\n\t\t\t\treturn operand1 * operand2;\n\t\t\tcase \"DIVIDE\":\n\t\t\t\treturn operand1 / operand2;\n\t\t\tcase \"POWER\":\n\t\t\t\treturn Math.pow (operand1, operand2);\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nexport class TextBlock extends ValueBlock {\n\ttext: string;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst text = super.getField (\"TEXT\");\n\t\tthis.text = text != null ? text : \"\";\n\t}\n\n\tasync executeBlock () {\n\t\treturn this.text;\n\t}\n}\n\nexport class TextCalculateBlock extends ValueBlock {\n\toperand1: ValueBlock | null;\n\toperand2: ValueBlock | null;\n\toperator: string;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst operand1 = super.getValue (\"A\");\n\t\tthis.operand1 = operand1 ? ValueBlock.constructBlock (operand1, userProgram, myRoutine) : null;\n\t\tconst operand2 = super.getValue (\"B\");\n\t\tthis.operand2 = operand2 ? ValueBlock.constructBlock (operand2, userProgram, myRoutine) : null;\n\t\tconst operator = super.getField (\"OP\");\n\t\tthis.operator = operator ? operator : \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.operand1);\n\t\tassertIsDefined (this.operand2);\n\n\t\tlet operand1 = await this.userProgram.executeValueBlock (this.operand1);\n\t\tlet operand2 = await this.userProgram.executeValueBlock (this.operand2);\n\n\t\toperand1 = operand1.toString ();\n\t\toperand2 = operand2.toString ();\n\n\t\t// 演算子ごとに適した演算結果を返す。\n\t\tswitch (this.operator) {\n\t\t\tcase \"ADD\":\n\t\t\t\treturn operand1 + operand2;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport class VariablesGetNumber extends ValueBlock {\n\tvariableName: string;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst variableName = super.getField (\"variable\");\n\t\tthis.variableName = variableName ? variableName : \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tconst result = this.myRoutine?.readLocalNumberVariable (this.variableName);\n\t\treturn result ? result : 0;\n\t}\n}\n\nexport class VariablesGetString extends ValueBlock {\n\tvariableName: string;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst variableName = super.getField (\"variable\");\n\t\tthis.variableName = variableName ? variableName : \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tconst result = this.myRoutine?.readLocalStringVariable (this.variableName);\n\t\treturn result ? result : \"\";\n\t}\n}\n\nexport class GlobalVariableReadBlock extends ValueBlock {\n\tname: string;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst name = super.getField (\"name\");\n\t\tthis.name = name ? name : \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tthis.userProgram.mission.addGlobalVariableAccess (this.name, this.myRoutine.routineColor);\n\t\tconst result = this.userProgram.mission.readVariable (this.name);\n\t\treturn result ? result : 0;\n\t}\n\n\tfinalizeBlock () {\n\t\tthis.userProgram.mission.removeGlobalVariableAccess (this.name, this.myRoutine.routineColor);\n\t}\n}\n\nexport class GlobalOneDimensionalArrayRead extends ValueBlock {\n\tname: string;\n\tindex: ValueBlock | null;\n\tindexNumber: number = 0;\n\n\tconstructor (blocklyXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blocklyXml, userProgram, myRoutine, wait);\n\n\t\tconst name = super.getField (\"name\");\n\t\tthis.name = name ? name : \"\";\n\t\tconst index = super.getValue (\"index\");\n\t\tthis.index = index ? ValueBlock.constructBlock (index, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.index);\n\n\t\tconst index = await this.userProgram.executeValueBlock (this.index);\n\t\tassertIsNumber (index);\n\t\tthis.indexNumber = index;\n\n\t\tthis.userProgram.mission.addOneDimensionalArrayAccess (this.name, this.indexNumber, this.myRoutine.routineColor);\n\t\tconst result = this.userProgram.mission.readOneDimensionalArray (this.name, index);\n\t\treturn result ? result : 0;\n\t}\n\n\tfinalizeBlock () {\n\t\tthis.userProgram.mission.removeOneDimensionalArrayAccess (this.name, this.indexNumber, this.myRoutine.routineColor);\n\t}\n}\n\nexport class GlobalTwoDimensionalArrayRead extends ValueBlock {\n\tname: string;\n\trow: ValueBlock | null;\n\trowNumber: number = 0;\n\tcol: ValueBlock | null;\n\tcolNumber: number = 0;\n\n\tconstructor (blocklyXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blocklyXml, userProgram, myRoutine, wait);\n\n\t\tconst name = super.getField (\"name\");\n\t\tthis.name = name ? name : \"\";\n\t\tconst row = super.getValue (\"row\");\n\t\tthis.row = row ? ValueBlock.constructBlock (row, userProgram, myRoutine) : null;\n\t\tconst col = super.getValue (\"col\");\n\t\tthis.col = col ? ValueBlock.constructBlock (col, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.row);\n\t\tassertIsDefined (this.col);\n\n\t\tconst row = await this.userProgram.executeValueBlock (this.row);\n\t\tconst col = await this.userProgram.executeValueBlock (this.col);\n\t\tassertIsNumber (row);\n\t\tassertIsNumber (col);\n\t\tthis.rowNumber = row;\n\t\tthis.colNumber = col;\n\n\t\tthis.userProgram.mission.addTwoDimensionalArrayAccess (this.name, this.rowNumber, this.colNumber, this.myRoutine.routineColor);\n\t\tconst result = this.userProgram.mission.readTwoDimensionalArray (this.name, row, col);\n\t\treturn result ? result : 0;\n\t}\n\n\tfinalizeBlock () {\n\t\tthis.userProgram.mission.removeTwoDimensionalArrayAccess (this.name, this.rowNumber, this.colNumber, this.myRoutine.routineColor);\n\t}\n}\n\nexport class GetArgumentBlock extends ValueBlock {\n\targument: string;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst argument = super.getField (\"argument\");\n\t\tthis.argument = argument ? argument : \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tif (this.myRoutine) {\n\t\t\tswitch (this.argument) {\n\t\t\t\tcase \"argument1\":\n\t\t\t\t\treturn this.myRoutine.getArgument (0);\n\t\t\t\tcase \"argument2\":\n\t\t\t\t\treturn this.myRoutine.getArgument (1);\n\t\t\t\tcase \"argument3\":\n\t\t\t\t\treturn this.myRoutine.getArgument (2);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport class FunctionCallWithReturnBlock extends ValueBlock {\n\tname: string;\n\targument1: ValueBlock | null;\n\targument2: ValueBlock | null;\n\targument3: ValueBlock | null;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst name = super.getField (\"name\");\n\t\tthis.name = name ? name : \"\";\n\n\t\tconst argument1 = super.getValue (\"argument1\");\n\t\tthis.argument1 = argument1 ? ValueBlock.constructBlock (argument1, userProgram, myRoutine) : null;\n\t\tconst argument2 = super.getValue (\"argument2\");\n\t\tthis.argument2 = argument2 ? ValueBlock.constructBlock (argument2, userProgram, myRoutine) : null;\n\t\tconst argument3 = super.getValue (\"argument3\");\n\t\tthis.argument3 = argument3 ? ValueBlock.constructBlock (argument3, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.argument1);\n\t\tassertIsDefined (this.argument2);\n\t\tassertIsDefined (this.argument3);\n\t\tconst argument1 = await this.userProgram.executeValueBlock (this.argument1);\n\t\tconst argument2 = await this.userProgram.executeValueBlock (this.argument2);\n\t\tconst argument3 = await this.userProgram.executeValueBlock (this.argument3);\n\t\tassertIsNumber (argument1);\n\t\tassertIsNumber (argument2);\n\t\tassertIsNumber (argument3);\n\n\t\treturn await this.userProgram.executeFunction (this.name, argument1, argument2, argument3);\n\t}\n}\n\nexport class StopwatchReadBlock extends ValueBlock {\n\tswNumber: ValueBlock | null;\n\n\tconstructor (blockXml: Element, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number) {\n\t\tsuper (blockXml, userProgram, myRoutine, wait);\n\t\tconst threadNumber = super.getValue (\"number\");\n\t\tthis.swNumber = threadNumber ? ValueBlock.constructBlock (threadNumber, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.swNumber);\n\n\t\tconst swNumber = await this.userProgram.executeValueBlock (this.swNumber);\n\t\tassertIsNumber (swNumber);\n\t\treturn Math.round (this.userProgram.getStopwatch (swNumber).read ());\n\t}\n}\n","// ========== ブロックの定義をBlocklyに渡すファイル ==========\n\nimport Blockly from \"blockly\";\nimport {commandBlockDefinitions, valueBlockDefinitions} from \"./blockDefinitions\";\n\nexport const initBlocks = () => {\n\t// ブロック自体の定義を読み込み\n\tlet jsonArray = [];\n\n\t// コマンドブロック\n\tfor (const commandBlock of commandBlockDefinitions) {\n\t\tif (commandBlock.blocklyJson && !Blockly.Blocks[commandBlock.type]) {\n\t\t\tjsonArray.push (commandBlock.blocklyJson);\n\t\t}\n\t}\n\n\t// 値ブロック\n\tfor (const valueBlock of valueBlockDefinitions) {\n\t\tif (valueBlock.blocklyJson && !Blockly.Blocks[valueBlock.type]) {\n\t\t\tjsonArray.push (valueBlock.blocklyJson);\n\t\t}\n\t}\n\n\tBlockly.defineBlocksWithJsonArray (jsonArray);\n};\n\nexport const blockListToXml = (blockList: BlockList) => {\n\tconst categories = [\n\t\t`<category name=\"動作\">`,\n\t\t`<category name=\"分岐/論理\" colour=\"%{BKY_LOGIC_HUE}\">`,\n\t\t`<category name=\"ループ\" colour=\"%{BKY_LOOPS_HUE}\">`,\n\t\t`<category name=\"数学\" colour=\"%{BKY_MATH_HUE}\">`,\n\t\t`<category name=\"テキスト\" colour=\"%{BKY_TEXTS_HUE}\">`,\n\t\t`<category name=\"ローカル変数\" colour=\"330\" custom=\"TYPED_VARIABLE\">`,\n\t\t`<category name=\"グローバル配列\">`,\n\t\t`<category name=\"関数\">`,\n\t\t`<category name=\"計測\">`,\n\t\t`<category name=\"並列処理\">`,\n\t];\n\tconst categoryEnd = `</category>`;\n\n\tlet xml = `<xml id=\"toolbox\">`;\n\tObject.entries (blockList).forEach ((category: [string, BlockType[]], index) => {\n\t\tif (category[1].length > 0) {\n\t\t\txml += categories[index];\n\t\t\tfor (const blockList of category[1]) {\n\t\t\t\txml += blockList;\n\t\t\t}\n\t\t\txml += categoryEnd;\n\t\t}\n\t});\n\txml += `</xml>`;\n\n\treturn xml;\n};\n\nexport interface BlockList {\n\tbehaviors: BlockType[],\n\tlogic: BlockType[],\n\tloops: BlockType[],\n\tmath: BlockType[],\n\ttext: BlockType[],\n\tlocalVariables: BlockType[],\n\tglobalArrays: BlockType[],\n\tfunctions: BlockType[],\n\tmeasurement: BlockType[],\n\tparallel: BlockType[]\n}\n\nexport enum BlockType {\n\tTEXT_PRINT = `\n\t\t<block type=\"text_print\">\n\t\t\t<value name=\"TEXT\">\n\t\t\t\t<shadow type=\"text\"></shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tWAIT_MS = `\n\t\t<block type=\"wait_ms\">\n\t\t\t<value name=\"millisecond\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">1000</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tWAIT_S = `\n\t\t<block type=\"wait_s\">\n\t\t\t<value name=\"second\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">1</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tCONTROLS_IF = `\n\t\t<block type=\"controls_if\">\n\t\t\t<value name=\"IF0\">\n\t\t\t\t<shadow type=\"logic_compare\">\n\t\t\t\t\t<value name=\"A\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t\t<value name=\"B\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tCONTROLS_IFELSE = `\n\t\t<block type=\"controls_ifelse\">\n\t\t\t<value name=\"IF0\">\n\t\t\t\t<shadow type=\"logic_compare\">\n\t\t\t\t\t<value name=\"A\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t\t<value name=\"B\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tLOGIC_COMPARE = `\n\t\t<block type=\"logic_compare\">\n\t\t\t<value name=\"A\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"B\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tLOGIC_OPERATION = `\n\t\t<block type=\"logic_operation\">\n\t\t\t<value name=\"A\">\n\t\t\t\t<shadow type=\"logic_compare\">\n\t\t\t\t\t<value name=\"A\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t\t<value name=\"B\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"B\">\n\t\t\t\t<shadow type=\"logic_compare\">\n\t\t\t\t\t<value name=\"A\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t\t<value name=\"B\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tLOGIC_NEGATE = `\n\t\t<block type=\"logic_negate\">\n\t\t\t<value name=\"BOOL\">\n\t\t\t\t<shadow type=\"logic_compare\">\n\t\t\t\t\t<value name=\"A\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t\t<value name=\"B\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tCONTROLS_REPEAT_EXT = `\n\t\t<block type=\"controls_repeat_ext\">\n\t\t\t<value name=\"TIMES\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">10</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tCONTROLS_WHILEUNTIL = `\n\t\t<block type=\"controls_whileUntil\">\n\t\t\t<value name=\"BOOL\">\n\t\t\t\t<shadow type=\"logic_compare\">\n\t\t\t\t\t<value name=\"A\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t\t<value name=\"B\">\n\t\t\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t\t\t</shadow>\n\t\t\t\t\t</value>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tMATH_NUMBER = `\n\t\t<block type=\"math_number\">\n\t\t\t<field name=\"NUM\">123</field>\n\t\t</block>`,\n\tMATH_ARITHMETIC = `\n\t\t<block type=\"math_arithmetic\">\n\t\t\t<value name=\"A\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"B\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tTEXT = `\n\t\t<block type=\"text\"></block>`,\n\tSTR_ARITHMETIC = `\n\t\t<block type=\"str_arithmetic\">\n\t\t\t<value name=\"A\">\n\t\t\t\t<shadow type=\"text\"></shadow>\n\t\t\t</value>\n\t\t\t<value name=\"B\">\n\t\t\t\t<shadow type=\"text\"></shadow>\n\t\t\t</value>\t\t\t\t\n\t\t</block>`,\n\tLOCAL_VARIABLE_AVAILABLE = \"\",\n\tGLOBAL_VARIABLE_READ = `<block type=\"global_variable_read\"></block>`,\n\tGLOBAL_VARIABLE_WRITE = `\n\t\t<block type=\"global_variable_write\">\n\t\t\t<value name=\"value\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>\n\t`,\n\tGLOBAL_ONE_DIMENSIONAL_ARRAY_READ = `\n\t\t<block type=\"global_one_dimensional_array_read\">\n\t\t\t<value name=\"index\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tGLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE = `\n\t\t<block type=\"global_one_dimensional_array_write\">\n\t\t\t<value name=\"index\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"value\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tGLOBAL_TWO_DIMENSIONAL_ARRAY_READ = `\n\t\t<block type=\"global_two_dimensional_array_read\">\n\t\t\t<value name=\"row\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"col\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tGLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE = `\n\t\t<block type=\"global_two_dimensional_array_write\">\n\t\t\t<value name=\"row\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"col\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"value\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tFUNCTION_DEFINITION = `\n\t\t<block type=\"function_definition\"></block>`,\n\tFUNCTION_CALL = `\n\t\t<block type=\"function_call\">\n\t\t\t<value name=\"argument1\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"argument2\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"argument3\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tFUNCTION_CALL_WITH_RETURN = `\n\t\t<block type=\"function_call_with_return\">\n\t\t\t<value name=\"argument1\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"argument2\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"argument3\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tRETURN_VALUE = `\n\t\t<block type=\"return_value\">\n\t\t\t<value name=\"return_value\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>\n\t`,\n\tENTRY_POINT = `\n\t\t<block type=\"entry_point\"></block>`,\n\tGET_ARGUMENT = `\n\t\t<block type=\"get_argument\"></block>`,\n\tSTOPWATCH_START = `\n\t\t<block type=\"stopwatch_start\">\n\t\t\t<value name=\"number\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tSTOPWATCH_STOP = `\n\t\t<block type=\"stopwatch_stop\">\n\t\t\t<value name=\"number\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tSTOPWATCH_RESET = `\n\t\t<block type=\"stopwatch_reset\">\n\t\t\t<value name=\"number\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tSTOPWATCH_READ = `\n\t\t<block type=\"stopwatch_read\">\n\t\t\t<value name=\"number\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tTHREAD_CREATE = `\n\t\t<block type=\"thread_create\">\n\t\t\t<value name=\"thread_name\">\n\t\t\t\t<shadow type=\"text\"></shadow>\n\t\t\t</value>\n\t\t\t<value name=\"argument1\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"argument2\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t\t<value name=\"argument3\">\n\t\t\t\t<shadow type=\"math_number\">\n\t\t\t\t\t<field name=\"NUM\">0</field>\n\t\t\t\t</shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tTHREAD_JOIN = `\n\t\t<block type=\"thread_join\">\n\t\t\t<value name=\"thread_name\">\n\t\t\t\t<shadow type=\"text\"></shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tMUTEX_LOCK = `\n\t\t<block type=\"mutex_lock\">\n\t\t\t<value name=\"mutex_id\">\n\t\t\t\t<shadow type=\"text\"></shadow>\n\t\t\t</value>\n\t\t</block>`,\n\tMUTEX_UNLOCK = `\n\t\t<block type=\"mutex_unlock\">\n\t\t\t<value name=\"mutex_id\">\n\t\t\t\t<shadow type=\"text\"></shadow>\n\t\t\t</value>\n\t\t</block>\n\t`\n}\n\n// ブロック一覧に載せる全命令ブロックたち\nexport const getAllBlockListXml = () => {\n\treturn {\n\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\tglobalArrays: [BlockType.GLOBAL_VARIABLE_READ, BlockType.GLOBAL_VARIABLE_WRITE, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.FUNCTION_CALL_WITH_RETURN, BlockType.RETURN_VALUE, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN, BlockType.MUTEX_LOCK, BlockType.MUTEX_UNLOCK]\n\t};\n};\n","import * as BlockDefinitions from \"./blockDefinitions\";\nimport * as ValueBlockBehaviors from \"./valueBlockBehaviors\";\nimport {assertIsDefined, assertIsNumber, assertIsString} from \"./common\";\nimport * as Blockly from \"blockly\";\nimport {ValueBlock} from \"./valueBlockBehaviors\";\n\nexport class CommandBlock {\n\tblockType: string;\n\tblockXml: Element;\n\tblocklyBlock: Blockly.Block | null = null;\n\tbaseBlockColor: string = \"\";\n\texecutingBlockColor: string = \"\";\n\tworkspace: Blockly.Workspace | null = null;\n\tuserProgram: BlockDefinitions.UserProgram;\n\tmyRoutine: BlockDefinitions.Routine;\n\twait: number;\n\trandomSpeed: boolean;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\t// ブロックのxmlからブロックタイプを取得\n\t\tconst blockType = blockXml.getAttribute (\"type\");\n\t\tthis.blockType = blockType ? blockType : \"\";\n\t\t// ブロックのxmlを取得\n\t\tthis.blockXml = blockXml;\n\n\t\tthis.userProgram = userProgram;\n\t\tthis.myRoutine = myRoutine;\n\t\tthis.wait = wait;\n\t\tthis.randomSpeed = randomSpeed;\n\t}\n\n\tasync executeBlock () {\n\t\tconsole.log (this.blockType);\n\t}\n\n\tfinalizeBlock () {\n\t}\n\n\t// 色を計算\n\tcalcBlockColor () {\n\t\tif (this.blocklyBlock) {\n\t\t\tthis.baseBlockColor = this.blocklyBlock.getColour ();\n\t\t\t// executingBlockColorを求める\n\t\t\tconst rgbString = this.baseBlockColor.replace (\"#\", \"\");\n\t\t\tlet rNumber = parseInt (rgbString[0] + rgbString[1], 16);\n\t\t\tlet gNumber = parseInt (rgbString[2] + rgbString[3], 16);\n\t\t\tlet bNumber = parseInt (rgbString[4] + rgbString[5], 16);\n\t\t\trNumber += 48;\n\t\t\tgNumber += 48;\n\t\t\tbNumber += 48;\n\t\t\tif (rNumber > 255) {\n\t\t\t\trNumber = 255;\n\t\t\t}\n\t\t\tif (gNumber > 255) {\n\t\t\t\tgNumber = 255;\n\t\t\t}\n\t\t\tif (bNumber > 255) {\n\t\t\t\tbNumber = 255;\n\t\t\t}\n\t\t\tthis.executingBlockColor = `#${rNumber.toString (16)}${gNumber.toString (16)}${bNumber.toString (16)}`;\n\t\t}\n\t}\n\n\t// ワークスペース上のブロックを実行中色に変える\n\tsetBlockColorToExecuting () {\n\t\tif (this.blocklyBlock) {\n\t\t\tthis.blocklyBlock.setColour (this.executingBlockColor);\n\t\t}\n\t}\n\n\t// ワークスペース上のブロックをベース色に戻す\n\tsetBlockColorToBase () {\n\t\tif (this.blocklyBlock) {\n\t\t\tthis.blocklyBlock.setColour (this.baseBlockColor);\n\t\t}\n\t}\n\n\t// 動的時間待機するかどうかのフラグを返す\n\tisWaiting () {\n\t\treturn false;\n\t}\n\n\t// 指定した名前のパラメータ(value or shadow)を取得\n\tgetValue (type: string) {\n\t\t// typeに合致するタグを探す\n\t\tconst value = Array.from (this.blockXml.children).find ((child) => {\n\t\t\treturn child.getAttribute (\"name\") === type;\n\t\t});\n\t\tif (value) {\n\t\t\t// blockタグを探す\n\t\t\tconst block = Array.from (value.children).find ((child) => {\n\t\t\t\treturn child.tagName === \"block\";\n\t\t\t});\n\t\t\treturn block ? block : value.children[0]; // blockがあったらそれを、なかったらshadowタグを返す\n\t\t}\n\t}\n\n\t// 指定した名前の値(field)を取得\n\tgetField (type: string) {\n\t\tconst field = Array.from (this.blockXml.children).find ((child) => {\n\t\t\treturn child.tagName === \"field\" && child.getAttribute (\"name\") === type;\n\t\t});\n\t\treturn field ? field.textContent : null;\n\t}\n\n\t// 指定した名前のステートメント(statement)を取得\n\tgetStatement (type: string) {\n\t\tconst statement = Array.from (this.blockXml.children).find ((child) => {\n\t\t\treturn child.tagName === \"statement\" && child.getAttribute (\"name\") === type;\n\t\t});\n\t\treturn statement ? statement.children[0] : null;\n\t}\n\n\t// ブロックのワークスペースを設定\n\tsetWorkspace (workspace: Blockly.Workspace | null) {\n\t\tthis.workspace = workspace;\n\t\tconst id = this.blockXml.getAttribute (\"id\");\n\t\tif (id && workspace) {\n\t\t\tthis.blocklyBlock = workspace.getBlockById (id);\n\t\t}\n\t\tthis.calcBlockColor ();\n\t}\n\n\t// nextタグでつながっているコマンドブロックをオブジェクト化し配列化\n\tstatic constructBlock (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine) {\n\t\tconst constructedBlocks = [];\n\t\tlet block = blockXml;\n\t\twhile (true) {\n\t\t\t// 該当するブロック定義を探し、そのクラスをインスタンス化\n\t\t\tfor (const commandBlockDefinition of BlockDefinitions.commandBlockDefinitions) {\n\t\t\t\tif (commandBlockDefinition.type === block.getAttribute (\"type\")) {\n\t\t\t\t\tconst wait = commandBlockDefinition.wait;\n\t\t\t\t\tconst randomSpeed = commandBlockDefinition.randomSpeed;\n\t\t\t\t\tconstructedBlocks.push (commandBlockDefinition.instantiate (block, workspace, userProgram, myRoutine, wait, randomSpeed));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 次のブロックが存在するか調べる\n\t\t\tconst next = Array.from (block.children).find ((child) => {\n\t\t\t\treturn child.nodeName === \"next\";\n\t\t\t});\n\t\t\tif (next) {\n\t\t\t\tblock = next.getElementsByTagName (\"block\")[0];\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn constructedBlocks;\n\t}\n}\n\nexport class PrintBlock extends CommandBlock {\n\ttext: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst text = super.getValue (\"TEXT\");\n\t\tthis.text = text ? ValueBlockBehaviors.ValueBlock.constructBlock (text, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.text);\n\n\t\tconst text = await this.userProgram.executeValueBlock (this.text);\n\t\tthis.userProgram.mission.printLog (text.toString ());\n\t}\n}\n\nexport class SecondsWaitBlock extends CommandBlock {\n\tsecond: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst second = super.getValue (\"second\");\n\t\tthis.second = second ? ValueBlockBehaviors.ValueBlock.constructBlock (second, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.second);\n\n\t\tconst wait = await this.userProgram.executeValueBlock (this.second);\n\t\tassertIsNumber (wait);\n\t\tthis.wait = wait * 1000;\n\t}\n}\n\nexport class MilliSecondsWaitBlock extends CommandBlock {\n\tmillisecond: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst second = super.getValue (\"millisecond\");\n\t\tthis.millisecond = second ? ValueBlockBehaviors.ValueBlock.constructBlock (second, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.millisecond);\n\n\t\tconst wait = await this.userProgram.executeValueBlock (this.millisecond);\n\t\tassertIsNumber (wait);\n\t\tthis.wait = wait;\n\t}\n}\n\nexport class IfBlock extends CommandBlock {\n\tcondition: ValueBlockBehaviors.ValueBlock | null;\n\tstatement: CommandBlock[];\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst condition = super.getValue (\"IF0\");\n\t\tthis.condition = condition ? ValueBlockBehaviors.ValueBlock.constructBlock (condition, userProgram, myRoutine) : null;\n\t\tconst statement = super.getStatement (\"DO0\");\n\t\tthis.statement = statement ? CommandBlock.constructBlock (statement, workspace, userProgram, myRoutine) : [];\n\t\tthis.setWorkspace (workspace);\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.condition);\n\n\t\tif (await this.userProgram.executeValueBlock (this.condition)) {\n\t\t\tawait this.userProgram.executeBlockList (this.statement);\n\t\t}\n\t}\n\n\tsetWorkspace (workspace: Blockly.Workspace | null) {\n\t\tsuper.setWorkspace (workspace);\n\t\tfor (const commandBlock of this.statement) {\n\t\t\tcommandBlock.setWorkspace (workspace);\n\t\t}\n\t}\n}\n\nexport class IfElseBlock extends CommandBlock {\n\tcondition: ValueBlockBehaviors.ValueBlock | null;\n\tstatement1: CommandBlock[];\n\tstatement2: CommandBlock[];\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst condition = super.getValue (\"IF0\");\n\t\tthis.condition = condition ? ValueBlockBehaviors.ValueBlock.constructBlock (condition, userProgram, myRoutine) : null;\n\t\tconst statement1 = super.getStatement (\"DO0\");\n\t\tthis.statement1 = statement1 ? CommandBlock.constructBlock (statement1, workspace, userProgram, myRoutine) : [];\n\t\tconst statement2 = super.getStatement (\"ELSE\");\n\t\tthis.statement2 = statement2 ? CommandBlock.constructBlock (statement2, workspace, userProgram, myRoutine) : [];\n\t\tthis.setWorkspace (workspace);\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.condition);\n\n\t\tif (await this.userProgram.executeValueBlock (this.condition)) {\n\t\t\tawait this.userProgram.executeBlockList (this.statement1);\n\t\t} else {\n\t\t\tawait this.userProgram.executeBlockList (this.statement2);\n\t\t}\n\t}\n\n\tsetWorkspace (workspace: Blockly.Workspace | null) {\n\t\tsuper.setWorkspace (workspace);\n\t\tfor (const commandBlock of this.statement1) {\n\t\t\tcommandBlock.setWorkspace (workspace);\n\t\t}\n\t\tfor (const commandBlock of this.statement2) {\n\t\t\tcommandBlock.setWorkspace (workspace);\n\t\t}\n\t}\n}\n\nexport class ForBlock extends CommandBlock {\n\tcount: ValueBlockBehaviors.ValueBlock | null;\n\tstatement: CommandBlock [];\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst count = super.getValue (\"TIMES\");\n\t\tthis.count = count ? ValueBlockBehaviors.ValueBlock.constructBlock (count, userProgram, myRoutine) : null;\n\t\tconst statement = super.getStatement (\"DO\");\n\t\tthis.statement = statement ? CommandBlock.constructBlock (statement, workspace, userProgram, myRoutine) : [];\n\t\tthis.setWorkspace (workspace);\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.count);\n\n\t\tconst count = await this.userProgram.executeValueBlock (this.count);\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tif (!this.userProgram.stopFlg) {\n\t\t\t\tawait this.userProgram.executeBlockList (this.statement);\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tsetWorkspace (workspace: Blockly.Workspace | null) {\n\t\tsuper.setWorkspace (workspace);\n\t\tfor (const commandBlock of this.statement) {\n\t\t\tcommandBlock.setWorkspace (workspace);\n\t\t}\n\t}\n}\n\nexport class WhileBlock extends CommandBlock {\n\tmode: string;\n\tcondition: ValueBlockBehaviors.ValueBlock | null;\n\tstatement: CommandBlock[];\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst mode = super.getField (\"MODE\");\n\t\tthis.mode = mode ? mode : \"\";\n\t\tconst condition = super.getValue (\"BOOL\");\n\t\tthis.condition = condition ? ValueBlockBehaviors.ValueBlock.constructBlock (condition, userProgram, myRoutine) : null;\n\t\tconst statement = super.getStatement (\"DO\");\n\t\tthis.statement = statement ? CommandBlock.constructBlock (statement, workspace, userProgram, myRoutine) : [];\n\t\tthis.setWorkspace (workspace);\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.condition);\n\n\t\tswitch (this.mode) {\n\t\t\tcase \"WHILE\":\n\t\t\t\twhile (await this.userProgram.executeValueBlock (this.condition)) {\n\t\t\t\t\tif (!this.userProgram.stopFlg) {\n\t\t\t\t\t\tawait this.userProgram.executeBlockList (this.statement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"UNTIL\":\n\t\t\t\twhile (!await this.userProgram.executeValueBlock (this.condition)) {\n\t\t\t\t\tif (!this.userProgram.stopFlg) {\n\t\t\t\t\t\tawait this.userProgram.executeBlockList (this.statement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tsetWorkspace (workspace: Blockly.Workspace | null) {\n\t\tsuper.setWorkspace (workspace);\n\t\tfor (const commandBlock of this.statement) {\n\t\t\tcommandBlock.setWorkspace (workspace);\n\t\t}\n\t}\n}\n\nexport class VariablesSetNumber extends CommandBlock {\n\tvariable: string;\n\tvalue: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst variable = super.getField (\"variable\");\n\t\tthis.variable = variable ? variable : \"\";\n\t\tconst value = super.getValue (\"value\");\n\t\tthis.value = value ? ValueBlockBehaviors.ValueBlock.constructBlock (value, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.value);\n\n\t\tconst value = await this.userProgram.executeValueBlock (this.value);\n\t\tassertIsNumber (value);\n\t\tthis.myRoutine?.writeLocalNumberVariable (this.variable, value);\n\t}\n}\n\nexport class VariablesAddNumber extends CommandBlock {\n\tvariable: string;\n\tvalue: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst variable = super.getField (\"variable\");\n\t\tthis.variable = variable ? variable : \"\";\n\t\tconst value = super.getValue (\"value\");\n\t\tthis.value = value ? ValueBlockBehaviors.ValueBlock.constructBlock (value, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.value);\n\n\t\tconst operand = this.myRoutine?.readLocalNumberVariable (this.variable);\n\t\tconst value = await this.userProgram.executeValueBlock (this.value);\n\t\tassertIsNumber (value);\n\t\tthis.myRoutine?.writeLocalNumberVariable (this.variable, operand + value);\n\t}\n}\n\nexport class VariablesSetString extends CommandBlock {\n\tvariable: string;\n\tvalue: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst variable = super.getField (\"variable\");\n\t\tthis.variable = variable ? variable : \"\";\n\t\tconst value = super.getValue (\"value\");\n\t\tthis.value = value ? ValueBlockBehaviors.ValueBlock.constructBlock (value, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.value);\n\n\t\tconst value = await this.userProgram.executeValueBlock (this.value);\n\t\tassertIsString (value);\n\t\tthis.myRoutine?.writeLocalStringVariable (this.variable, value);\n\t}\n}\n\nexport class GlobalVariableWriteBlock extends CommandBlock {\n\tname: string;\n\tvalue: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst name = super.getField (\"name\");\n\t\tthis.name = name ? name : \"\";\n\t\tconst value = super.getValue (\"value\");\n\t\tthis.value = value ? ValueBlockBehaviors.ValueBlock.constructBlock (value, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.value);\n\n\t\tconst value = await this.userProgram.executeValueBlock (this.value);\n\t\tassertIsNumber (value);\n\n\t\tthis.userProgram.mission.addGlobalVariableAccess (this.name, this.myRoutine.routineColor, false);\n\n\t\tthis.userProgram.mission.writeVariable (this.name, value);\n\t}\n\n\tfinalizeBlock () {\n\t\tthis.userProgram.mission.removeGlobalVariableAccess (this.name, this.myRoutine.routineColor, false);\n\t}\n}\n\nexport class GlobalOneDimensionalArrayWrite extends CommandBlock {\n\tname: string;\n\tindex: ValueBlockBehaviors.ValueBlock | null;\n\tindexNumber: number = 0;\n\tvalue: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst name = super.getField (\"name\");\n\t\tthis.name = name ? name : \"\";\n\t\tconst index = super.getValue (\"index\");\n\t\tthis.index = index ? ValueBlockBehaviors.ValueBlock.constructBlock (index, userProgram, myRoutine) : null;\n\t\tconst value = super.getValue (\"value\");\n\t\tthis.value = value ? ValueBlockBehaviors.ValueBlock.constructBlock (value, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.index);\n\t\tassertIsDefined (this.value);\n\n\t\tconst index = await this.userProgram.executeValueBlock (this.index);\n\t\tconst value = await this.userProgram.executeValueBlock (this.value);\n\t\tassertIsNumber (index);\n\t\tthis.indexNumber = index;\n\t\tassertIsNumber (value);\n\n\t\tthis.userProgram.mission.addOneDimensionalArrayAccess (this.name, this.indexNumber, this.myRoutine.routineColor, false);\n\t\tthis.userProgram.mission.writeOneDimensionalArray (this.name, this.indexNumber, value);\n\t}\n\n\tfinalizeBlock () {\n\t\tthis.userProgram.mission.removeOneDimensionalArrayAccess (this.name, this.indexNumber, this.myRoutine.routineColor, false);\n\t}\n}\n\nexport class GlobalTwoDimensionalArrayWrite extends CommandBlock {\n\tname: string;\n\trow: ValueBlockBehaviors.ValueBlock | null;\n\trowNumber: number = 0;\n\tcol: ValueBlockBehaviors.ValueBlock | null;\n\tcolNumber: number = 0;\n\tvalue: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst name = super.getField (\"name\");\n\t\tthis.name = name ? name : \"\";\n\t\tconst row = super.getValue (\"row\");\n\t\tthis.row = row ? ValueBlockBehaviors.ValueBlock.constructBlock (row, userProgram, myRoutine) : null;\n\t\tconst col = super.getValue (\"col\");\n\t\tthis.col = col ? ValueBlockBehaviors.ValueBlock.constructBlock (col, userProgram, myRoutine) : null;\n\t\tconst value = super.getValue (\"value\");\n\t\tthis.value = value ? ValueBlockBehaviors.ValueBlock.constructBlock (value, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.row);\n\t\tassertIsDefined (this.col);\n\t\tassertIsDefined (this.value);\n\n\t\tconst row = await this.userProgram.executeValueBlock (this.row);\n\t\tconst col = await this.userProgram.executeValueBlock (this.col);\n\t\tconst value = await this.userProgram.executeValueBlock (this.value);\n\t\tassertIsNumber (row);\n\t\tassertIsNumber (col);\n\t\tthis.rowNumber = row;\n\t\tthis.colNumber = col;\n\t\tassertIsNumber (value);\n\n\t\tthis.userProgram.mission.addTwoDimensionalArrayAccess (this.name, this.rowNumber, this.colNumber, this.myRoutine.routineColor, false);\n\t\tthis.userProgram.mission.writeTwoDimensionalArray (this.name, row, col, value);\n\t}\n\n\tfinalizeBlock () {\n\t\tthis.userProgram.mission.removeTwoDimensionalArrayAccess (this.name, this.rowNumber, this.colNumber, this.myRoutine.routineColor, false);\n\t}\n}\n\nexport class FunctionDefinitionBlock extends CommandBlock {\n\tfunctionName: string;\n\tstatement: CommandBlock[];\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst functionName = super.getField (\"name\");\n\t\tthis.functionName = functionName ? functionName : \"\";\n\t\tconst statement = blockXml.getElementsByTagName (\"statement\");\n\t\tif (statement.length > 0 && statement[0].getAttribute (\"name\") === \"routine\") {\n\t\t\tthis.statement = CommandBlock.constructBlock (statement[0].getElementsByTagName (\"block\")[0], workspace, userProgram, myRoutine);\n\t\t} else {\n\t\t\tthis.statement = [];\n\t\t}\n\t\tthis.setWorkspace (workspace);\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.statement);\n\n\t\tawait this.userProgram.executeBlockList (this.statement);\n\t}\n\n\tsetWorkspace (workspace: Blockly.Workspace | null) {\n\t\tsuper.setWorkspace (workspace);\n\t\tfor (const commandBlock of this.statement) {\n\t\t\tcommandBlock.setWorkspace (workspace);\n\t\t}\n\t}\n\n\tstatic constructBlock (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine) {\n\t\tconst blockType = \"function_definition\";\n\t\tif (blockXml.getAttribute (\"type\") === blockType) {\n\t\t\tconst functionBlockDefinition = BlockDefinitions.commandBlockDefinitions.find ((definition) => {\n\t\t\t\treturn definition.type === blockType\n\t\t\t});\n\n\t\t\tif (functionBlockDefinition) {\n\t\t\t\treturn [new FunctionDefinitionBlock (blockXml, workspace, userProgram, myRoutine, functionBlockDefinition.wait, functionBlockDefinition.randomSpeed)];\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n}\n\nexport class FunctionCallBlock extends CommandBlock {\n\tname: string;\n\targument1: ValueBlockBehaviors.ValueBlock | null;\n\targument2: ValueBlockBehaviors.ValueBlock | null;\n\targument3: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst name = super.getField (\"name\");\n\t\tthis.name = name ? name : \"\";\n\n\t\tconst argument1 = super.getValue (\"argument1\");\n\t\tthis.argument1 = argument1 ? ValueBlockBehaviors.ValueBlock.constructBlock (argument1, userProgram, myRoutine) : null;\n\t\tconst argument2 = super.getValue (\"argument2\");\n\t\tthis.argument2 = argument2 ? ValueBlockBehaviors.ValueBlock.constructBlock (argument2, userProgram, myRoutine) : null;\n\t\tconst argument3 = super.getValue (\"argument3\");\n\t\tthis.argument3 = argument3 ? ValueBlockBehaviors.ValueBlock.constructBlock (argument3, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.argument1);\n\t\tassertIsDefined (this.argument2);\n\t\tassertIsDefined (this.argument3);\n\t\tconst argument1 = await this.userProgram.executeValueBlock (this.argument1);\n\t\tconst argument2 = await this.userProgram.executeValueBlock (this.argument2);\n\t\tconst argument3 = await this.userProgram.executeValueBlock (this.argument3);\n\t\tassertIsNumber (argument1);\n\t\tassertIsNumber (argument2);\n\t\tassertIsNumber (argument3);\n\n\t\tawait this.userProgram.executeFunction (this.name, argument1, argument2, argument3);\n\t}\n}\n\nexport class ReturnValueBlock extends CommandBlock {\n\treturnValue: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\n\t\tconst returnValue = super.getValue (\"return_value\");\n\t\tthis.returnValue = returnValue ? ValueBlockBehaviors.ValueBlock.constructBlock (returnValue, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.returnValue);\n\t\tconst returnValue = await this.userProgram.executeValueBlock (this.returnValue);\n\t\tassertIsNumber (returnValue);\n\n\t\tthis.myRoutine.returnValue = returnValue;\n\t}\n}\n\nexport class EntryPointBlock extends CommandBlock {\n\tstatement: CommandBlock[];\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst statement = blockXml.getElementsByTagName (\"statement\");\n\t\tif (statement.length > 0 && statement[0].getAttribute (\"name\") === \"routine\") {\n\t\t\tthis.statement = CommandBlock.constructBlock (statement[0].getElementsByTagName (\"block\")[0], workspace, userProgram, myRoutine);\n\t\t} else {\n\t\t\tthis.statement = [];\n\t\t}\n\t\tthis.setWorkspace (workspace);\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.statement);\n\n\t\tawait this.userProgram.executeBlockList (this.statement);\n\t}\n\n\tsetWorkspace (workspace: Blockly.Workspace | null) {\n\t\tsuper.setWorkspace (workspace);\n\t\tfor (const commandBlock of this.statement) {\n\t\t\tcommandBlock.setWorkspace (workspace);\n\t\t}\n\t}\n\n\tstatic constructBlock (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine) {\n\t\tconst blockType = \"entry_point\";\n\t\tif (blockXml.getAttribute (\"type\") === blockType) {\n\t\t\tconst functionBlockDefinition = BlockDefinitions.commandBlockDefinitions.find ((definition) => {\n\t\t\t\treturn definition.type === blockType\n\t\t\t});\n\n\t\t\tif (functionBlockDefinition) {\n\t\t\t\treturn [new EntryPointBlock (blockXml, workspace, userProgram, myRoutine, functionBlockDefinition.wait, functionBlockDefinition.randomSpeed)];\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n}\n\nexport class StopwatchStartBlock extends CommandBlock {\n\tswNumber: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst swNumber = super.getValue (\"number\");\n\t\tthis.swNumber = swNumber ? ValueBlockBehaviors.ValueBlock.constructBlock (swNumber, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.swNumber);\n\n\t\tconst swNumber = await this.userProgram.executeValueBlock (this.swNumber);\n\t\tassertIsNumber (swNumber);\n\t\tthis.userProgram.getStopwatch (swNumber).start ();\n\t}\n}\n\nexport class StopwatchStopBlock extends CommandBlock {\n\tswNumber: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst swNumber = super.getValue (\"number\");\n\t\tthis.swNumber = swNumber ? ValueBlockBehaviors.ValueBlock.constructBlock (swNumber, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.swNumber);\n\n\t\tconst swNumber = await this.userProgram.executeValueBlock (this.swNumber);\n\t\tassertIsNumber (swNumber);\n\t\tthis.userProgram.getStopwatch (swNumber).stop ();\n\t}\n}\n\nexport class StopwatchResetBlock extends CommandBlock {\n\tswNumber: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst swNumber = super.getValue (\"number\");\n\t\tthis.swNumber = swNumber ? ValueBlockBehaviors.ValueBlock.constructBlock (swNumber, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.swNumber);\n\n\t\tconst swNumber = await this.userProgram.executeValueBlock (this.swNumber);\n\t\tassertIsNumber (swNumber);\n\t\tthis.userProgram.getStopwatch (swNumber).reset ();\n\t}\n}\n\nexport class ThreadCreateBlock extends CommandBlock {\n\troutineName: string;\n\tthreadID: ValueBlockBehaviors.ValueBlock | null;\n\targument1: ValueBlockBehaviors.ValueBlock | null;\n\targument2: ValueBlockBehaviors.ValueBlock | null;\n\targument3: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst threadFunctionName = super.getField (\"thread_function_name\");\n\t\tthis.routineName = threadFunctionName ? threadFunctionName : \"\";\n\t\tconst threadID = super.getValue (\"thread_name\");\n\t\tthis.threadID = threadID ? ValueBlockBehaviors.ValueBlock.constructBlock (threadID, userProgram, myRoutine) : null;\n\t\tconst argument1 = super.getValue (\"argument1\");\n\t\tthis.argument1 = argument1 ? ValueBlockBehaviors.ValueBlock.constructBlock (argument1, userProgram, myRoutine) : null;\n\t\tconst argument2 = super.getValue (\"argument2\");\n\t\tthis.argument2 = argument2 ? ValueBlockBehaviors.ValueBlock.constructBlock (argument2, userProgram, myRoutine) : null;\n\t\tconst argument3 = super.getValue (\"argument3\");\n\t\tthis.argument3 = argument3 ? ValueBlockBehaviors.ValueBlock.constructBlock (argument3, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.threadID);\n\n\t\tconst threadID = await this.userProgram.executeValueBlock (this.threadID);\n\t\tassertIsString (threadID);\n\n\t\tassertIsDefined (this.argument1);\n\t\tassertIsDefined (this.argument2);\n\t\tassertIsDefined (this.argument3);\n\t\tconst argument1 = await this.userProgram.executeValueBlock (this.argument1);\n\t\tconst argument2 = await this.userProgram.executeValueBlock (this.argument2);\n\t\tconst argument3 = await this.userProgram.executeValueBlock (this.argument3);\n\t\tassertIsNumber (argument1);\n\t\tassertIsNumber (argument2);\n\t\tassertIsNumber (argument3);\n\n\t\tconst functionStatementElement = this.userProgram.getFunctionStatementElementByName (this.routineName);\n\t\tif (functionStatementElement) {\n\t\t\tif (this.userProgram.addThread (this.routineName, threadID, functionStatementElement.element, argument1, argument2, argument3)) {\n\t\t\t\tthis.userProgram.executeThread (threadID);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.userProgram.mission.printError (`\"${this.routineName}\" という名前の関数はありません！`);\n\t\t}\n\t}\n}\n\nexport class ThreadJoinBlock extends CommandBlock {\n\tthreadID: ValueBlockBehaviors.ValueBlock | null;\n\tthreadIDStr: string;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst threadID = super.getValue (\"thread_name\");\n\t\tthis.threadID = threadID ? ValueBlockBehaviors.ValueBlock.constructBlock (threadID, userProgram, myRoutine) : null;\n\t\tthis.threadIDStr = \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.threadID);\n\n\t\tconst threadName = await this.userProgram.executeValueBlock (this.threadID);\n\t\tassertIsString (threadName);\n\t\tthis.threadIDStr = threadName;\n\t}\n\n\tisWaiting () {\n\t\tconst thread = this.userProgram.getThread (this.threadIDStr);\n\t\tif (thread) {\n\t\t\treturn thread.isExecuting;\n\t\t} else {\n\t\t\tthis.userProgram.mission.printError (`\"${this.threadIDStr}\" というスレッドは存在しません！`);\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport class MutexLockBlock extends CommandBlock {\n\tmutexID: ValueBlockBehaviors.ValueBlock | null;\n\tmutexIDStr: string;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst mutexID = super.getValue (\"mutex_id\");\n\t\tthis.mutexID = mutexID ? ValueBlockBehaviors.ValueBlock.constructBlock (mutexID, userProgram, myRoutine) : null;\n\t\tthis.mutexIDStr = \"\";\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.mutexID);\n\n\t\tconst mutexID = await this.userProgram.executeValueBlock (this.mutexID);\n\t\tassertIsString (mutexID);\n\t\tthis.mutexIDStr = mutexID;\n\t}\n\n\tisWaiting () {\n\t\treturn !this.userProgram.lockMutex (this.mutexIDStr);\n\t}\n}\n\nexport class MutexUnlockBlock extends CommandBlock {\n\tmutexID: ValueBlockBehaviors.ValueBlock | null;\n\n\tconstructor (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: BlockDefinitions.UserProgram, myRoutine: BlockDefinitions.Routine, wait: number, randomSpeed: boolean) {\n\t\tsuper (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\tconst mutexID = super.getValue (\"mutex_id\");\n\t\tthis.mutexID = mutexID ? ValueBlockBehaviors.ValueBlock.constructBlock (mutexID, userProgram, myRoutine) : null;\n\t}\n\n\tasync executeBlock () {\n\t\tassertIsDefined (this.mutexID);\n\n\t\tconst mutexID = await this.userProgram.executeValueBlock (this.mutexID);\n\t\tassertIsString (mutexID);\n\n\t\tthis.userProgram.unlockMutex (mutexID);\n\t}\n}\n","// ========== ブロック形状や動作を定義するファイル ==========\n\nimport * as CommandBlockBehaviors from \"./commandBlockBehavior\";\nimport * as ValueBlockBehaviors from \"./valueBlockBehaviors\";\nimport {assertIsDefined} from \"./common\";\nimport {Mission} from \"./mission\";\nimport * as Blockly from \"blockly\";\n\nexport class UserProgram {\n\tstopFlg: boolean = false;\n\tprogramSpeed: number = 1;\n\tmission: Mission;\n\tentryFunction: Function | null = null; // エントリポイント\n\tfunctions: Function[] = []; // 関数一覧\n\tthreads: Thread[] = []; // スレッド一覧\n\tmaxThreadCount: number = 4; // スレッド数上限\n\tfunctionStatementElements: { name: string, element: Element }[] = [];\n\tcurrentMilliSecond: number = 0;\n\toldTime: number = 0;\n\tmutexes: { [key: string]: boolean } = {};\n\tstopwatches: { key: number, sw: Stopwatch } [] = []; // ストップウォッチ一覧\n\n\tconstructor (xml: Element, mission: Mission, workspace: Blockly.Workspace | null) {\n\t\tconsole.log (xml);\n\n\t\t// ミッションを保持\n\t\tthis.mission = mission;\n\n\t\t// ワークスペース内にあるエントリポイントと全ての関数定義ブロックをリストアップ\n\t\tconst blocks = xml.getElementsByTagName (\"block\");\n\t\tconst entryFunctionXml = Array.from (blocks).find ((block) => {\n\t\t\treturn block.getAttribute (\"type\") === \"entry_point\";\n\t\t});\n\t\tconst functionsXml = Array.from (blocks).filter ((block) => {\n\t\t\treturn block.getAttribute (\"type\") === \"function_definition\";\n\t\t});\n\n\t\t// エントリポイントと関数ブロックのXMLをパース\n\t\tif (entryFunctionXml) {\n\t\t\tthis.entryFunction = new Function (\"スタート\", \"rgb(0, 0, 0)\", null, entryFunctionXml);\n\t\t\tconst entryFunctionBlock = CommandBlockBehaviors.EntryPointBlock.constructBlock (entryFunctionXml, workspace, this, this.entryFunction)[0];\n\t\t\tthis.entryFunction.setDefinitionBlock (entryFunctionBlock);\n\t\t}\n\t\tfor (const functionXml of functionsXml) {\n\t\t\tconst func = new Function (\"\", \"rgb(0,0,0)\", null, functionXml);\n\t\t\tconst functionBlock = CommandBlockBehaviors.FunctionDefinitionBlock.constructBlock (functionXml, workspace, this, func)[0];\n\t\t\tfunc.setDefinitionBlock (functionBlock);\n\t\t\tfunc.setFunctionName (functionBlock.functionName);\n\t\t\tthis.functions.push (func);\n\t\t\tthis.functionStatementElements.push ({name: functionBlock.functionName, element: functionXml});\n\t\t}\n\n\t\tconsole.log (\"エントリポイント\", this.entryFunction);\n\t\tconsole.log (\"関数\", this.functions);\n\t}\n\n\tasync executeBlockList (blockList: CommandBlockBehaviors.CommandBlock[]) {\n\t\tfor (const block of blockList) {\n\t\t\tif (!this.stopFlg) {\n\t\t\t\tblock.setBlockColorToExecuting (); // 色を変える\n\n\t\t\t\tawait block.executeBlock ();\n\n\t\t\t\t// 各ブロックの待機時間\n\t\t\t\tconst start = new Date ();\n\t\t\t\tlet time = 0;\n\t\t\t\tconst random = block.randomSpeed ? Math.random () * (1.15 - 0.85) + 0.85 : 1;\n\t\t\t\tconst wait = block.wait * (1 / this.programSpeed) * random;\n\t\t\t\twhile (time < wait && !this.stopFlg) {\n\t\t\t\t\tawait this.sleep1ms ();\n\t\t\t\t\ttime = new Date ().getTime () - start.getTime ();\n\t\t\t\t}\n\t\t\t\t// 動的時間待機を考慮\n\t\t\t\twhile (block.isWaiting () && !this.stopFlg) {\n\t\t\t\t\tawait this.sleep1ms ();\n\t\t\t\t}\n\n\t\t\t\tblock.finalizeBlock ();\n\n\t\t\t\tblock.setBlockColorToBase (); // 色を戻す\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync executeUserProgram () {\n\t\tassertIsDefined (this.entryFunction);\n\n\t\tthis.oldTime = Date.now ();\n\t\tsetTimeout (() => {\n\t\t\tthis.tick ();\n\t\t}, 1);\n\t\tawait this.entryFunction.executeBlock ();\n\t\tthis.stopUserProgram ();\n\t}\n\n\tasync executeValueBlock (valueBlock: ValueBlockBehaviors.ValueBlock) {\n\t\tconst result = await valueBlock.executeBlock ();\n\n\t\t// 各ブロックの待機時間\n\t\tconst start = new Date ();\n\t\tlet time = 0;\n\t\tconst random = Math.random () * (1.15 - 0.85) + 0.85;\n\t\tconst wait = valueBlock.wait * (1 / this.programSpeed) * random;\n\t\twhile (time < wait && !this.stopFlg) {\n\t\t\tawait this.sleep1ms ();\n\t\t\ttime = new Date ().getTime () - start.getTime ();\n\t\t}\n\n\t\tvalueBlock.finalizeBlock ();\n\n\t\treturn result;\n\t}\n\n\tsleep1ms () {\n\t\treturn new Promise (resolve => setTimeout (resolve, 1));\n\t}\n\n\tstopUserProgram () {\n\t\tthis.stopFlg = true;\n\t}\n\n\tsetProgramSpeed (speed: number) {\n\t\tthis.programSpeed = speed;\n\t}\n\n\tasync executeFunction (functionName: string, argument1: number, argument2: number, argument3: number) {\n\t\t// 関数名が一致する関数を実行\n\t\tconst searchedFunction = this.getFunctionByName (functionName);\n\t\tif (searchedFunction) {\n\t\t\tsearchedFunction.setArguments (argument1, argument2, argument3);\n\t\t\tawait searchedFunction.executeBlock ();\n\t\t\treturn searchedFunction.returnValue;\n\t\t} else {\n\t\t\tthis.mission.printError (`\"${functionName}\" という関数は存在しません！`);\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tgetFunctionByName (functionName: string) {\n\t\treturn this.functions.find ((func) => {\n\t\t\treturn func.routineName === functionName;\n\t\t});\n\t}\n\n\tgetFunctionStatementElementByName (functionName: string) {\n\t\treturn this.functionStatementElements.find ((item) => {\n\t\t\treturn item.name === functionName;\n\t\t});\n\t}\n\n\taddStopwatch (swNumber: number) {\n\t\t// 番号が重複していたら上書き、そうでなければ追加\n\t\tconst searchedIndex = this.stopwatches.findIndex ((sw) => {\n\t\t\treturn sw.key === swNumber;\n\t\t});\n\n\t\tif (searchedIndex === -1) {\n\t\t\tthis.stopwatches.push ({key: swNumber, sw: new Stopwatch (this)});\n\t\t} else {\n\t\t\tthis.stopwatches[searchedIndex] = {key: swNumber, sw: new Stopwatch (this)};\n\t\t}\n\t}\n\n\tgetStopwatch (swNumber: number): Stopwatch {\n\t\tconst searched = this.stopwatches.find ((sw) => {\n\t\t\treturn sw.key === swNumber;\n\t\t});\n\n\t\tif (searched) {\n\t\t\treturn searched.sw;\n\t\t} else {\n\t\t\tthis.addStopwatch (swNumber);\n\t\t\treturn this.getStopwatch (swNumber);\n\t\t}\n\t}\n\n\taddThread (routineName: string, threadID: string, functionStatementElement: Element,\n\t\t\t   argument1: number, argument2: number, argument3: number) {\n\t\tif (this.threads.length >= this.maxThreadCount) {\n\t\t\t// スレッド数上限だったらエラー\n\t\t\tthis.mission.printError (`${this.maxThreadCount}つより多くのスレッドを作成することはできません！`);\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getThread (threadID)) {\n\t\t\t// 同名スレッドあったらエラー\n\t\t\tthis.mission.printError (`\"${threadID}\" というスレッドはすでに存在します！`);\n\t\t\treturn false;\n\t\t}\n\n\t\t// 各スレッドの色\n\t\tconst threadColors = [\"rgb(234, 57, 25)\", \"rgb(36, 234, 25)\", \"rgb(25, 36, 234)\", \"rgb(237, 185, 24)\"];\n\t\tconst thread = new Thread (routineName, threadColors[this.threads.length], threadID, null, this, functionStatementElement, argument1, argument2, argument3);\n\t\tconst functionInstance = CommandBlockBehaviors.FunctionDefinitionBlock.constructBlock (functionStatementElement, null, this, thread)[0];\n\t\tthread.setDefinitionBlock (functionInstance);\n\t\tthis.threads.push (thread);\n\n\t\treturn true;\n\t}\n\n\tremoveThread (threadID: string) {\n\t\tthis.threads = this.threads.filter ((item) => {\n\t\t\treturn item.threadID !== threadID;\n\t\t});\n\t}\n\n\tsetWorkspaceToThread (threadIndex: number, workspace: Blockly.Workspace) {\n\t\tif (this.threads.length > threadIndex) {\n\t\t\tthis.threads[threadIndex].setWorkspace (workspace);\n\t\t}\n\t}\n\n\tasync executeThread (threadID: string) {\n\t\tconst thread = this.getThread (threadID);\n\t\tif (thread) {\n\t\t\tawait thread.executeBlock ();\n\t\t}\n\t}\n\n\tgetThread (threadID: string) {\n\t\treturn this.threads.find ((thread) => {\n\t\t\treturn thread.threadID === threadID;\n\t\t});\n\t}\n\n\tlockMutex (mutexID: string) {\n\t\tfor (const key of Object.keys (this.mutexes)) {\n\t\t\tif (key === mutexID) {\n\t\t\t\tif (!this.mutexes[key]) {\n\t\t\t\t\t// ロックされてない\n\t\t\t\t\tthis.mutexes[key] = true;\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\t// ロックされてる\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.mutexes[mutexID] = true;\n\t\treturn true;\n\t}\n\n\tunlockMutex (mutexID: string) {\n\t\tfor (const key of Object.keys (this.mutexes)) {\n\t\t\tif (key === mutexID) {\n\t\t\t\tthis.mutexes[key] = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCurrentMilliSecond () {\n\t\treturn this.currentMilliSecond;\n\t}\n\n\ttick () {\n\t\tif (!this.stopFlg) {\n\t\t\tthis.currentMilliSecond += (Date.now () - this.oldTime) * this.programSpeed;\n\t\t\tthis.oldTime = Date.now ();\n\t\t\tsetTimeout (() => {\n\t\t\t\tthis.tick ();\n\t\t\t}, 1);\n\t\t}\n\t}\n}\n\nexport class NumberVariable {\n\tvariableName: string;\n\tvalue: number;\n\n\tconstructor (variableName: string, initValue: number) {\n\t\tthis.variableName = variableName;\n\t\tthis.value = initValue;\n\t}\n\n\treadValue () {\n\t\treturn this.value;\n\t}\n\n\twriteValue (value: number) {\n\t\tthis.value = value;\n\t}\n}\n\nexport class StringVariable {\n\tvariableName: string;\n\tvalue: string;\n\n\tconstructor (variableName: string, initValue: string) {\n\t\tthis.variableName = variableName;\n\t\tthis.value = initValue;\n\t}\n\n\treadValue () {\n\t\treturn this.value;\n\t}\n\n\twriteValue (value: string) {\n\t\tthis.value = value;\n\t}\n}\n\nexport class Stopwatch {\n\tstartTime: number | null = null;\n\tcount = 0;\n\tuserProgram: UserProgram;\n\n\tconstructor (userProgram: UserProgram) {\n\t\tthis.userProgram = userProgram;\n\t}\n\n\tstart () {\n\t\t// 開始時間を記録\n\t\tthis.startTime = this.userProgram.getCurrentMilliSecond ();\n\t}\n\n\tstop () {\n\t\t// 経過時間を加算し、開始時間をリセット\n\t\tif (this.startTime !== null) {\n\t\t\tthis.count += this.userProgram.getCurrentMilliSecond () - this.startTime;\n\t\t}\n\t\tthis.startTime = null;\n\t}\n\n\tread () {\n\t\t// SWカウント中だったら停止→読み取り→再開\n\t\tif (this.startTime !== null) {\n\t\t\tthis.stop ();\n\t\t\tconst count = this.count;\n\t\t\tthis.start ();\n\t\t\treturn count;\n\t\t} else {\n\t\t\treturn this.count;\n\t\t}\n\t}\n\n\treset () {\n\t\t// 停止しリセット\n\t\tthis.stop ();\n\t\tthis.count = 0;\n\t}\n}\n\nexport class Routine {\n\troutineName: string;\n\troutineColor: string;\n\targument1: number = 0;\n\targument2: number = 0;\n\targument3: number = 0;\n\treturnValue: number = 0;\n\tdefinitionBlock: CommandBlockBehaviors.FunctionDefinitionBlock | CommandBlockBehaviors.EntryPointBlock | null;\n\tfunctionStatementElement: Element;\n\tlocalNumberVariables: NumberVariable[] = [];\n\tlocalStringVariables: StringVariable[] = [];\n\n\tconstructor (routineName: string, routineColor: string, definitionBlock: CommandBlockBehaviors.FunctionDefinitionBlock | CommandBlockBehaviors.EntryPointBlock | null, functionStatementElement: Element) {\n\t\tthis.routineName = routineName;\n\t\tthis.routineColor = routineColor;\n\t\tthis.definitionBlock = definitionBlock;\n\t\tthis.functionStatementElement = functionStatementElement;\n\t}\n\n\tasync executeBlock () {\n\t\tthis.returnValue = 0;\n\t\tawait this.definitionBlock?.executeBlock ();\n\t}\n\n\tsetDefinitionBlock (definitionBlock: CommandBlockBehaviors.FunctionDefinitionBlock | CommandBlockBehaviors.EntryPointBlock) {\n\t\tthis.definitionBlock = definitionBlock;\n\t}\n\n\tsetFunctionName (functionName: string) {\n\t\tthis.routineName = functionName;\n\t}\n\n\tsetArguments (argument1: number, argument2: number, argument3: number) {\n\t\tthis.argument1 = argument1;\n\t\tthis.argument2 = argument2;\n\t\tthis.argument3 = argument3;\n\t}\n\n\tgetArgument (argumentNumber: number) {\n\t\tswitch (argumentNumber) {\n\t\t\tcase 0:\n\t\t\t\treturn this.argument1;\n\t\t\tcase 1:\n\t\t\t\treturn this.argument2;\n\t\t\tcase 2:\n\t\t\t\treturn this.argument3;\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\n\treadLocalNumberVariable (variableName: string) {\n\t\treturn this.getLocalNumberVariable (variableName).readValue ();\n\t}\n\n\treadLocalStringVariable (variableName: string) {\n\t\treturn this.getLocalStringVariable (variableName).readValue ();\n\t}\n\n\twriteLocalNumberVariable (variableName: string, value: number) {\n\t\tthis.getLocalNumberVariable (variableName).writeValue (value);\n\t}\n\n\twriteLocalStringVariable (variableName: string, value: string) {\n\t\tthis.getLocalStringVariable (variableName).writeValue (value);\n\t}\n\n\tgetLocalNumberVariable (variableName: string) {\n\t\tconst searchedVariable = this.localNumberVariables.find ((localVariable) => {\n\t\t\treturn localVariable.variableName === variableName;\n\t\t});\n\t\t// なかったら新しい変数を作る\n\t\tif (searchedVariable) {\n\t\t\treturn searchedVariable;\n\t\t} else {\n\t\t\treturn this.addLocalNumberVariable (variableName, 0);\n\t\t}\n\t}\n\n\tgetLocalStringVariable (variableName: string) {\n\t\tconst searchedVariable = this.localStringVariables.find ((localVariable) => {\n\t\t\treturn localVariable.variableName === variableName;\n\t\t});\n\t\t// なかったら新しい変数を作る\n\t\tif (searchedVariable) {\n\t\t\treturn searchedVariable;\n\t\t} else {\n\t\t\treturn this.addLocalStringVariable (variableName, \"\");\n\t\t}\n\t}\n\n\taddLocalNumberVariable (variableName: string, initValue: number) {\n\t\tconst newVariable = new NumberVariable (variableName, initValue);\n\t\tthis.localNumberVariables.push (newVariable);\n\t\treturn newVariable;\n\t}\n\n\taddLocalStringVariable (variableName: string, initValue: string) {\n\t\tconst newVariable = new StringVariable (variableName, initValue);\n\t\tthis.localStringVariables.push (newVariable);\n\t\treturn newVariable;\n\t}\n}\n\nexport class Function extends Routine {\n\tconstructor (routineName: string, routineColor: string, definitionBlock: CommandBlockBehaviors.FunctionDefinitionBlock | CommandBlockBehaviors.EntryPointBlock | null, functionStatementElement: Element) {\n\t\tsuper (routineName, routineColor, definitionBlock, functionStatementElement);\n\t}\n}\n\nexport class Thread extends Routine {\n\tthreadID: string;\n\tuserProgram: UserProgram;\n\tisExecuting: boolean = false;\n\n\tconstructor (routineName: string, routineColor: string, threadID: string, definitionBlock: CommandBlockBehaviors.FunctionDefinitionBlock | null, userProgram: UserProgram, functionStatementElement: Element,\n\t\t\t\t argument1: number, argument2: number, argument3: number) {\n\t\tsuper (routineName, routineColor, definitionBlock, functionStatementElement);\n\t\tthis.threadID = threadID;\n\t\tthis.userProgram = userProgram;\n\t\tthis.argument1 = argument1;\n\t\tthis.argument2 = argument2;\n\t\tthis.argument3 = argument3;\n\t}\n\n\tsetWorkspace (workspace: Blockly.Workspace) {\n\t\tif (this.definitionBlock) {\n\t\t\tthis.definitionBlock.setWorkspace (workspace);\n\t\t}\n\t}\n\n\tasync executeBlock () {\n\t\tthis.userProgram.mission.addThread (this.threadID, this.functionStatementElement);\n\t\tthis.isExecuting = true;\n\t\tawait super.executeBlock ();\n\t\tthis.isExecuting = false;\n\t\tthis.userProgram.mission.removeThread (this.threadID);\n\t}\n}\n\nexport const commandBlockDefinitions = [\n\t// ========== print ==========\n\t{\n\t\ttype: \"text_print\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.PrintBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t}\n\t},\n\n\t// ========== ミリ秒待機 ==========\n\t{\n\t\ttype: \"wait_ms\",\n\t\twait: 0,\n\t\trandomSpeed: false,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.MilliSecondsWaitBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"wait_ms\",\n\t\t\t\"message0\": \"%1 ミリ秒待機\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"millisecond\",\n\t\t\t\t\t\"check\": \"Number\",\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"指定したミリ秒数だけ処理を停止します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== 秒数待機 ==========\n\t{\n\t\ttype: \"wait_s\",\n\t\twait: 0,\n\t\trandomSpeed: false,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.SecondsWaitBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"wait_s\",\n\t\t\t\"message0\": \"%1 秒待機\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"second\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"指定した秒数だけ処理を停止します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== if ==========\n\t{\n\t\ttype: \"controls_if\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.IfBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t}\n\t},\n\n\t// ========== if-else ==========\n\t{\n\t\ttype: \"controls_ifelse\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.IfElseBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t}\n\t},\n\n\t// ========== for ==========\n\t{\n\t\ttype: \"controls_repeat_ext\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.ForBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t}\n\t},\n\n\t// ========== while ==========\n\t{\n\t\ttype: \"controls_whileUntil\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.WhileBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t}\n\t},\n\n\t// ========== 数値型変数書き込み ==========\n\t{\n\t\ttype: \"variables_set_number\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.VariablesSetNumber (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"variables_set_number\",\n\t\t\t\"message0\": \"%{BKY_VARIABLES_SET}\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_variable\",\n\t\t\t\t\t\"name\": \"variable\",\n\t\t\t\t\t\"variable\": \"%{BKY_VARIABLES_DEFAULT_NAME}\",\n\t\t\t\t\t\"variableTypes\": [\"Number\"],\n\t\t\t\t\t\"defaultType\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"style\": \"variable_blocks\",\n\t\t\t\"tooltip\": \"%{BKY_VARIABLES_SET_TOOLTIP}\",\n\t\t\t\"helpUrl\": \"%{BKY_VARIABLES_SET_HELPURL}\",\n\t\t\t\"extensions\": [\"contextMenu_variableSetterGetter\"]\n\t\t}\n\t},\n\n\t// ========== 数値型変数加算 ==========\n\t{\n\t\ttype: \"variables_add_number\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.VariablesAddNumber (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"variables_add_number\",\n\t\t\t\"message0\": \"%1 に %2 を加算\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_variable\",\n\t\t\t\t\t\"name\": \"variable\",\n\t\t\t\t\t\"variable\": \"%{BKY_VARIABLES_DEFAULT_NAME}\",\n\t\t\t\t\t\"variableTypes\": [\"Number\"],\n\t\t\t\t\t\"defaultType\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"style\": \"variable_blocks\",\n\t\t\t// \"colour\": 330,\n\t\t\t\"tooltip\": \"数値型変数に値を足します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== 文字列型変数書き込み ==========\n\t{\n\t\ttype: \"variables_set_string\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.VariablesSetString (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"variables_set_string\",\n\t\t\t\"message0\": \"%{BKY_VARIABLES_SET}\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_variable\",\n\t\t\t\t\t\"name\": \"variable\",\n\t\t\t\t\t\"variable\": \"%{BKY_VARIABLES_DEFAULT_NAME}\",\n\t\t\t\t\t\"variableTypes\": [\"String\"],\n\t\t\t\t\t\"defaultType\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"check\": \"String\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"style\": \"variable_blocks\",\n\t\t\t\"tooltip\": \"%{BKY_VARIABLES_SET_TOOLTIP}\",\n\t\t\t\"helpUrl\": \"%{BKY_VARIABLES_SET_HELPURL}\",\n\t\t\t\"extensions\": [\"contextMenu_variableSetterGetter\"]\n\t\t}\n\t},\n\n\t// ========== グローバル変数書き込み ==========\n\t{\n\t\ttype: \"global_variable_write\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.GlobalVariableWriteBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"global_variable_write\",\n\t\t\t\"message0\": \"グローバル変数 %1 %2 に %3 を書き込み\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"text\": \"変数名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_dummy\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"グローバル変数に値を書き込みます。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== グローバル1次元配列書き込み ==========\n\t{\n\t\ttype: \"global_one_dimensional_array_write\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.GlobalOneDimensionalArrayWrite (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"global_one_dimensional_array_write\",\n\t\t\t\"message0\": \"グローバル配列 %1 %2 %3 番目に %4 を書き込み\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"text\": \"配列名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_dummy\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"1次元のグローバル配列に値を書き込みます。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== グローバル2次元配列書き込み ==========\n\t{\n\t\ttype: \"global_two_dimensional_array_write\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.GlobalTwoDimensionalArrayWrite (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"global_two_dimensional_array_write\",\n\t\t\t\"message0\": \"グローバル2次元配列 %1 %2 %3 行 %4 列目に %5 を書き込み\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"text\": \"配列名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_dummy\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"row\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"col\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"value\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"2次元のグローバル配列に値を書き込みます。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== 関数定義 ==========\n\t{\n\t\ttype: \"function_definition\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.FunctionDefinitionBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"function_definition\",\n\t\t\t\"message0\": \"関数 %1 %2 %3\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"text\": \"関数名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_dummy\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_statement\",\n\t\t\t\t\t\"name\": \"routine\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": false,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"関数を定義します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== 関数実行 ==========\n\t{\n\t\ttype: \"function_call\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.FunctionCallBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"function_call\",\n\t\t\t\"message0\": \"実行 %1 %2 引数1 %3 引数2 %4 引数3 %5\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"text\": \"関数名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_dummy\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"argument1\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"argument2\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"argument3\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"定義した関数を実行します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== return ==========\n\t{\n\t\ttype: \"return_value\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.ReturnValueBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"return_value\",\n\t\t\t\"message0\": \"値を返す %1\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"return_value\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"値を返します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== スタート関数 ==========\n\t{\n\t\ttype: \"entry_point\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.EntryPointBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"entry_point\",\n\t\t\t\"message0\": \"関数 スタート %1 %2\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_dummy\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_statement\",\n\t\t\t\t\t\"name\": \"routine\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": false,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"プログラムが最初に始まる関数です。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== ストップウォッチ開始 ==========\n\t{\n\t\ttype: \"stopwatch_start\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.StopwatchStartBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"stopwatch_start\",\n\t\t\t\"message0\": \"ストップウォッチ %1 番スタート\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"指定した番号のストップウォッチをスタートさせます。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== ストップウォッチ停止 ==========\n\t{\n\t\ttype: \"stopwatch_stop\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.StopwatchStopBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"stopwatch_stop\",\n\t\t\t\"message0\": \"ストップウォッチ %1 番ストップ\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"指定した番号のストップウォッチを停止します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== ストップウォッチリセット ==========\n\t{\n\t\ttype: \"stopwatch_reset\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.StopwatchResetBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"stopwatch_reset\",\n\t\t\t\"message0\": \"ストップウォッチ %1 番リセット\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"指定した番号のストップウォッチをリセットします。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== スレッド作成 ==========\n\t{\n\t\ttype: \"thread_create\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.ThreadCreateBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"thread_create\",\n\t\t\t\"message0\": \"スレッド作成 %1 スレッド名 %2 引数1 %3 引数2 %4 引数3 %5\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"thread_function_name\",\n\t\t\t\t\t\"text\": \"関数名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"thread_name\",\n\t\t\t\t\t\"check\": \"String\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"argument1\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"argument2\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"argument3\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"指定した名前のスレッドを作成します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== スレッド終了待ち ==========\n\t{\n\t\ttype: \"thread_join\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.ThreadJoinBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"thread_join\",\n\t\t\t\"message0\": \"スレッド名 %1 を終了待ち\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"thread_name\",\n\t\t\t\t\t\"check\": \"String\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"指定した名前のスレッドの終了を待ちます。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== ミューテックスロック ==========\n\t{\n\t\ttype: \"mutex_lock\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.MutexLockBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"mutex_lock\",\n\t\t\t\"message0\": \"ミューテックスID %1 をロック\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"mutex_id\",\n\t\t\t\t\t\"check\": \"String\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"ミューテックスのロックを行います。他スレッドがすでに同じIDをロックしている場合はロック解除されるまで待機します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== ミューテックスロック解除 ==========\n\t{\n\t\ttype: \"mutex_unlock\",\n\t\twait: 100,\n\t\trandomSpeed: true,\n\t\tinstantiate: (blockXml: Element, workspace: Blockly.Workspace | null, userProgram: UserProgram, myRoutine: Routine, wait: number, randomSpeed: boolean): CommandBlockBehaviors.CommandBlock => {\n\t\t\treturn new CommandBlockBehaviors.MutexUnlockBlock (blockXml, workspace, userProgram, myRoutine, wait, randomSpeed);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"mutex_unlock\",\n\t\t\t\"message0\": \"ミューテックスID %1 をロック解除\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"mutex_id\",\n\t\t\t\t\t\"check\": \"String\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"previousStatement\": null,\n\t\t\t\"nextStatement\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"ミューテックスのロックを解除します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t}\n];\n\nexport const valueBlockDefinitions = [\n\t// ========== 比較 ==========\n\t{\n\t\ttype: \"logic_compare\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.CompareBlock (blockXml, userProgram, myRoutine, wait);\n\t\t}\n\t},\n\n\t// ========== 論理演算 ==========\n\t{\n\t\ttype: \"logic_operation\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.LogicOperationBlock (blockXml, userProgram, myRoutine, wait);\n\t\t}\n\t},\n\n\t// ========== 否定 ==========\n\t{\n\t\ttype: \"logic_negate\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.NotBlock (blockXml, userProgram, myRoutine, wait);\n\t\t}\n\t},\n\n\t// ========== 数字 ==========\n\t{\n\t\ttype: \"math_number\",\n\t\twait: 0,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.NumberBlock (blockXml, userProgram, myRoutine, wait);\n\t\t}\n\t},\n\n\t// ========== 四則演算 ==========\n\t{\n\t\ttype: \"math_arithmetic\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.CalculateBlock (blockXml, userProgram, myRoutine, wait);\n\t\t}\n\t},\n\n\t// ========== テキスト ==========\n\t{\n\t\ttype: \"text\",\n\t\twait: 0,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.TextBlock (blockXml, userProgram, myRoutine, wait);\n\t\t}\n\t},\n\n\t// ========== 文字列計算 ==========\n\t{\n\t\ttype: \"str_arithmetic\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.TextCalculateBlock (blockXml, userProgram, myRoutine, wait);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"str_arithmetic\",\n\t\t\t\"message0\": \"%1 %2 %3\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"A\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_dropdown\",\n\t\t\t\t\t\"name\": \"OP\",\n\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"+\",\n\t\t\t\t\t\t\t\"ADD\"\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"B\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"output\": \"String\",\n\t\t\t\"colour\": 165,\n\t\t\t\"tooltip\": \"\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== 数値型変数読み込み ==========\n\t{\n\t\ttype: \"variables_get_number\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.VariablesGetNumber (blockXml, userProgram, myRoutine, wait);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"variables_get_number\",\n\t\t\t\"message0\": \"%1\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_variable\",\n\t\t\t\t\t\"name\": \"variable\",\n\t\t\t\t\t\"variable\": \"%{BKY_VARIABLES_DEFAULT_NAME}\",\n\t\t\t\t\t\"variableTypes\": [\"Number\"],\n\t\t\t\t\t\"defaultType\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"output\": \"Number\",\n\t\t\t\"style\": \"variable_blocks\",\n\t\t\t\"helpUrl\": \"%{BKY_VARIABLES_GET_HELPURL}\",\n\t\t\t\"tooltip\": \"%{BKY_VARIABLES_GET_TOOLTIP}\",\n\t\t\t\"extensions\": [\"contextMenu_variableSetterGetter\"]\n\t\t},\n\t},\n\n\t// ========== 文字列型変数読み込み ==========\n\t{\n\t\ttype: \"variables_get_string\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.VariablesGetString (blockXml, userProgram, myRoutine, wait);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"variables_get_string\",\n\t\t\t\"message0\": \"%1\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_variable\",\n\t\t\t\t\t\"name\": \"variable\",\n\t\t\t\t\t\"variable\": \"%{BKY_VARIABLES_DEFAULT_NAME}\",\n\t\t\t\t\t\"variableTypes\": [\"String\"],\n\t\t\t\t\t\"defaultType\": \"String\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"output\": \"String\",\n\t\t\t\"style\": \"variable_blocks\",\n\t\t\t\"helpUrl\": \"%{BKY_VARIABLES_GET_HELPURL}\",\n\t\t\t\"tooltip\": \"%{BKY_VARIABLES_GET_TOOLTIP}\",\n\t\t\t\"extensions\": [\"contextMenu_variableSetterGetter\"]\n\t\t},\n\t},\n\n\t// ========== グローバル変数読み込み ==========\n\t{\n\t\ttype: \"global_variable_read\",\n\t\twait: 100,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.GlobalVariableReadBlock (blockXml, userProgram, myRoutine, wait);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"global_variable_read\",\n\t\t\t\"message0\": \"グローバル変数 %1\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"text\": \"変数名\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"output\": \"Number\",\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"グローバル変数の値を読み込みます。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== グローバル1次元配列読み込み ==========\n\t{\n\t\ttype: \"global_one_dimensional_array_read\",\n\t\twait: 100,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.GlobalOneDimensionalArrayRead (blockXml, userProgram, myRoutine, wait);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"global_one_dimensional_array_read\",\n\t\t\t\"message0\": \"グローバル配列 %1 %2 %3 番目\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"text\": \"配列名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_dummy\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"index\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"output\": \"Number\",\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"1次元のグローバル配列の値を読み取ります。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== グローバル2次元配列読み込み ==========\n\t{\n\t\ttype: \"global_two_dimensional_array_read\",\n\t\twait: 100,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.GlobalTwoDimensionalArrayRead (blockXml, userProgram, myRoutine, wait);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"global_two_dimensional_array_read\",\n\t\t\t\"message0\": \"グローバル2次元配列 %1 %2 %3 行 %4 列目\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"text\": \"配列名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_dummy\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"row\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"col\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"output\": \"Number\",\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"1次元のグローバル配列の値を読み取ります。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== 引数読み取り ==========\n\t{\n\t\ttype: \"get_argument\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.GetArgumentBlock (blockXml, userProgram, myRoutine, wait);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"get_argument\",\n\t\t\t\"message0\": \"%1\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_dropdown\",\n\t\t\t\t\t\"name\": \"argument\",\n\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"引数1\",\n\t\t\t\t\t\t\t\"argument1\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"引数2\",\n\t\t\t\t\t\t\t\"argument2\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"引数3\",\n\t\t\t\t\t\t\t\"argument3\"\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"output\": \"Number\",\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"引数を読み取ります。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t{\n\t\ttype: \"function_call_with_return\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.FunctionCallWithReturnBlock (blockXml, userProgram, myRoutine, wait);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"function_call_with_return\",\n\t\t\t\"message0\": \"実行 %1 %2 引数1 %3 引数2 %4 引数3 %5\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"field_input\",\n\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\"text\": \"関数名\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_dummy\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"argument1\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"argument2\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"argument3\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"output\": null,\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"戻り値がある関数を実行します。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t},\n\n\t// ========== ストップウォッチ読み取り ==========\n\t{\n\t\ttype: \"stopwatch_read\",\n\t\twait: 50,\n\t\tinstantiate: (blockXml: Element, userProgram: UserProgram, myRoutine: Routine, wait: number): ValueBlockBehaviors.ValueBlock => {\n\t\t\treturn new ValueBlockBehaviors.StopwatchReadBlock (blockXml, userProgram, myRoutine, wait);\n\t\t},\n\t\tblocklyJson: {\n\t\t\t\"type\": \"stopwatch_read\",\n\t\t\t\"message0\": \"ストップウォッチ %1 番読み取り\",\n\t\t\t\"args0\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"input_value\",\n\t\t\t\t\t\"name\": \"number\",\n\t\t\t\t\t\"check\": \"Number\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"inputsInline\": true,\n\t\t\t\"output\": \"Number\",\n\t\t\t\"colour\": 230,\n\t\t\t\"tooltip\": \"指定した番号のストップウォッチの値(秒)を読み取ります。\",\n\t\t\t\"helpUrl\": \"\"\n\t\t}\n\t}\n];\n","import React, {useEffect, useRef, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Blockly, {WorkspaceSvg} from \"blockly\";\nimport * as Ja from \"blockly/msg/ja\";\n\nimport {Mission, MissionContent} from \"./mission\";\nimport {missionContents} from \"./missionContents\";\nimport * as BlockSettings from \"./blockSettings\";\nimport * as BlockDefinitions from \"./blockDefinitions\";\nimport * as VariableCanvas from \"./variableCanvas\";\nimport * as PlaygroundModals from \"./playground-modals\";\nimport {UserProgram} from \"./blockDefinitions\";\n\nimport \"./playground.scss\";\nimport HomeIcon from \"./img/Home.svg\";\nimport NextIcon from \"./img/Next.svg\";\nimport ClearSmallIcon from \"./img/Clear_small.svg\";\nimport NotClearPurpleIcon from \"./img/NotClear_purple.svg\";\nimport NotClearWhiteIcon from \"./img/NotClear_white.svg\";\nimport FlagIcon from \"./img/Flag.svg\";\nimport InfoIcon from \"./img/Info.svg\";\nimport ProgramIcon from \"./img/Program.svg\";\nimport VisualizerIcon from \"./img/Visualizer.svg\";\nimport ConsoleIcon from \"./img/Console.svg\";\nimport ThreadIcon from \"./img/Threads.svg\";\nimport PlayIcon from \"./img/Play.svg\";\nimport BinIcon from \"./img/Bin.svg\";\n\nconst Playground: React.FC<{ missionID: string }> = (props) => {\n\t// state定義\n\tconst [isDetailVisible, setIsDetailVisible] = useState (true);\n\tconst [isClearVisible, setIsClearVisible] = useState (false);\n\tconst [isFailedVisible, setIsFailedVisible] = useState (false);\n\tconst [variableCanvas, setVariableCanvas] = useState (() => {\n\t\treturn new VariableCanvas.VariableCanvas ()\n\t});\n\tconst [threadInfos, setThreadInfos] = useState ([] as { name: string, blocksXml: string }[]);\n\tconst [threadCount, setThreadCount] = useState (threadInfos.length);\n\tconst [missionFailReason, setMissionFailReason] = useState (\"\");\n\tconst [programSpeed, setProgramSpeed] = useState (1);\n\n\t// 参照の取得\n\tconst editorRef = useRef<EditorView> (null);\n\tconst threadRefs: (ThreadView | null)[] = [];\n\tconst consoleRef = useRef<ConsoleView> (null);\n\n\t// ステージ定義\n\tconst foundMission = missionContents.findMissionByID (props.missionID);\n\tlet missionContent: MissionContent;\n\tif (foundMission) {\n\t\tmissionContent = foundMission;\n\t} else {\n\t\tmissionContent = missionContents.missionContents[0].contents[0];\n\t}\n\tconst nextMission = missionContents.findNextMission (missionContent.missionID);\n\n\tconst [mission, setMission] = useState (() => {\n\t\treturn new Mission (missionContent, variableCanvas,\n\t\t\t(output: { text: string, type: ConsoleOutputType }) => {\n\t\t\t\tif (consoleRef.current) {\n\t\t\t\t\tconsoleRef.current.writeConsole (output);\n\t\t\t\t}\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tif (consoleRef.current) {\n\t\t\t\t\tconsoleRef.current.clearConsole ();\n\t\t\t\t}\n\t\t\t},\n\t\t\t(threadInfo: { name: string, blocksXml: string }) => {\n\t\t\t\tsetThreadInfos ((oldThreadNames) => [...oldThreadNames, threadInfo]);\n\t\t\t\tsetThreadCount ((oldThreadCount) => oldThreadCount + 1);\n\t\t\t},\n\t\t\t(threadName: string) => {\n\t\t\t\tsetThreadInfos ((oldThreadInfos) => {\n\t\t\t\t\tconst newThreadNames = [...oldThreadInfos].filter ((item) => {\n\t\t\t\t\t\treturn item.name !== threadName;\n\t\t\t\t\t});\n\t\t\t\t\tsetThreadCount (newThreadNames.length);\n\t\t\t\t\treturn newThreadNames;\n\t\t\t\t});\n\t\t\t}\n\t\t)\n\t});\n\n\t// エディタパネルリサイズ処理\n\tfunction onEditorPanelResized () {\n\t\tif (editorRef.current) {\n\t\t\teditorRef.current.onResize ();\n\t\t}\n\t}\n\n\t// 中央パネルリサイズ処理\n\tfunction onCenterPanelResized () {\n\t\tvariableCanvas.resize ();\n\t\tvariableCanvas.drawTable (mission.currentTwoDimensionalArrays, mission.currentOneDimensionalArrays, mission.currentVariables);\n\t\tfor (const threadView of threadRefs) {\n\t\t\tif (threadView) {\n\t\t\t\tthreadView.onResize ();\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect (() => {\n\t\t// 変数パネル\n\t\tconst canvas = document.getElementById (\"variable-canvas\") as HTMLCanvasElement;\n\t\tvariableCanvas.initialize (canvas);\n\t\tonCenterPanelResized ();\n\n\t\t// リサイズ処理\n\t\twindow.addEventListener (\"resize\", onCenterPanelResized);\n\t});\n\n\tconst isGlobalDataExists = Object.keys (missionContent.globalVariables.variables).length > 0 ||\n\t\tObject.keys (missionContent.oneDimensionalArrays.arrays).length > 0 ||\n\t\tObject.keys (missionContent.twoDimensionalArrays.arrays).length > 0;\n\tconst isMutexExists = false;\n\tconst isThreadsExists = threadCount > 0;\n\n\treturn (\n\t\t<div style={{width: \"100vw\", height: \"100vh\"}}>\n\t\t\t{/*<div id={\"top-menu\"}>*/}\n\t\t\t{/*\t<Link to={\"/\"}>トップへ</Link>*/}\n\t\t\t{/*\t<div>*/}\n\t\t\t{/*\t\t<span>{missionContent.missionTitle}</span>*/}\n\t\t\t{/*\t\t<button onClick={() => {*/}\n\t\t\t{/*\t\t\tsetIsDetailVisible (!isDetailVisible);*/}\n\t\t\t{/*\t\t}}>i*/}\n\t\t\t{/*\t\t</button>*/}\n\t\t\t{/*\t</div>*/}\n\t\t\t{/*\t<div>ユーザアイコン</div>*/}\n\t\t\t{/*</div>*/}\n\t\t\t<div id={\"header\"}>\n\t\t\t\t<div id={\"header-left\"}>\n\t\t\t\t\t<Link to={\"/\"} id={\"home-icon-container\"}><img src={HomeIcon} id={\"home-icon\"}/></Link>\n\t\t\t\t\t<div id={\"title\"}>{missionContent.chapterName}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id={\"header-center\"}>\n\t\t\t\t\t{\n\t\t\t\t\t\tmissionContents.missionContents.filter ((mission) => {\n\t\t\t\t\t\t\treturn mission.chapterName === missionContent.chapterName;\n\t\t\t\t\t\t})[0].contents.map ((item, index) => {\n\t\t\t\t\t\t\t// アイコン選択\n\t\t\t\t\t\t\tconst currentMission = item.missionID === missionContent.missionID;\n\t\t\t\t\t\t\tlet icon;\n\t\t\t\t\t\t\tif (item.score.isClear ()) {\n\t\t\t\t\t\t\t\ticon = ClearSmallIcon;\n\t\t\t\t\t\t\t} else if (currentMission) {\n\t\t\t\t\t\t\t\ticon = NotClearPurpleIcon;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ticon = NotClearWhiteIcon;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst content = <div>\n\t\t\t\t\t\t\t\t<div>{index + 1}</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<img src={icon} className={\"icon\"}/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>;\n\n\t\t\t\t\t\t\tif (currentMission) {\n\t\t\t\t\t\t\t\treturn <div className={\"header-mission-list-item\"}\n\t\t\t\t\t\t\t\t\t\t\tid={\"header-mission-list-item-selected\"}\n\t\t\t\t\t\t\t\t\t\t\tkey={item.missionID}>\n\t\t\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t\t\t</div>;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn <Link to={`/missions/${item.chapterNameURL}/${item.missionID}`}\n\t\t\t\t\t\t\t\t\t\t\t className={\"header-mission-list-item\"}\n\t\t\t\t\t\t\t\t\t\t\t key={item.missionID}>\n\t\t\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t\t\t</Link>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tmissionContent.score.isClear () && nextMission ?\n\t\t\t\t\t\t<Link to={`/missions/${nextMission.chapterNameURL}/${nextMission.missionID}`}\n\t\t\t\t\t\t\t  id={\"header-right\"}>\n\t\t\t\t\t\t\t<div>次のステージへ</div>\n\t\t\t\t\t\t\t<div><img src={NextIcon}/></div>\n\t\t\t\t\t\t</Link> :\n\t\t\t\t\t\t<div id={\"header-right\"} style={{visibility: \"hidden\"}}/>\n\t\t\t\t}\n\n\t\t\t\t{/*<Link to={`/missions/${nextMission.chapterNameURL}/${nextMission.missionID}`}*/}\n\t\t\t\t{/*\t  id={\"header-right\"} style={{visibility: missionContent.score.isClear () ? \"visible\" : \"hidden\"}}>*/}\n\t\t\t\t{/*\t<div>次のステージへ</div>*/}\n\t\t\t\t{/*\t<div><img src={NextIcon}/></div>*/}\n\t\t\t\t{/*</Link>*/}\n\t\t\t</div>\n\n\t\t\t<div id={\"mission-detail-bar\"}>\n\t\t\t\t<div id={\"mission-title\"}>{missionContent.missionTitle}</div>\n\t\t\t\t<div id={\"mission-goal\"}>\n\t\t\t\t\t<div><img src={FlagIcon} className={\"icon\"}/></div>\n\t\t\t\t\t<div>{missionContent.goal}</div>\n\t\t\t\t\t<div><img src={InfoIcon} className={\"icon info-icon\"} onClick={() => {\n\t\t\t\t\t\tsetIsDetailVisible (!isDetailVisible);\n\t\t\t\t\t}}/></div>\n\t\t\t\t</div>\n\t\t\t\t<div id={\"spacer\"}/>\n\t\t\t</div>\n\n\t\t\t<PlaygroundModals.MissionDetailModal isVisible={isDetailVisible} setIsVisible={setIsDetailVisible}\n\t\t\t\t\t\t\t\t\t\t\t\t missionContent={missionContent}/>\n\t\t\t<PlaygroundModals.MissionClearModal isVisible={isClearVisible} close={() => {\n\t\t\t\tsetIsClearVisible (false)\n\t\t\t}} missionContent={missionContent} nextMission={nextMission}/>\n\t\t\t<PlaygroundModals.MissionFailedModal isVisible={isFailedVisible} close={() => {\n\t\t\t\tsetIsFailedVisible (false)\n\t\t\t}} missionContent={missionContent} failReason={missionFailReason}/>\n\n\n\t\t\t<div id={\"main-view\"}>\n\t\t\t\t<div id={\"center-panel\"}>\n\t\t\t\t\t<div id={\"upper-panel\"}>\n\t\t\t\t\t\t<div id={\"program-view\"}>\n\t\t\t\t\t\t\t<div className={\"view-label\"}>\n\t\t\t\t\t\t\t\t<div className={\"view-title\"}>\n\t\t\t\t\t\t\t\t\t<div><img src={ProgramIcon} className={\"view-icon\"}/></div>\n\t\t\t\t\t\t\t\t\t<div>プログラム</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={\"view-title\"}>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t// [デバッグ用]XML入力\n\t\t\t\t\t\t\t\t\t\t\tif (editorRef.current) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst xml = window.prompt (\"XMLを入力\");\n\t\t\t\t\t\t\t\t\t\t\t\tif (xml) {\n\t\t\t\t\t\t\t\t\t\t\t\t\teditorRef.current.xmlToWorkspace (xml);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}>XML入力\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t// [デバッグ用]XML出力\n\t\t\t\t\t\t\t\t\t\t\tif (editorRef.current) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log (editorRef.current.getXml ());\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}>XML出力\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id={\"speed-slider\"}>\n\t\t\t\t\t\t\t\t\t\t<input type={\"range\"} name={\"speed\"} min={\"0.2\"} max={\"4\"}\n\t\t\t\t\t\t\t\t\t\t\t   value={programSpeed} step={\"0.1\"}\n\t\t\t\t\t\t\t\t\t\t\t   onChange={(event) => {\n\t\t\t\t\t\t\t\t\t\t\t\t   if (editorRef.current) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t   setProgramSpeed (parseFloat (event.target.value));\n\t\t\t\t\t\t\t\t\t\t\t\t\t   editorRef.current.setProgramSpeed (programSpeed);\n\t\t\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t\t\t\t   }}/>\n\t\t\t\t\t\t\t\t\t\t<span>x{programSpeed.toFixed (1)}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={\"icon-button\"} onClick={() => {\n\t\t\t\t\t\t\t\t\t\t// プログラム実行ボタン\n\t\t\t\t\t\t\t\t\t\tif (editorRef.current && !editorRef.current.isExecuting && consoleRef.current) {\n\t\t\t\t\t\t\t\t\t\t\tmission.clearConsole ();\n\t\t\t\t\t\t\t\t\t\t\teditorRef.current.executeUserProgram (variableCanvas, mission, programSpeed);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t<img src={PlayIcon} className={\"view-icon\"}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={\"view-content\"}>\n\t\t\t\t\t\t\t\t<EditorView ref={editorRef} missionContent={missionContent} closeDetailModal={() => {\n\t\t\t\t\t\t\t\t\tsetIsDetailVisible (false);\n\t\t\t\t\t\t\t\t}} showClearModal={() => {\n\t\t\t\t\t\t\t\t\tsetIsClearVisible (true);\n\t\t\t\t\t\t\t\t}} showFailedModal={(failReason: string) => {\n\t\t\t\t\t\t\t\t\tsetMissionFailReason (failReason);\n\t\t\t\t\t\t\t\t\tsetIsFailedVisible (true);\n\t\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id={\"visualizer-view\"}>\n\t\t\t\t\t\t\t<div className={\"view-label\"}>\n\t\t\t\t\t\t\t\t<div className={\"view-title\"}>\n\t\t\t\t\t\t\t\t\t<div><img src={VisualizerIcon} className={\"view-icon\"}/></div>\n\t\t\t\t\t\t\t\t\t<div>ビジュアライザ</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={\"view-content\"}>\n\t\t\t\t\t\t\t\t<div id={\"visualizer-view-content-container\"}>\n\t\t\t\t\t\t\t\t\t<div id={\"global-data-view\"}>\n\t\t\t\t\t\t\t\t\t\t<canvas id={\"variable-canvas\"}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{display: isGlobalDataExists ? \"block\" : \"none\"}}/>\n\t\t\t\t\t\t\t\t\t\t<div className={\"light-color-text\"}\n\t\t\t\t\t\t\t\t\t\t\t style={{display: isGlobalDataExists ? \"none\" : \"flex\"}}>\n\t\t\t\t\t\t\t\t\t\t\t<div>グローバルデータはありません</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id={\"mutex-view\"}>\n\t\t\t\t\t\t\t\t\t\t<div style={{display: isMutexExists ? \"block\" : \"none\"}}></div>\n\t\t\t\t\t\t\t\t\t\t<div className={\"light-color-text\"}\n\t\t\t\t\t\t\t\t\t\t\t style={{display: isMutexExists ? \"none\" : \"flex\"}}>\n\t\t\t\t\t\t\t\t\t\t\t<div>ミューテックス<br/>はありません</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div id={\"visualizer-title\"}>\n\t\t\t\t\t\t\t\t\t<div id={\"global-data-title\"}>\n\t\t\t\t\t\t\t\t\t\tグローバルデータ\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id={\"mutex-title\"}>\n\t\t\t\t\t\t\t\t\t\tミューテックス\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id={\"lower-panel\"}>\n\t\t\t\t\t\t<div id={\"thread-view\"}>\n\t\t\t\t\t\t\t<div className={\"view-label\"}>\n\t\t\t\t\t\t\t\t<div className={\"view-title\"}>\n\t\t\t\t\t\t\t\t\t<div><img src={ThreadIcon} className={\"view-icon\"}/></div>\n\t\t\t\t\t\t\t\t\t<div>スレッドビュー</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={\"view-content\"} id={\"threads-container\"}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthreadInfos.map ((threadInfo, index) => {\n\t\t\t\t\t\t\t\t\t\treturn <ThreadView ref={item => threadRefs.push (item)} key={threadInfo.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   threadNames={threadInfo.name} threadCount={threadCount}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   threadIndex={index} blocks={threadInfo.blocksXml}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   onDidMount={(workspace) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   if (editorRef.current && editorRef.current.userProgram) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   editorRef.current.userProgram.setWorkspaceToThread (index, workspace);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<div className={\"light-color-text\"}\n\t\t\t\t\t\t\t\t\t style={{display: isThreadsExists ? \"none\" : \"flex\"}}>\n\t\t\t\t\t\t\t\t\t<div>スレッドはありません</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div id={\"right-panel\"}>\n\t\t\t\t\t<div id={\"console-view\"}>\n\t\t\t\t\t\t<div className={\"view-label\"}>\n\t\t\t\t\t\t\t<div className={\"view-title\"}>\n\t\t\t\t\t\t\t\t<div><img src={ConsoleIcon} className={\"view-icon\"}/></div>\n\t\t\t\t\t\t\t\t<div>コンソール</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={\"view-title\"}>\n\t\t\t\t\t\t\t\t<div className={\"icon-button\"} onClick={() => {\n\t\t\t\t\t\t\t\t\t// コンソール削除\n\t\t\t\t\t\t\t\t\tmission.clearConsole ();\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<img src={BinIcon} className={\"view-icon\"}/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"view-content\"}>\n\t\t\t\t\t\t\t<ConsoleView ref={consoleRef}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/*<div id={\"center-panel\"}>*/}\n\t\t\t\t{/*\t<div id={\"variables-panel\"}>*/}\n\t\t\t\t{/*<div>*/}\n\t\t\t\t{/*\t<button onClick={() => {*/}\n\t\t\t\t{/*\t\tif (editorRef.current) {*/}\n\t\t\t\t{/*\t\t\teditorRef.current.parseBlocks (variableCanvas, mission);*/}\n\t\t\t\t{/*\t\t}*/}\n\t\t\t\t{/*\t}}>*/}\n\t\t\t\t{/*\t\tブロックをパース*/}\n\t\t\t\t{/*\t</button>*/}\n\t\t\t\t{/*\t<button onClick={() => {*/}\n\t\t\t\t{/*\t\tif (editorRef.current && !editorRef.current.isExecuting && consoleRef.current) {*/}\n\t\t\t\t{/*\t\t\tmission.clearConsole ();*/}\n\t\t\t\t{/*\t\t\teditorRef.current.executeUserProgram (variableCanvas, mission, parseFloat (programSpeed));*/}\n\t\t\t\t{/*\t\t}*/}\n\t\t\t\t{/*\t}}>*/}\n\t\t\t\t{/*\t\tブロックを実行*/}\n\t\t\t\t{/*\t</button>*/}\n\t\t\t\t{/*\t<button onClick={() => {*/}\n\t\t\t\t{/*\t\tif (editorRef.current) {*/}\n\t\t\t\t{/*\t\t\teditorRef.current.stopUserProgram ();*/}\n\t\t\t\t{/*\t\t}*/}\n\t\t\t\t{/*\t}}>*/}\n\t\t\t\t{/*\t\t実行を停止*/}\n\t\t\t\t{/*\t</button>*/}\n\t\t\t\t{/*\t<button onClick={() => {*/}\n\t\t\t\t{/*\t\tif (editorRef.current) {*/}\n\t\t\t\t{/*\t\t\tconsole.log (editorRef.current.getXml ());*/}\n\t\t\t\t{/*\t\t}*/}\n\t\t\t\t{/*\t}}>*/}\n\t\t\t\t{/*\t\tXML出力*/}\n\t\t\t\t{/*\t</button>*/}\n\t\t\t\t{/*\t<button onClick={() => {*/}\n\t\t\t\t{/*\t\tif (editorRef.current) {*/}\n\t\t\t\t{/*\t\t\tconst xml = window.prompt (\"XMLを入力\");*/}\n\t\t\t\t{/*\t\t\tif (xml) {*/}\n\t\t\t\t{/*\t\t\t\teditorRef.current.xmlToWorkspace (xml);*/}\n\t\t\t\t{/*\t\t\t}*/}\n\t\t\t\t{/*\t\t}*/}\n\t\t\t\t{/*\t}}>*/}\n\t\t\t\t{/*\t\tXML入力*/}\n\t\t\t\t{/*\t</button>*/}\n\t\t\t\t{/*\t<input type={\"range\"} name={\"speed\"} min={\"0.2\"} max={\"4\"} value={programSpeed} step={\"0.1\"}*/}\n\t\t\t\t{/*\t\t   onChange={(event) => {*/}\n\t\t\t\t{/*\t\t\t   if (editorRef.current) {*/}\n\t\t\t\t{/*\t\t\t\t   setProgramSpeed (event.target.value);*/}\n\t\t\t\t{/*\t\t\t\t   editorRef.current.setProgramSpeed (parseFloat (programSpeed));*/}\n\t\t\t\t{/*\t\t\t   }*/}\n\t\t\t\t{/*\t\t   }}/>*/}\n\t\t\t\t{/*\t<span>x{programSpeed}</span>*/}\n\t\t\t\t{/*</div>*/}\n\t\t\t\t{/*<div>*/}\n\t\t\t\t{/*\t<button onClick={() => {*/}\n\t\t\t\t{/*\t\tif (consoleRef.current) {*/}\n\t\t\t\t{/*\t\t\tconsoleRef.current.writeConsole ({text: \"ABC\", type: ConsoleOutputType.Log});*/}\n\t\t\t\t{/*\t\t}*/}\n\t\t\t\t{/*\t}}>コンソール追加*/}\n\t\t\t\t{/*\t</button>*/}\n\t\t\t\t{/*\t<button onClick={() => {*/}\n\t\t\t\t{/*\t\tmission.clearConsole ();*/}\n\t\t\t\t{/*\t}}>コンソール削除*/}\n\t\t\t\t{/*\t</button>*/}\n\t\t\t\t{/*</div>*/}\n\t\t\t\t{/*\t</div>*/}\n\t\t\t\t{/*\t<div id={\"threads-panel\"}>*/}\n\n\t\t\t\t{/*\t</div>*/}\n\t\t\t\t{/*</div>*/}\n\n\t\t\t\t{/*<div id={\"right-panel\"}>*/}\n\n\t\t\t\t{/*</div>*/}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nclass EditorView extends React.Component<{ missionContent: MissionContent, closeDetailModal: () => void, showClearModal: () => void, showFailedModal: (failReason: string) => void }> {\n\tworkspace: Blockly.WorkspaceSvg | null = null;\n\tinitialWorkspace = \"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><block type=\\\"entry_point\\\" id=\\\"5e{JeNdzKRK}Nyg(x2Ul\\\" x=\\\"58\\\" y=\\\"59\\\"></block></xml>\";\n\tuserProgram: UserProgram | null = null;\n\tisExecuting = false;\n\n\tcomponentDidMount () {\n\t\t// ブロック定義とブロックリストを読み込み\n\t\tBlockSettings.initBlocks ();\n\t\tconst xmlParser = new DOMParser ();\n\t\tconst xmlDom = xmlParser.parseFromString (BlockSettings.blockListToXml (this.props.missionContent.blockList), \"text/xml\");\n\n\t\t// ワークスペースを生成\n\t\tconst document: HTMLElement | undefined = xmlDom.getElementById (\"toolbox\") || undefined; // 要素取得して型合わせ\n\t\tBlockly.setLocale (Ja);\n\t\t// 編集可能かのオプション\n\t\tlet options: object;\n\t\tlet blockCountLimit = Infinity;\n\t\tif (this.props.missionContent.blockCountLimit >= 0) {\n\t\t\tblockCountLimit = this.props.missionContent.blockCountLimit;\n\t\t}\n\t\tif (this.props.missionContent.editable) {\n\t\t\toptions = {\n\t\t\t\ttoolbox: document,\n\t\t\t\tmaxBlocks: blockCountLimit,\n\t\t\t\tmove: {\n\t\t\t\t\tscrollbars: true,\n\t\t\t\t\tdrag: true,\n\t\t\t\t\twheel: true\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\toptions = {\n\t\t\t\ttoolbox: document,\n\t\t\t\tmaxBlocks: blockCountLimit,\n\t\t\t\treadOnly: true,\n\t\t\t\tmove: {\n\t\t\t\t\tscrollbars: true,\n\t\t\t\t\tdrag: true,\n\t\t\t\t\twheel: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.workspace = Blockly.inject (\"blocklyDiv\", options);\n\n\t\t// ========== 変数関連設定 ==========\n\t\t// 数値型変数追加ボタンの定義\n\t\tthis.workspace.registerButtonCallback (\"createNumberVariableButtonPressed\", () => {\n\t\t\tif (this.workspace) {\n\t\t\t\tconst name = window.prompt (\"変数名を入力\");\n\t\t\t\tif (name && name !== \"\") {\n\t\t\t\t\tthis.workspace.createVariable (name, \"Number\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// 文字列型変数追加ボタンの定義\n\t\tthis.workspace.registerButtonCallback (\"createStringVariableButtonPressed\", () => {\n\t\t\tif (this.workspace) {\n\t\t\t\tconst name = window.prompt (\"変数名を入力\");\n\t\t\t\tif (name && name !== \"\") {\n\t\t\t\t\tthis.workspace.createVariable (name, \"String\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// ローカル変数カテゴリの定義\n\t\tthis.workspace.registerToolboxCategoryCallback (\"TYPED_VARIABLE\", (workspace) => {\n\t\t\tconst xmlStringList = [];\n\n\t\t\t// 数値型変数追加ボタン\n\t\t\txmlStringList.push (\"<button text=\\\"数値型変数の作成...\\\" callbackKey=\\\"createNumberVariableButtonPressed\\\"></button>\");\n\t\t\t// 数値型変数をリストアップ\n\t\t\tconst numberVariables = workspace.getVariablesOfType (\"Number\");\n\t\t\t// 数値型変数あったら代入ブロックとそれぞれの取得ブロックを追加\n\t\t\tif (numberVariables.length > 0) {\n\t\t\t\t// 数値型変数書き込み\n\t\t\t\tlet field = `<field name=\"variable\" id=\"${numberVariables[0].getId ()}\" variabletype=\"Number\"></field>`;\n\t\t\t\tlet value = `<value name=\"value\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value>`;\n\t\t\t\txmlStringList.push (`<block type=\"variables_set_number\">${field}${value}</block>`);\n\t\t\t\t// 数値型変数加算\n\t\t\t\tvalue = `<value name=\"value\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value>`;\n\t\t\t\txmlStringList.push (`<block type=\"variables_add_number\">${field}${value}</block>`);\n\t\t\t\t// 数値型変数読み込み\n\t\t\t\tfor (const numberVariable of numberVariables) {\n\t\t\t\t\tfield = `<field name=\"variable\" id=\"${numberVariable.getId ()}\" variabletype=\"Number\"></field>`;\n\t\t\t\t\txmlStringList.push (`<block type=\"variables_get_number\">${field}</block>`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 文字列型変数追加ボタン\n\t\t\txmlStringList.push (\"<button text=\\\"文字列型変数の作成...\\\" callbackKey=\\\"createStringVariableButtonPressed\\\"></button>\");\n\t\t\t// 文字列型変数をリストアップ\n\t\t\tconst stringVariables = workspace.getVariablesOfType (\"String\");\n\t\t\t// 文字列型変数あったら代入ブロックとそれぞれの取得ブロックを追加\n\t\t\tif (stringVariables.length > 0) {\n\t\t\t\t// 文字列型変数書き込み\n\t\t\t\tlet field = `<field name=\"variable\" id=\"${stringVariables[0].getId ()}\" variabletype=\"String\"></field>`;\n\t\t\t\tconst value = `<value name=\"value\"><shadow type=\"text\"></shadow></value>`;\n\t\t\t\txmlStringList.push (`<block type=\"variables_set_string\">${field}${value}</block>`);\n\t\t\t\t// 文字列型変数読み込み\n\t\t\t\tfor (const numberVariable of stringVariables) {\n\t\t\t\t\tfield = `<field name=\"variable\" id=\"${numberVariable.getId ()}\" variabletype=\"String\"></field>`;\n\t\t\t\t\txmlStringList.push (`<block type=\"variables_get_string\">${field}</block>`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// xmlStringListをElement型にして返す\n\t\t\treturn xmlStringList.map ((item) => {\n\t\t\t\treturn Blockly.Xml.textToDom (item);\n\t\t\t});\n\t\t});\n\t\t// ================================\n\n\t\t// ワークスペースにプログラム読み込み\n\t\tif (this.props.missionContent.program === \"\") {\n\t\t\t// デフォルトプログラム\n\t\t\tif (this.props.missionContent.defaultProgram === \"\") {\n\t\t\t\tthis.xmlToWorkspace (this.initialWorkspace);\n\t\t\t} else {\n\t\t\t\tthis.xmlToWorkspace (this.props.missionContent.defaultProgram);\n\t\t\t}\n\t\t} else {\n\t\t\t// 保存されたプログラム\n\t\t\tthis.xmlToWorkspace (this.props.missionContent.program);\n\t\t}\n\t}\n\n\tcomponentWillUnmount () {\n\t\t// プログラムを保存\n\t\tthis.props.missionContent.program = this.getXml ();\n\t}\n\n\tgetXml () {\n\t\t// ワークスペース上のブロックをXML化\n\t\tif (this.workspace) {\n\t\t\tconst dom = Blockly.Xml.workspaceToDom (this.workspace);\n\t\t\treturn Blockly.Xml.domToText (dom);\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\txmlToWorkspace (xml: string) {\n\t\t// XMLからワークスペースのブロック化\n\t\tif (this.workspace) {\n\t\t\tthis.workspace.clear ();\n\t\t\tconst dom = Blockly.Xml.textToDom (xml);\n\t\t\tBlockly.Xml.domToWorkspace (dom, this.workspace);\n\t\t}\n\t}\n\n\tparseBlocks (variableCanvas: VariableCanvas.VariableCanvas, mission: Mission) {\n\t\t// ワークスペース上のブロックをプログラム化\n\t\tif (this.workspace) {\n\t\t\tconst xml = Blockly.Xml.workspaceToDom (this.workspace);\n\t\t\tthis.userProgram = new BlockDefinitions.UserProgram (xml, mission, this.workspace);\n\t\t}\n\t}\n\n\tasync executeUserProgram (variableCanvas: VariableCanvas.VariableCanvas, mission: Mission, initialProgramSpeed: number) {\n\t\t// 作成したブロックをプログラム化し実行\n\t\tthis.isExecuting = true;\n\t\tthis.parseBlocks (variableCanvas, mission);\n\t\tif (this.userProgram) {\n\t\t\t// グローバル配列Canvasを初期化\n\t\t\tmission.resetGlobalArray ();\n\t\t\tvariableCanvas.drawTable (mission.currentTwoDimensionalArrays, mission.currentOneDimensionalArrays, mission.currentVariables);\n\n\t\t\t// プログラム速度の初期値\n\t\t\tthis.userProgram.setProgramSpeed (initialProgramSpeed);\n\n\t\t\t// タイム計測し実行\n\t\t\tawait this.userProgram.executeUserProgram ();\n\t\t\tconst time = this.userProgram.getCurrentMilliSecond ();\n\n\t\t\t// ステージクリア条件判断\n\t\t\tthis.props.closeDetailModal ();\n\t\t\tconst missionResult = mission.judge ();\n\t\t\tif (missionResult.cleared) {\n\t\t\t\t// スコア記録\n\t\t\t\tmission.missionContent.score.setClear (time, this.workspace ? this.workspace.getAllBlocks (false).length : -1);\n\n\t\t\t\tthis.props.showClearModal (); // ステージ成功\n\t\t\t} else {\n\t\t\t\tthis.props.showFailedModal (missionResult.failReason); // ステージ失敗\n\t\t\t}\n\t\t}\n\t\tthis.isExecuting = false;\n\t}\n\n\tstopUserProgram () {\n\t\t// プログラム実行を停止\n\t\tif (this.userProgram) {\n\t\t\tthis.userProgram.stopUserProgram ();\n\t\t\tthis.isExecuting = false;\n\t\t}\n\t}\n\n\tsetProgramSpeed (speed: number) {\n\t\tif (this.userProgram) {\n\t\t\tthis.userProgram.setProgramSpeed (speed);\n\t\t}\n\t}\n\n\tonResize () {\n\t\t// Blocklyリサイズ処理\n\t\tif (this.workspace) {\n\t\t\tBlockly.svgResize (this.workspace);\n\t\t}\n\t}\n\n\trender () {\n\t\treturn <div id=\"blocklyDiv\" style={{width: \"100%\", height: \"100%\"}}/>;\n\t}\n}\n\nclass ThreadView extends React.Component<{ threadNames: string, threadIndex: number, threadCount: number, blocks: string, onDidMount: (workspace: Blockly.Workspace) => void }, { workspace: WorkspaceSvg }> {\n\tworkspace: WorkspaceSvg | null = null;\n\tthreadColors = [\"rgb(234, 57, 25)\", \"rgb(36, 234, 25)\", \"rgb(25, 36, 234)\", \"rgb(237, 185, 24)\"];\n\n\tcomponentDidMount () {\n\t\tthis.workspace = Blockly.inject (`thread${this.props.threadNames}`, {\n\t\t\treadOnly: true,\n\t\t\tmove: {\n\t\t\t\tscrollbars: true,\n\t\t\t\tdrag: true,\n\t\t\t\twheel: true\n\t\t\t}\n\t\t});\n\t\tconst xml = `<xml xmlns=\"https://developers.google.com/blockly/xml\">${this.props.blocks}</xml>`;\n\t\tconst dom = Blockly.Xml.textToDom (xml);\n\t\tBlockly.Xml.domToWorkspace (dom, this.workspace);\n\t\tthis.props.onDidMount (this.workspace);\n\t}\n\n\tcomponentDidUpdate () {\n\t\tthis.onResize ();\n\t}\n\n\trender () {\n\t\tconst divWidth = `${100 / this.props.threadCount}%`;\n\t\treturn (\n\t\t\t<div style={{width: divWidth}}>\n\t\t\t\t<div id={`thread${this.props.threadNames}`}\n\t\t\t\t\t style={{width: \"100%\", height: \"calc(100% - 24px)\"}}/>\n\t\t\t\t<div className={\"thread-name-container\"}>\n\t\t\t\t\t<div className={\"thread-name-icon\"}\n\t\t\t\t\t\t style={{backgroundColor: this.threadColors[this.props.threadIndex]}}/>\n\t\t\t\t\t<div>{this.props.threadNames}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonResize () {\n\t\tif (this.workspace) {\n\t\t\tBlockly.svgResize (this.workspace);\n\t\t}\n\t}\n}\n\nexport enum ConsoleOutputType { Log, Error}\n\nclass ConsoleView extends React.Component<{}, { outputs: { text: string, type: ConsoleOutputType }[] }> {\n\tstate: { outputs: { text: string, type: ConsoleOutputType }[] };\n\n\tconstructor (props: {}) {\n\t\tsuper (props);\n\t\tthis.state = {outputs: []};\n\t}\n\n\twriteConsole (output: { text: string, type: ConsoleOutputType }) {\n\t\t// コンソール書き込み\n\t\tthis.setState (state => ({\n\t\t\toutputs: [...state.outputs, output]\n\t\t}));\n\t}\n\n\tclearConsole () {\n\t\t// コンソール消去\n\t\tthis.setState ({...this.state, outputs: []});\n\t}\n\n\trender () {\n\t\tconst outputs = this.state.outputs.map ((item, i) => {\n\t\t\tswitch (item.type) {\n\t\t\t\tcase ConsoleOutputType.Log:\n\t\t\t\t\treturn <li key={i} className={\"console-log\"}>{item.text}</li>;\n\t\t\t\tcase ConsoleOutputType.Error:\n\t\t\t\t\treturn <li key={i} className={\"console-error\"}>{item.text}</li>;\n\t\t\t\tdefault:\n\t\t\t\t\treturn <span/>;\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<div id={\"console-container\"}>\n\t\t\t\t<ul id={\"console\"}>{outputs}</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Playground;\n","export class VariableCanvas {\n\tcanvas: HTMLCanvasElement | null = null;\n\tcontext: CanvasRenderingContext2D | null = null;\n\tscreenWidth: number = 0;\n\tscreenHeight: number = 0;\n\ttwoDimensionalArrayAccesses: { key: string, row: number, col: number, color: string, read: boolean }[] = [];\n\toneDimensionalArrayAccesses: { key: string, index: number, color: string, read: boolean }[] = [];\n\tglobalVariableAccesses: { key: string, color: string, read: boolean }[] = [];\n\twhiteReadAccessMark: HTMLImageElement;\n\tblackReadAccessMark: HTMLImageElement;\n\twhiteWriteAccessMark: HTMLImageElement;\n\tblackWriteAccessMark: HTMLImageElement;\n\n\tconstructor () {\n\t\t// アクセスマーク読み込み\n\t\tthis.whiteReadAccessMark = new Image ();\n\t\tthis.whiteReadAccessMark.src = `${process.env.PUBLIC_URL}/img/WhiteReadAccessMark.svg`;\n\t\tthis.blackReadAccessMark = new Image ();\n\t\tthis.blackReadAccessMark.src = `${process.env.PUBLIC_URL}/img/BlackReadAccessMark.svg`;\n\t\tthis.whiteWriteAccessMark = new Image ();\n\t\tthis.whiteWriteAccessMark.src = `${process.env.PUBLIC_URL}/img/WhiteWriteAccessMark.svg`;\n\t\tthis.blackWriteAccessMark = new Image ();\n\t\tthis.blackWriteAccessMark.src = `${process.env.PUBLIC_URL}/img/BlackWriteAccessMark.svg`;\n\t}\n\n\tinitialize (canvas: HTMLCanvasElement) {\n\t\t// Canvas関係\n\t\tthis.canvas = canvas;\n\t\tthis.context = this.canvas.getContext (\"2d\");\n\t\t// 解像度設定\n\t\tthis.resize ();\n\t}\n\n\taddTwoDimensionalArrayAccess (key: string, row: number, col: number, color: string, read: boolean = true) {\n\t\tthis.twoDimensionalArrayAccesses.push ({key, row, col, color, read});\n\t}\n\n\tremoveTwoDimensionalArrayAccess (key: string, row: number, col: number, color: string, read: boolean = true) {\n\t\tthis.twoDimensionalArrayAccesses = this.twoDimensionalArrayAccesses.filter ((item) => {\n\t\t\treturn item.key !== key || item.row !== row || item.col !== col || item.color !== color || item.read !== read;\n\t\t});\n\t}\n\n\taddOneDimensionalArrayAccess (key: string, index: number, color: string, read: boolean = true) {\n\t\tthis.oneDimensionalArrayAccesses.push ({key, index, color, read});\n\t}\n\n\tremoveOneDimensionalArrayAccess (key: string, index: number, color: string, read: boolean = true) {\n\t\tthis.oneDimensionalArrayAccesses = this.oneDimensionalArrayAccesses.filter ((item) => {\n\t\t\treturn item.key !== key && item.index !== index && item.color !== color && item.read !== read;\n\t\t});\n\t}\n\n\taddGlobalVariableAccess (key: string, color: string, read: boolean = true) {\n\t\tthis.globalVariableAccesses.push ({key, color, read});\n\t}\n\n\tremoveGlobalVariableAccess (key: string, color: string, read: boolean = true) {\n\t\tthis.globalVariableAccesses = this.globalVariableAccesses.filter ((item) => {\n\t\t\treturn item.key !== key && item.color !== color && item.read !== read;\n\t\t});\n\t}\n\n\tdrawTable (twoDimensionalArrays: { [key: string]: number[][] }, oneDimensionalArrays: { [key: string]: number[] }, variables: { [key: string]: number }) {\n\t\tif (this.context) {\n\t\t\tthis.context.clearRect (0, 0, this.screenWidth, this.screenHeight);\n\n\t\t\t// 各種定数\n\t\t\tconst colors = [\"rgb(240,240,240)\", \"rgb(224,224,224)\"];\n\t\t\tconst defaultLineWidth = this.context.lineWidth;\n\t\t\tconst xOffset = 60;\n\t\t\tconst yOffset = 80;\n\t\t\tconst nameWidth = 220;\n\t\t\tconst cellWidth = 100;\n\t\t\tconst cellHeight = 60;\n\t\t\tconst accessMarkWidth = 30;\n\t\t\tconst accessMarkHeight = 30;\n\t\t\tconst nameFontSize = 42;\n\t\t\tconst indexFontSize = 24;\n\t\t\tconst tableFontSize = 36;\n\n\t\t\t// ========== 2次元配列の表を描画 ==========\n\t\t\tlet originX = xOffset;\n\t\t\tlet originY = yOffset;\n\t\t\tfor (const key of Object.keys (twoDimensionalArrays)) {\n\t\t\t\t// 配列の名前を表示\n\t\t\t\tthis.context.font = `${nameFontSize}px serif`;\n\t\t\t\tthis.context.fillStyle = \"black\";\n\t\t\t\tthis.context.textAlign = \"left\";\n\t\t\t\tthis.context.fillText (key, originX, originY + (twoDimensionalArrays[key].length * cellHeight) / 2 + nameFontSize / 2);\n\n\t\t\t\t// 表の左と上にインデックス番号を振る\n\t\t\t\tthis.context.font = `${indexFontSize}px serif`;\n\t\t\t\tthis.context.fillStyle = \"black\";\n\t\t\t\tthis.context.textAlign = \"center\";\n\t\t\t\tfor (let row = 0; row < twoDimensionalArrays[key].length; row++) {\n\t\t\t\t\tconst indexX = originX + nameWidth;\n\t\t\t\t\tconst indexY = cellHeight * row + originY;\n\t\t\t\t\tthis.context.fillText (row.toString (), indexX - indexFontSize, indexY + indexFontSize / 2 + cellHeight / 2);\n\t\t\t\t}\n\t\t\t\tfor (let col = 0; col < twoDimensionalArrays[key][0].length; col++) {\n\t\t\t\t\tconst indexX = cellWidth * col + originX + nameWidth;\n\t\t\t\t\tthis.context.fillText (col.toString (), indexX + cellWidth / 2, originY - indexFontSize / 2);\n\t\t\t\t}\n\n\t\t\t\t// 表本体を描画\n\t\t\t\tthis.context.font = `${tableFontSize}px serif`;\n\t\t\t\tthis.context.textAlign = \"center\";\n\t\t\t\tfor (let row = 0; row < twoDimensionalArrays[key].length; row++) {\n\t\t\t\t\tfor (let col = 0; col < twoDimensionalArrays[key][row].length; col++) {\n\t\t\t\t\t\t// セルの左上座標を定義\n\t\t\t\t\t\tconst cellX = cellWidth * col + originX + nameWidth;\n\t\t\t\t\t\tconst cellY = cellHeight * row + originY;\n\n\t\t\t\t\t\t// セルを描画\n\t\t\t\t\t\tthis.context.fillStyle = colors[(row + col) % 2];\n\t\t\t\t\t\tthis.context.fillRect (cellX, cellY, cellWidth, cellHeight);\n\n\t\t\t\t\t\t// 枠線描画\n\t\t\t\t\t\tthis.context.strokeStyle = \"black\";\n\t\t\t\t\t\tthis.context.strokeRect (cellX, cellY, cellWidth, cellHeight);\n\n\t\t\t\t\t\t// 値を描画\n\t\t\t\t\t\tthis.context.fillStyle = \"black\";\n\t\t\t\t\t\tthis.context.fillText (twoDimensionalArrays[key][row][col].toString (), cellX + cellWidth / 2, cellY + tableFontSize / 2 + cellHeight / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// アクセスマークを表示\n\t\t\t\tfor (let row = 0; row < twoDimensionalArrays[key].length; row++) {\n\t\t\t\t\tfor (let col = 0; col < twoDimensionalArrays[key][row].length; col++) {\n\t\t\t\t\t\tconst accessesOfThisKey = this.twoDimensionalArrayAccesses.filter ((item) => {\n\t\t\t\t\t\t\treturn item.key === key;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst accesses = accessesOfThisKey.filter ((item) => {\n\t\t\t\t\t\t\treturn item.row === row && item.col === col;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfor (let i = 0; i < accesses.length; i++) {\n\t\t\t\t\t\t\tthis.context.strokeStyle = accesses[i].color;\n\t\t\t\t\t\t\tthis.context.lineWidth = 4;\n\n\t\t\t\t\t\t\tconst cellX = cellWidth * col + originX + nameWidth + this.context.lineWidth * i;\n\t\t\t\t\t\t\tconst cellY = cellHeight * row + originY + this.context.lineWidth * i;\n\n\t\t\t\t\t\t\tthis.context.strokeRect (cellX, cellY, cellWidth - 2 * this.context.lineWidth * i, cellHeight - 2 * this.context.lineWidth * i);\n\n\t\t\t\t\t\t\t// 読み書きマーク\n\t\t\t\t\t\t\tlet accessMarkX = cellX;\n\t\t\t\t\t\t\tlet accessMarkY = cellY;\n\t\t\t\t\t\t\tif (!accesses[i].read) {\n\t\t\t\t\t\t\t\taccessMarkX = cellWidth * col + originX + nameWidth + cellWidth - accessMarkWidth - this.context.lineWidth * i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.context.fillStyle = accesses[i].color;\n\t\t\t\t\t\t\tthis.context.fillRect (accessMarkX, accessMarkY, accessMarkWidth, accessMarkHeight);\n\t\t\t\t\t\t\tif (accesses[i].read) {\n\t\t\t\t\t\t\t\tif (this.decideAccessMark (accesses[i].color) === 0) {\n\t\t\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.whiteReadAccessMark.width) / 2;\n\t\t\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.whiteReadAccessMark.height) / 2;\n\t\t\t\t\t\t\t\t\tthis.context.drawImage (this.whiteReadAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.whiteWriteAccessMark.width) / 2;\n\t\t\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.whiteWriteAccessMark.height) / 2;\n\t\t\t\t\t\t\t\t\tthis.context.drawImage (this.blackReadAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (this.decideAccessMark (accesses[i].color) === 0) {\n\t\t\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.blackReadAccessMark.width) / 2;\n\t\t\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.blackReadAccessMark.height) / 2;\n\t\t\t\t\t\t\t\t\tthis.context.drawImage (this.whiteWriteAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.blackWriteAccessMark.width) / 2;\n\t\t\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.blackWriteAccessMark.height) / 2;\n\t\t\t\t\t\t\t\t\tthis.context.drawImage (this.blackWriteAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.context.lineWidth = defaultLineWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toriginY += cellHeight * twoDimensionalArrays[key].length + yOffset; // 次の表に向けoriginYを加算\n\t\t\t}\n\n\n\t\t\t// ========== 1次元配列の表を描画 ==========\n\t\t\tfor (const key of Object.keys (oneDimensionalArrays)) {\n\t\t\t\tthis.context.font = `${nameFontSize}px serif`;\n\t\t\t\tthis.context.fillStyle = \"black\";\n\t\t\t\tthis.context.textAlign = \"left\";\n\t\t\t\tthis.context.fillText (key, originX, originY + cellHeight / 2 + nameFontSize / 2);\n\n\t\t\t\t// 表の上にインデックス番号を振る\n\t\t\t\tthis.context.font = `${indexFontSize}px serif`;\n\t\t\t\tthis.context.fillStyle = \"black\";\n\t\t\t\tthis.context.textAlign = \"center\";\n\t\t\t\tfor (let col = 0; col < oneDimensionalArrays[key].length; col++) {\n\t\t\t\t\tconst indexX = cellWidth * col + originX + nameWidth;\n\t\t\t\t\tthis.context.fillText (col.toString (), indexX + cellWidth / 2, originY - indexFontSize / 2);\n\t\t\t\t}\n\n\t\t\t\t// 表本体を描画\n\t\t\t\tthis.context.font = `${tableFontSize}px serif`;\n\t\t\t\tthis.context.textAlign = \"center\";\n\t\t\t\tfor (let index = 0; index < oneDimensionalArrays[key].length; index++) {\n\t\t\t\t\t// セルの左上座標を定義\n\t\t\t\t\tconst cellX = cellWidth * index + originX + nameWidth;\n\t\t\t\t\tconst cellY = originY;\n\n\t\t\t\t\t// セルを描画\n\t\t\t\t\tthis.context.fillStyle = colors[index % 2];\n\t\t\t\t\tthis.context.fillRect (cellX, cellY, cellWidth, cellHeight);\n\n\t\t\t\t\t// 枠線描画\n\t\t\t\t\tthis.context.strokeStyle = \"black\";\n\t\t\t\t\tthis.context.strokeRect (cellX, cellY, cellWidth, cellHeight);\n\n\t\t\t\t\t// 値を描画\n\t\t\t\t\tthis.context.fillStyle = \"black\";\n\t\t\t\t\tthis.context.fillText (oneDimensionalArrays[key][index].toString (), cellX + cellWidth / 2, cellY + tableFontSize / 2 + cellHeight / 2);\n\t\t\t\t}\n\n\t\t\t\t// アクセスマークを表示\n\t\t\t\tfor (let index = 0; index < oneDimensionalArrays[key].length; index++) {\n\t\t\t\t\tconst accessesOfThisKey = this.oneDimensionalArrayAccesses.filter ((item) => {\n\t\t\t\t\t\treturn item.key === key;\n\t\t\t\t\t});\n\t\t\t\t\tconst accesses = accessesOfThisKey.filter ((item) => {\n\t\t\t\t\t\treturn item.index === index;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < accesses.length; i++) {\n\t\t\t\t\t\tthis.context.strokeStyle = accesses[i].color;\n\t\t\t\t\t\tthis.context.lineWidth = 4;\n\n\t\t\t\t\t\tconst cellX = cellWidth * index + originX + nameWidth + this.context.lineWidth * i;\n\t\t\t\t\t\tconst cellY = originY + this.context.lineWidth * i;\n\t\t\t\t\t\tthis.context.strokeRect (cellX, cellY, cellWidth - 2 * this.context.lineWidth * i, cellHeight - 2 * this.context.lineWidth * i);\n\n\t\t\t\t\t\t// 読み書きマーク\n\t\t\t\t\t\tlet accessMarkX = cellX;\n\t\t\t\t\t\tlet accessMarkY = cellY;\n\t\t\t\t\t\tif (!accesses[i].read) {\n\t\t\t\t\t\t\taccessMarkX = cellWidth * index + originX + nameWidth + cellWidth - accessMarkWidth - this.context.lineWidth * i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.context.fillStyle = accesses[i].color;\n\t\t\t\t\t\tthis.context.fillRect (accessMarkX, accessMarkY, accessMarkWidth, accessMarkHeight);\n\t\t\t\t\t\tif (accesses[i].read) {\n\t\t\t\t\t\t\tif (this.decideAccessMark (accesses[i].color) === 0) {\n\t\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.whiteReadAccessMark.width) / 2;\n\t\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.whiteReadAccessMark.height) / 2;\n\t\t\t\t\t\t\t\tthis.context.drawImage (this.whiteReadAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.whiteWriteAccessMark.width) / 2;\n\t\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.whiteWriteAccessMark.height) / 2;\n\t\t\t\t\t\t\t\tthis.context.drawImage (this.blackReadAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (this.decideAccessMark (accesses[i].color) === 0) {\n\t\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.blackReadAccessMark.width) / 2;\n\t\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.blackReadAccessMark.height) / 2;\n\t\t\t\t\t\t\t\tthis.context.drawImage (this.whiteWriteAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.blackWriteAccessMark.width) / 2;\n\t\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.blackWriteAccessMark.height) / 2;\n\t\t\t\t\t\t\t\tthis.context.drawImage (this.blackWriteAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.context.lineWidth = defaultLineWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\toriginY += cellHeight * Object.keys (oneDimensionalArrays).length + yOffset;\n\n\n\t\t\t// ========== グローバル変数の表を描画 ==========\n\t\t\tfor (const key of Object.keys (variables)) {\n\t\t\t\tthis.context.font = `${nameFontSize}px serif`;\n\t\t\t\tthis.context.fillStyle = \"black\";\n\t\t\t\tthis.context.textAlign = \"left\";\n\t\t\t\tthis.context.fillText (key, originX, originY + cellHeight / 2 + nameFontSize / 2);\n\n\t\t\t\t// セルを描画\n\t\t\t\tthis.context.font = `${tableFontSize}px serif`;\n\t\t\t\tthis.context.textAlign = \"center\";\n\t\t\t\t// セルの左上座標を定義\n\t\t\t\tconst cellX = originX + nameWidth;\n\t\t\t\tconst cellY = originY;\n\n\t\t\t\t// セルを描画\n\t\t\t\tthis.context.fillStyle = colors[0];\n\t\t\t\tthis.context.fillRect (cellX, cellY, cellWidth, cellHeight);\n\n\t\t\t\t// 枠線描画\n\t\t\t\tthis.context.strokeStyle = \"black\";\n\t\t\t\tthis.context.strokeRect (cellX, cellY, cellWidth, cellHeight);\n\n\t\t\t\t// 値を描画\n\t\t\t\tthis.context.fillStyle = \"black\";\n\t\t\t\tthis.context.fillText (variables[key].toString (), cellX + cellWidth / 2, cellY + tableFontSize / 2 + cellHeight / 2);\n\n\t\t\t\t// アクセスマークを表示\n\t\t\t\tconst accesses = this.globalVariableAccesses.filter ((item) => {\n\t\t\t\t\treturn item.key === key;\n\t\t\t\t});\n\n\t\t\t\tfor (let i = 0; i < accesses.length; i++) {\n\t\t\t\t\tthis.context.strokeStyle = accesses[i].color;\n\t\t\t\t\tthis.context.lineWidth = 4;\n\n\t\t\t\t\tconst cellX = originX + nameWidth + this.context.lineWidth * i;\n\t\t\t\t\tconst cellY = originY + this.context.lineWidth * i;\n\t\t\t\t\tthis.context.strokeRect (cellX, cellY, cellWidth - 2 * this.context.lineWidth * i, cellHeight - 2 * this.context.lineWidth * i);\n\n\t\t\t\t\t// 読み書きマーク\n\t\t\t\t\tlet accessMarkX = cellX;\n\t\t\t\t\tlet accessMarkY = cellY;\n\t\t\t\t\tif (!accesses[i].read) {\n\t\t\t\t\t\taccessMarkX = originX + nameWidth + cellWidth - accessMarkWidth - this.context.lineWidth * i;\n\t\t\t\t\t}\n\t\t\t\t\tthis.context.fillStyle = accesses[i].color;\n\t\t\t\t\tthis.context.fillRect (accessMarkX, accessMarkY, accessMarkWidth, accessMarkHeight);\n\t\t\t\t\tif (accesses[i].read) {\n\t\t\t\t\t\tif (this.decideAccessMark (accesses[i].color) === 0) {\n\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.whiteReadAccessMark.width) / 2;\n\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.whiteReadAccessMark.height) / 2;\n\t\t\t\t\t\t\tthis.context.drawImage (this.whiteReadAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.whiteWriteAccessMark.width) / 2;\n\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.whiteWriteAccessMark.height) / 2;\n\t\t\t\t\t\t\tthis.context.drawImage (this.blackReadAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.decideAccessMark (accesses[i].color) === 0) {\n\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.blackReadAccessMark.width) / 2;\n\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.blackReadAccessMark.height) / 2;\n\t\t\t\t\t\t\tthis.context.drawImage (this.whiteWriteAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst xOffset = (accessMarkWidth - this.blackWriteAccessMark.width) / 2;\n\t\t\t\t\t\t\tconst yOffset = (accessMarkHeight - this.blackWriteAccessMark.height) / 2;\n\t\t\t\t\t\t\tthis.context.drawImage (this.blackWriteAccessMark, accessMarkX + xOffset, accessMarkY + yOffset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context.lineWidth = defaultLineWidth;\n\t\t\t\t}\n\n\t\t\t\toriginY += yOffset;\n\t\t\t}\n\t\t}\n\t}\n\n\tdecideAccessMark (color: string) {\n\t\treturn color === \"rgb(36, 234, 25)\" || color === \"rgb(237, 185, 24)\" ? 1 : 0;\n\t}\n\n\tresize () {\n\t\tif (this.canvas) {\n\t\t\tthis.screenWidth = this.canvas.clientWidth * window.devicePixelRatio;\n\t\t\tthis.screenHeight = this.canvas.clientHeight * window.devicePixelRatio;\n\t\t\tthis.canvas.setAttribute (\"width\", this.screenWidth.toString ());\n\t\t\tthis.canvas.setAttribute (\"height\", this.screenHeight.toString ());\n\t\t}\n\t}\n}\n","export default __webpack_public_path__ + \"static/media/Flag.64cac8a8.svg\";","export default __webpack_public_path__ + \"static/media/Explanation.b474343f.svg\";","export default __webpack_public_path__ + \"static/media/Close.32e05412.svg\";","export default __webpack_public_path__ + \"static/media/Score.6ccdc0a6.svg\";","export default __webpack_public_path__ + \"static/media/Next.1df86440.svg\";","export default __webpack_public_path__ + \"static/media/Back.7ea0a054.svg\";","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {MissionContent} from \"./mission\";\n\nimport \"./playground-modals.scss\";\n\nimport FlagIcon from \"./img/Flag.svg\";\nimport ExplanationIcon from \"./img/Explanation.svg\";\nimport CloseIcon from \"./img/Close.svg\";\nimport ScoreIcon from \"./img/Score.svg\";\nimport NextIcon from \"./img/Next.svg\";\nimport BackIcon from \"./img/Back.svg\";\n\n// ステージ説明モーダル\nexport const MissionDetailModal: React.FC<{ isVisible: boolean, setIsVisible: (value: boolean) => void, missionContent: MissionContent }> = (props) => {\n\treturn (\n\t\t<div className={\"modal-background\"} style={{display: props.isVisible ? \"block\" : \"none\"}}>\n\t\t\t<div className={\"modal-panel\"} id={\"mission-detail\"} style={{display: props.isVisible ? \"block\" : \"none\"}}>\n\t\t\t\t<div className={\"modal-header\"}>\n\t\t\t\t\t<div className={\"modal-header-chapter-name\"}>{props.missionContent.chapterName}</div>\n\t\t\t\t\t<div className={\"modal-header-title\"}>{props.missionContent.missionTitle}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={\"modal-content\"}>\n\t\t\t\t\t<div className={\"modal-item\"}>\n\t\t\t\t\t\t<div className={\"modal-subtitle\"}>\n\t\t\t\t\t\t\t<div><img src={FlagIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t<div>クリア条件</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"center\"}>{props.missionContent.goal}</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={\"modal-item\"}>\n\t\t\t\t\t\t<div className={\"modal-subtitle\"}>\n\t\t\t\t\t\t\t<div><img src={ExplanationIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t<div>ステージ説明</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>{props.missionContent.missionExplanation}</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={\"modal-item modal-buttons\"}>\n\t\t\t\t\t\t<div className={\"modal-button\"} onClick={() => {\n\t\t\t\t\t\t\tprops.setIsVisible (false);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<div><img src={CloseIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t<div className={\"modal-button-text\"}>閉じる</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// ステージクリアモーダル\nexport const MissionClearModal: React.FC<{ isVisible: boolean, close: () => void, missionContent: MissionContent, nextMission: { chapterNameURL: string, missionID: string } | null }> = (props) => {\n\tconst chapter = props.nextMission ? props.nextMission.chapterNameURL : \"\";\n\tconst missionID = props.nextMission ? props.nextMission.missionID : \"\";\n\treturn (\n\t\t<div className={\"modal-background\"} style={{display: props.isVisible ? \"block\" : \"none\"}}>\n\t\t\t<div className={\"modal-panel\"} id={\"mission-clear\"} style={{display: props.isVisible ? \"block\" : \"none\"}}>\n\t\t\t\t<div className={\"modal-header\"}>\n\t\t\t\t\t<div className={\"modal-header-chapter-name\"}>{props.missionContent.chapterName}</div>\n\t\t\t\t\t<div className={\"modal-header-title\"}>{props.missionContent.missionTitle}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={\"modal-content\"}>\n\t\t\t\t\t<div className={\"modal-item modal-clear-text\"}>MISSION CLEAR!</div>\n\t\t\t\t\t<div className={\"modal-item\"}>\n\t\t\t\t\t\t<div className={\"modal-subtitle\"}>\n\t\t\t\t\t\t\t<div><img src={FlagIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t<div>クリア条件</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"center\"}>{props.missionContent.goal}</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={\"modal-item\"}>\n\t\t\t\t\t\t<div className={\"modal-subtitle\"}>\n\t\t\t\t\t\t\t<div><img src={ScoreIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t<div>スコア</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"score-row\"}>\n\t\t\t\t\t\t\t<div>実行時間:</div>\n\t\t\t\t\t\t\t<div>{props.missionContent.score.getTimeSecond ()} 秒</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"score-row\"}>\n\t\t\t\t\t\t\t<div>ブロック数:</div>\n\t\t\t\t\t\t\t<div>{props.missionContent.score.getBlockCount ()} 個</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={\"modal-item modal-buttons\"}>\n\t\t\t\t\t\t<div className={\"modal-button\"}>\n\t\t\t\t\t\t\t<div><img src={BackIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t<div className={\"modal-button-text\"} onClick={() => {\n\t\t\t\t\t\t\t\tprops.close ();\n\t\t\t\t\t\t\t}}>戻る\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Link style={{display: props.nextMission ? \"block\" : \"none\"}} className={\"modal-button-link\"}\n\t\t\t\t\t\t\t  to={`/missions/${chapter}/${missionID}`}>\n\t\t\t\t\t\t\t<div className={\"modal-button\"}>\n\t\t\t\t\t\t\t\t<div><img src={NextIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t\t<div className={\"modal-button-text\"} id={\"next-mission-button\"}>次のステージへ</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div style={{display: props.nextMission ? \"block\" : \"none\"}} className={\"modal-button-spacer\"}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// ステージ失敗モーダル\nexport const MissionFailedModal: React.FC<{ isVisible: boolean, close: () => void, missionContent: MissionContent, failReason: string }> = (props) => {\n\treturn (\n\t\t<div className={\"modal-background\"} style={{display: props.isVisible ? \"block\" : \"none\"}}>\n\t\t\t<div className={\"modal-panel\"} id={\"mission-failed\"} style={{display: props.isVisible ? \"block\" : \"none\"}}>\n\t\t\t\t<div className={\"modal-header\"}>\n\t\t\t\t\t<div className={\"modal-header-chapter-name\"}>{props.missionContent.chapterName}</div>\n\t\t\t\t\t<div className={\"modal-header-title\"}>{props.missionContent.missionTitle}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={\"modal-content\"}>\n\t\t\t\t\t<div className={\"modal-item modal-failed-text\"}>MISSION FAILED...</div>\n\t\t\t\t\t<div className={\"modal-item\"}>\n\t\t\t\t\t\t<div className={\"modal-subtitle\"}>\n\t\t\t\t\t\t\t<div><img src={FlagIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t<div>クリア条件</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"center\"}>{props.missionContent.goal}</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={\"modal-item\"}>\n\t\t\t\t\t\t<div className={\"modal-subtitle\"}>\n\t\t\t\t\t\t\t<div><img src={ExplanationIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t<div>失敗理由</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"center\"}>{props.failReason}</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={\"modal-item modal-buttons\"}>\n\t\t\t\t\t\t<div className={\"modal-button\"}>\n\t\t\t\t\t\t\t<div><img src={BackIcon} className={\"modal-icon\"}/></div>\n\t\t\t\t\t\t\t<div className={\"modal-button-text\"} onClick={() => {\n\t\t\t\t\t\t\t\tprops.close ();\n\t\t\t\t\t\t\t}}>ステージに戻る\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","export default __webpack_public_path__ + \"static/media/Home.fc84cd37.svg\";","export default __webpack_public_path__ + \"static/media/Clear_small.02012400.svg\";","export default __webpack_public_path__ + \"static/media/NotClear_purple.34ad377b.svg\";","export default __webpack_public_path__ + \"static/media/NotClear_white.e3aa938a.svg\";","export default __webpack_public_path__ + \"static/media/Info.3b9c1c35.svg\";","export default __webpack_public_path__ + \"static/media/Program.9ec33d81.svg\";","export default __webpack_public_path__ + \"static/media/Visualizer.ab72d17b.svg\";","export default __webpack_public_path__ + \"static/media/Console.1df86440.svg\";","export default __webpack_public_path__ + \"static/media/Threads.7b61266b.svg\";","export default __webpack_public_path__ + \"static/media/Play.95137c80.svg\";","export default __webpack_public_path__ + \"static/media/Bin.d200a0f7.svg\";","import {ConsoleOutputType} from \"./playground\";\nimport Blockly from \"blockly\";\nimport {missionContents} from \"./missionContents\";\nimport * as BlockSettings from \"./blockSettings\";\nimport {VariableCanvas} from \"./variableCanvas\";\n\n// ミッション一覧\nexport class MissionList {\n\tmissionContents: { chapterName: string, chapterNameURL: string, contents: MissionContent[] }[] = [];\n\n\taddMissionContent (missionContent: MissionContent) {\n\t\tconst chapter = this.missionContents.find ((item) => {\n\t\t\treturn item.chapterName === missionContent.chapterName;\n\t\t});\n\t\tif (chapter) {\n\t\t\t// すでにチャプターあったらそこに追加\n\t\t\tchapter.contents.push (missionContent);\n\t\t} else {\n\t\t\t// なかったら新しいチャプター追加\n\t\t\tthis.missionContents.push ({\n\t\t\t\tchapterName: missionContent.chapterName,\n\t\t\t\tchapterNameURL: missionContent.chapterNameURL,\n\t\t\t\tcontents: [missionContent]\n\t\t\t});\n\t\t}\n\t}\n\n\tfindMissionByID (missionID: string) {\n\t\tfor (const chapter of this.missionContents) {\n\t\t\tfor (const missionContent of chapter.contents) {\n\t\t\t\tif (missionContent.missionID === missionID) {\n\t\t\t\t\treturn missionContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tfindChapter (chapterName: string) {\n\t\tconst chapter = this.missionContents.find ((missionContent) => {\n\t\t\treturn missionContent.chapterName === chapterName;\n\t\t});\n\t\treturn chapter ? chapter.contents : undefined;\n\t}\n\n\tfindNextMission (currentMissionID: string) {\n\t\tfor (let chapterIndex = 0; chapterIndex < this.missionContents.length; chapterIndex++) {\n\t\t\tfor (let missionIndex = 0; missionIndex < this.missionContents[chapterIndex].contents.length; missionIndex++) {\n\t\t\t\tif (this.missionContents[chapterIndex].contents[missionIndex].missionID === currentMissionID) {\n\t\t\t\t\tif (missionIndex + 1 < this.missionContents[chapterIndex].contents.length) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tchapterNameURL: this.missionContents[chapterIndex].chapterNameURL,\n\t\t\t\t\t\t\tmissionID: this.missionContents[chapterIndex].contents[missionIndex + 1].missionID\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (chapterIndex + 1 < this.missionContents.length && this.missionContents[chapterIndex + 1].contents.length > 0) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tchapterNameURL: this.missionContents[chapterIndex + 1].chapterNameURL,\n\t\t\t\t\t\t\tmissionID: this.missionContents[chapterIndex + 1].contents[0].missionID\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\n// ミッション内容\nexport interface MissionContent {\n\tchapterName: string; // チャプター名\n\tchapterNameURL: string; // URLになるチャプター名\n\tmissionTitle: string, // ミッション名\n\tmissionExplanation: JSX.Element, // ミッションの説明\n\tmissionSummary: string, // ステージ一覧に載せるミッション要約\n\tmissionID: string, // ミッションID\n\tscore: MissionScore, // スコア\n\tdefaultProgram: string, // 最初に用意されているプログラム\n\tprogram: string, // 作成途中のプログラム保持\n\tgoal: JSX.Element, // クリア条件\n\teditable: boolean, // プログラム編集可能か\n\tblockCountLimit: number, // ブロック数制限\n\tblockList: BlockSettings.BlockList, // 命令ブロック一覧\n\ttwoDimensionalArrays: TwoDimensionalArrays; // グローバル2次元配列の初期値\n\toneDimensionalArrays: OneDimensionalArrays; // グローバル1次元配列の初期値\n\tglobalVariables: GlobalVariables; // グローバル変数の初期値\n\tjudge: (consoleOutputs: string[],\n\t\t\tinitialTwoDimensionalArrays: { [key: string]: number[][] },\n\t\t\tinitialOneDimensionalArrays: { [key: string]: number[] },\n\t\t\tinitialVariables: { [key: string]: number },\n\t\t\ttwoDimensionalArraysResult: { [key: string]: number[][] },\n\t\t\toneDimensionalArraysResult: { [key: string]: number[] },\n\t\t\tvariablesResult: { [key: string]: number }\n\t) => MissionResult; // ミッション達成判断関数(プログラム終了時に呼び出される)\n}\n\n\n// 配列が定数かランダムかを表すenum\nexport enum GlobalDataType { constant, random}\n\n// ランダム配列の範囲\nexport interface DataRandomRange {\n\tmin: number,\n\tmax: number\n}\n\n// 2次元配列クラス\nexport class TwoDimensionalArrays {\n\tarrays: { [key: string]: number[][] } = {};\n\tarrayTypes: { [key: string]: GlobalDataType } = {};\n\trandomRanges: { [key: string]: DataRandomRange } = {};\n\n\t// すべてのランダム配列の値をシャッフル\n\trandomizeAll () {\n\t\tfor (const key in this.arrays) {\n\t\t\tif (this.arrayTypes[key] === GlobalDataType.random) {\n\t\t\t\t// 長さ取得\n\t\t\t\tconst rowLength = this.arrays[key].length;\n\t\t\t\tconst colLength = this.arrays[key][0].length;\n\n\t\t\t\tthis.arrays[key] = this.getRandomArray (rowLength, colLength, this.randomRanges[key].min, this.randomRanges[key].max);\n\t\t\t}\n\t\t}\n\t}\n\n\t// ランダムな配列を作成\n\tgetRandomArray (rowLength: number, colLength: number, randomMin: number, randomMax: number) {\n\t\t// 配列初期化\n\t\tconst array = new Array (rowLength);\n\t\tfor (let row = 0; row < rowLength; row++) {\n\t\t\tarray[row] = new Array (colLength);\n\t\t}\n\n\t\t// ランダムな値を生成\n\t\tfor (let row = 0; row < rowLength; row++) {\n\t\t\tfor (let col = 0; col < colLength; col++) {\n\t\t\t\tarray[row][col] = Math.floor (Math.random () * (randomMax - randomMin) + randomMin);\n\t\t\t}\n\t\t}\n\n\t\treturn array;\n\t}\n\n\t// 定数の2次元配列を追加\n\taddConstArray (key: string, array: number[][]) {\n\t\tthis.arrays[key] = array;\n\t\tthis.arrayTypes[key] = GlobalDataType.constant;\n\t\tthis.randomRanges[key] = {min: -1, max: -1};\n\t}\n\n\t// ランダムの2次元配列を追加\n\taddRandomArray (key: string, rowLength: number, colLength: number, randomMin: number, randomMax: number) {\n\t\tthis.arrays[key] = this.getRandomArray (rowLength, colLength, randomMin, randomMax);\n\t\tthis.arrayTypes[key] = GlobalDataType.random;\n\t\tthis.randomRanges[key] = {min: randomMin, max: randomMax};\n\t}\n}\n\nexport class OneDimensionalArrays {\n\tarrays: { [key: string]: number[] } = {};\n\tarrayTypes: { [key: string]: GlobalDataType } = {};\n\trandomRanges: { [key: string]: DataRandomRange } = {};\n\n\t// すべてのランダム配列の値をシャッフル\n\trandomizeAll () {\n\t\tfor (const key in this.arrays) {\n\t\t\tif (this.arrayTypes[key] === GlobalDataType.random) {\n\t\t\t\t// 長さ取得\n\t\t\t\tconst length = this.arrays[key].length;\n\n\t\t\t\tthis.arrays[key] = this.getRandomArray (length, this.randomRanges[key].min, this.randomRanges[key].max);\n\t\t\t}\n\t\t}\n\t}\n\n\t// ランダムな配列を作成\n\tgetRandomArray (length: number, randomMin: number, randomMax: number) {\n\t\t// 配列初期化\n\t\tconst array = new Array (length);\n\n\t\t// ランダムな値を生成\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.floor (Math.random () * (randomMax - randomMin) + randomMin);\n\t\t}\n\n\t\treturn array;\n\t}\n\n\t// 定数の2次元配列を追加\n\taddConstArray (key: string, array: number[]) {\n\t\tthis.arrays[key] = array;\n\t\tthis.arrayTypes[key] = GlobalDataType.constant;\n\t\tthis.randomRanges[key] = {min: -1, max: -1};\n\t}\n\n\t// ランダムの2次元配列を追加\n\taddRandomArray (key: string, length: number, randomMin: number, randomMax: number) {\n\t\tthis.arrays[key] = this.getRandomArray (length, randomMin, randomMax);\n\t\tthis.arrayTypes[key] = GlobalDataType.random;\n\t\tthis.randomRanges[key] = {min: randomMin, max: randomMax};\n\t}\n}\n\nexport class GlobalVariables {\n\tvariables: { [key: string]: number } = {};\n\tvariableTypes: { [key: string]: GlobalDataType } = {};\n\trandomRanges: { [key: string]: DataRandomRange } = {};\n\n\t// 全てのランダム値をシャッフル\n\trandomizeAll () {\n\t\tfor (const key in this.variables) {\n\t\t\tif (this.variableTypes[key] === GlobalDataType.random) {\n\t\t\t\tthis.variables[key] = this.getRandomValue (this.randomRanges[key].max, this.randomRanges[key].min);\n\t\t\t}\n\t\t}\n\t}\n\n\t// ランダムな値を作成\n\tgetRandomValue (randomMin: number, randomMax: number) {\n\t\tconst random = Math.floor (Math.random () * (randomMax - randomMin) + randomMin);\n\t\treturn random;\n\t}\n\n\t// 定数を追加\n\taddConstValue (key: string, value: number) {\n\t\tthis.variables[key] = value;\n\t\tthis.variableTypes[key] = GlobalDataType.constant;\n\t\tthis.randomRanges[key] = {min: -1, max: -1};\n\t}\n\n\t// ランダムな値を追加\n\taddRandomValue (key: string, randomMin: number, randomMax: number) {\n\t\tthis.variables[key] = this.getRandomValue (randomMin, randomMax);\n\t\tthis.variableTypes[key] = GlobalDataType.random;\n\t\tthis.randomRanges[key] = {min: randomMin, max: randomMax};\n\t}\n}\n\nexport class MissionScore {\n\tcleared: boolean = false;\n\ttime: number = -1;\n\tblockCount: number = -1;\n\n\tsetClear (time: number, blockCount: number) {\n\t\tthis.cleared = true;\n\t\tthis.time = time;\n\t\tthis.blockCount = blockCount;\n\t}\n\n\tisClear () {\n\t\treturn this.cleared;\n\t}\n\n\tgetTimeSecond () {\n\t\tconst second = this.time / 1000;\n\t\treturn Math.round (second * 100) / 100;\n\t}\n\n\tgetBlockCount () {\n\t\treturn this.blockCount;\n\t}\n}\n\nexport interface MissionResult {\n\tcleared: boolean;\n\tfailReason: string;\n}\n\nexport class Mission {\n\t// 現在のミッション内容\n\tmissionContent: MissionContent;\n\t// グローバルデータ現在値\n\tcurrentTwoDimensionalArrays: { [key: string]: number[][] } = {};\n\tcurrentOneDimensionalArrays: { [key: string]: number[] } = {};\n\tcurrentVariables: { [key: string]: number } = {};\n\t// キャンバス\n\tvariableCanvas: VariableCanvas;\n\t// コンソール出力内容\n\tconsoleOutputs: string[] = [];\n\t// コンソール書き込み関数\n\twriteConsoleView: (output: { text: string, type: ConsoleOutputType }) => void;\n\t// コンソール全消去\n\tclearConsoleView: () => void;\n\t// スレッド追加\n\taddThreadView: (threadInfo: { name: string, blocksXml: string }) => void;\n\t// スレッド削除\n\tremoveThreadView: (threadName: string) => void;\n\n\tconstructor (missionContent: MissionContent, variableCanvas: VariableCanvas,\n\t\t\t\t writeConsole: (output: { text: string, type: ConsoleOutputType }) => void, clearConsole: () => void,\n\t\t\t\t addThread: (threadInfo: { name: string, blocksXml: string }) => void, removeThread: (threadName: string) => void) {\n\t\tthis.missionContent = missionContent;\n\t\tthis.variableCanvas = variableCanvas;\n\t\tthis.writeConsoleView = writeConsole;\n\t\tthis.clearConsoleView = clearConsole;\n\t\tthis.addThreadView = addThread;\n\t\tthis.removeThreadView = removeThread;\n\n\t\tthis.resetGlobalArray ();\n\t}\n\n\tjudge () {\n\t\treturn this.missionContent.judge (this.consoleOutputs,\n\t\t\tthis.missionContent.twoDimensionalArrays.arrays, this.missionContent.oneDimensionalArrays.arrays, this.missionContent.globalVariables.variables,\n\t\t\tthis.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t}\n\n\tprintLog (text: string) {\n\t\tthis.consoleOutputs.push (text);\n\t\tthis.writeConsoleView ({text: text, type: ConsoleOutputType.Log});\n\t}\n\n\tprintError (text: string) {\n\t\tthis.writeConsoleView ({text: text, type: ConsoleOutputType.Error});\n\t}\n\n\tclearConsole () {\n\t\tthis.consoleOutputs = [];\n\t\tthis.clearConsoleView ();\n\t}\n\n\treadTwoDimensionalArray (arrayName: string, row: number, col: number) {\n\t\tconst array = this.currentTwoDimensionalArrays[arrayName];\n\t\tif (array) {\n\t\t\tif (row < array.length && col < array[0].length) {\n\t\t\t\treturn array[row][col];\n\t\t\t} else {\n\t\t\t\tthis.printError (`行 ${row} の値もしくは列 ${col} の値は2次元配列 ${arrayName} の要素数に対して大きすぎます！`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.printError (`\"${arrayName}\" という2次元配列は存在しません！`);\n\t\t}\n\t}\n\n\twriteTwoDimensionalArray (arrayName: string, row: number, col: number, value: number) {\n\t\tconst array = this.currentTwoDimensionalArrays[arrayName];\n\t\tif (array) {\n\t\t\tif (row < array.length && col < array[0].length) {\n\t\t\t\tarray[row][col] = value;\n\t\t\t\tthis.variableCanvas.drawTable (this.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t\t\t} else {\n\t\t\t\tthis.printError (`行 ${row} の値もしくは列 ${col} の値は2次元配列 ${arrayName} の要素数に対して大きすぎます！`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.printError (`\"${arrayName}\" という2次元配列は存在しません！`);\n\t\t}\n\t}\n\n\taddTwoDimensionalArrayAccess (arrayName: string, row: number, col: number, color: string, read: boolean = true) {\n\t\tthis.variableCanvas.addTwoDimensionalArrayAccess (arrayName, row, col, color, read);\n\t\tthis.variableCanvas.drawTable (this.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t}\n\n\tremoveTwoDimensionalArrayAccess (arrayName: string, row: number, col: number, color: string, read: boolean = true) {\n\t\tthis.variableCanvas.removeTwoDimensionalArrayAccess (arrayName, row, col, color, read);\n\t\tthis.variableCanvas.drawTable (this.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t}\n\n\treadOneDimensionalArray (arrayName: string, index: number) {\n\t\tconst array = this.currentOneDimensionalArrays[arrayName];\n\t\tif (array) {\n\t\t\tif (index < array.length) {\n\t\t\t\treturn array[index];\n\t\t\t} else {\n\t\t\t\tthis.printError (`${index} の値が1次元配列 ${arrayName} の要素数に対して大きすぎます！`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.printError (`\"${arrayName}\" という1次元配列は存在しません！`);\n\t\t}\n\t}\n\n\twriteOneDimensionalArray (arrayName: string, index: number, value: number) {\n\t\tconst array = this.currentOneDimensionalArrays[arrayName];\n\t\tif (array) {\n\t\t\tif (index < array.length) {\n\t\t\t\tarray[index] = value;\n\t\t\t\tthis.variableCanvas.drawTable (this.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t\t\t} else {\n\t\t\t\tthis.printError (`${index} の値が1次元配列 ${arrayName} の要素数に対して大きすぎます！`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.printError (`\"${arrayName}\" という1次元配列は存在しません！`);\n\t\t}\n\t}\n\n\taddOneDimensionalArrayAccess (arrayName: string, index: number, color: string, read: boolean = true) {\n\t\tthis.variableCanvas.addOneDimensionalArrayAccess (arrayName, index, color, read);\n\t\tthis.variableCanvas.drawTable (this.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t}\n\n\tremoveOneDimensionalArrayAccess (arrayName: string, index: number, color: string, read: boolean = true) {\n\t\tthis.variableCanvas.removeOneDimensionalArrayAccess (arrayName, index, color, read);\n\t\tthis.variableCanvas.drawTable (this.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t}\n\n\treadVariable (variableName: string) {\n\t\tconst variable = this.currentVariables[variableName];\n\t\tif (variable !== undefined) {\n\t\t\treturn variable;\n\t\t} else {\n\t\t\tthis.printError (`\"${variableName}\" というグローバル変数は存在しません！`);\n\t\t}\n\t}\n\n\twriteVariable (variableName: string, value: number) {\n\t\tconst variable = this.currentVariables[variableName];\n\t\tif (variable !== undefined) {\n\t\t\tthis.currentVariables[variableName] = value;\n\t\t\tthis.variableCanvas.drawTable (this.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t\t} else {\n\t\t\tthis.printError (`\"${variableName}\" というグローバル変数は存在しません！`);\n\t\t}\n\t}\n\n\taddGlobalVariableAccess (arrayName: string, color: string, read: boolean = true) {\n\t\tthis.variableCanvas.addGlobalVariableAccess (arrayName, color, read);\n\t\tthis.variableCanvas.drawTable (this.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t}\n\n\tremoveGlobalVariableAccess (arrayName: string, color: string, read: boolean = true) {\n\t\tthis.variableCanvas.removeGlobalVariableAccess (arrayName, color, read);\n\t\tthis.variableCanvas.drawTable (this.currentTwoDimensionalArrays, this.currentOneDimensionalArrays, this.currentVariables);\n\t}\n\n\tresetGlobalArray () {\n\t\t// ランダム配列をシャッフルして現在値に初期値をコピー\n\t\tthis.missionContent.twoDimensionalArrays.randomizeAll ();\n\t\tthis.missionContent.oneDimensionalArrays.randomizeAll ();\n\t\tthis.missionContent.globalVariables.randomizeAll ();\n\t\tthis.currentTwoDimensionalArrays = JSON.parse (JSON.stringify (this.missionContent.twoDimensionalArrays.arrays));\n\t\tthis.currentOneDimensionalArrays = JSON.parse (JSON.stringify (this.missionContent.oneDimensionalArrays.arrays));\n\t\tthis.currentVariables = JSON.parse (JSON.stringify (this.missionContent.globalVariables.variables));\n\t}\n\n\taddThread (threadName: string, functionStatementElement: Element) {\n\t\tconst xml = Blockly.Xml.domToText (functionStatementElement);\n\t\tthis.addThreadView ({name: threadName, blocksXml: xml});\n\t}\n\n\tremoveThread (threadName: string) {\n\t\tthis.removeThreadView (threadName);\n\t}\n}\n","import * as Mission from \"./mission\";\nimport {BlockType, getAllBlockListXml} from \"./blockSettings\";\nimport React from \"react\";\nimport \"./missionContents.scss\";\n\nexport const missionContents = new Mission.MissionList ();\n\n// 浮動小数点誤差も考えてコンソール出力と計算結果が正しいか比較する関数\nfunction isEqual (consoleOutputs: string, correctValue: number) {\n\tconst number = Number (consoleOutputs);\n\treturn !isNaN (number) && Math.abs (correctValue - number) < Number.EPSILON;\n}\n\n// ステージ1-1\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"1.プログラムの作り方\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>まずは<span className={\"keyword\"}>コンソール</span>に文字列を表示するプログラムを作り、基本的なプログラミング方法を学びます。</div>\n\t\t\t<div>\n\t\t\t\t<span className={\"keyword\"}>プログラム画面</span>左側のメニューにある「動作」から<span className={\"keyword\"}>表示ブロック</span>を\n\t\t\t\t<span className={\"keyword\"}>関数 スタート</span>内にドラッグアンドドロップし、緑色の入力欄に「Hello」と入力してみてください。\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t「ブロックを実行」ボタンを押すとプログラムがスタートします。\n\t\t\t</div>\n\t\t</div>,\n\t\tmissionSummary: \"まずはこのビジュアルプログラミングの使い方を学習します。\",\n\t\tmissionID: \"mission1-01\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>コンソールに \"Hello\" と出力する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [],\n\t\t\tmath: [],\n\t\t\ttext: [BlockType.TEXT],\n\t\t\tlocalVariables: [],\n\t\t\tglobalArrays: [],\n\t\t\tfunctions: [],\n\t\t\tmeasurement: [],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールにテキストを出力してください。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tif (consoleOutputs[0] !== \"Hello\") {\n\t\t\t\treturn {cleared: false, failReason: \"出力されたテキストが違います。「Hello」と出力してください。\"};\n\t\t\t}\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-2\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"2.複数のブロック\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>プログラムのブロックは複数個連ねることができます。今回はコンソールにHelloと3回表示したいので、表示ブロックを3つ連ねます。</div>\n\t\t\t<div>配置し終わったら「ブロックを実行」ボタンからプログラムを実行してください。</div>\n\t\t</div>,\n\t\tmissionSummary: \"複数の命令ブロックを並べる方法を知っておきましょう。\",\n\t\tmissionID: \"mission1-02\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>コンソールに3回 \"Hello\" と出力する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [],\n\t\t\tmath: [],\n\t\t\ttext: [BlockType.TEXT],\n\t\t\tlocalVariables: [],\n\t\t\tglobalArrays: [],\n\t\t\tfunctions: [],\n\t\t\tmeasurement: [],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 3) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 3) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tfor (const consoleOutput of consoleOutputs) {\n\t\t\t\tif (consoleOutput !== \"Hello\") {\n\t\t\t\t\treturn {cleared: false, failReason: \"「Hello」ではないコンソール出力が混ざっています。\"};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-3\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"3.繰り返し\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>ある命令を指定した回数繰り返すには<span className={\"keyword\"}>繰り返しブロック</span>を使います。</div>\n\t\t\t<div>繰り返しブロックは「ループ」カテゴリの中にあります。</div>\n\t\t\t<div>このステージは使用するブロック数の制限があるため、ただ表示ブロックを50個並べる方法ではクリアできません。</div>\n\t\t</div>,\n\t\tmissionSummary: \"同じ操作を何回も繰り返すには「繰り返し(ループ)」を使うと便利です。\",\n\t\tmissionID: \"mission1-03\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>コンソールに50回 \"Hello\" と出力する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: 10,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER],\n\t\t\ttext: [BlockType.TEXT],\n\t\t\tlocalVariables: [],\n\t\t\tglobalArrays: [],\n\t\t\tfunctions: [],\n\t\t\tmeasurement: [],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 50) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 50) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tfor (const consoleOutput of consoleOutputs) {\n\t\t\t\tif (consoleOutput !== \"Hello\") {\n\t\t\t\t\treturn {cleared: false, failReason: \"「Hello」ではないコンソール出力が混ざっています。\"};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-4\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"4.数値ブロックと計算\",\n\t\tmissionExplanation: <div>\n\t\t\t<span className={\"keyword\"}>数値ブロック</span>と<span className={\"keyword\"}>計算ブロック</span>の使い方を学びます。\n\t\t</div>,\n\t\tmissionSummary: \"プログラムに四則演算などの計算を行わせることができます。\",\n\t\tmissionID: \"mission1-04\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div><span className={\"keyword\"}>数値ブロック</span>や<span className={\"keyword\"}>計算ブロック</span>を使用し、\n\t\t\t63×87の答えをコンソールに表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [],\n\t\t\tglobalArrays: [],\n\t\t\tfunctions: [],\n\t\t\tmeasurement: [],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tif (!isEqual (consoleOutputs[0], 63 * 87)) {\n\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-5\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"5.変数の使い方\",\n\t\tmissionExplanation: <div><span className={\"keyword\"}>変数の作り方</span>、<span className={\"keyword\"}>値の書き込み</span>/\n\t\t\t<span className={\"keyword\"}>読み込み</span>/<span className={\"keyword\"}>加算</span>の方法を学びます。</div>,\n\t\tmissionSummary: \"値を記憶しておくことのできる「変数」の使い方を学習します。\",\n\t\tmissionID: \"mission1-05\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div><span className={\"keyword\"}>変数ブロック</span>を使用し、 1+2+3+4+5 の計算結果をコンソールに表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [],\n\t\t\tfunctions: [],\n\t\t\tmeasurement: [],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tif (!isEqual (consoleOutputs[0], 1 + 2 + 3 + 4 + 5)) {\n\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-6\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"6.関数の作り方と使い方\",\n\t\tmissionExplanation: <div><span className={\"keyword\"}>関数(サブルーチン)</span>の作り方と使い方を学びます。</div>,\n\t\tmissionSummary: \"同じ処理が複数回登場するときは「関数」を使いましょう。\",\n\t\tmissionID: \"mission1-06\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>29+76 を計算しコンソールに表示する<span className={\"keyword\"}>関数</span>を作成する。</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT],\n\t\t\tmeasurement: [],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tif (!isEqual (consoleOutputs[0], 29 + 76)) {\n\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-7\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"7.関数の引数と戻り値\",\n\t\tmissionExplanation: <div>関数に値を渡す<span className={\"keyword\"}>引数(ひきすう)</span>と\n\t\t\t関数から結果を受け取る<span className={\"keyword\"}>戻り値</span>の使い方を学びます。</div>,\n\t\tmissionSummary: \"関数には値の入力である「引数」と出力である「戻り値」があります。\",\n\t\tmissionID: \"mission1-07\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div><span className={\"keyword\"}>引数</span>で渡された3つの数値の平均を求める関数を作成し、12 64 83の平均をコンソールに表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.FUNCTION_CALL_WITH_RETURN, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT, BlockType.RETURN_VALUE],\n\t\t\tmeasurement: [],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tif (!isEqual (consoleOutputs[0], (12 + 64 + 83) / 3)) {\n\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-8\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"8.処理時間計測\",\n\t\tmissionExplanation: <div><span className={\"keyword\"}>ストップウォッチ</span>機能を使い、処理にかかった時間の計測を行います。</div>,\n\t\tmissionSummary: \"処理にかかった時間を計測するストップウォッチ機能の使い方を学習します。\",\n\t\tmissionID: \"mission1-08\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>Helloと50回コンソールに表示し、最後にその処理にかかった時間を表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 51) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 51) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\t// Hello判定\n\t\t\tfor (let i = 0; i < consoleOutputs.length - 1; i++) {\n\t\t\t\tif (consoleOutputs[i] !== \"Hello\") {\n\t\t\t\t\treturn {cleared: false, failReason: \"「Hello」ではないコンソール出力が混ざっています。\"};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 判定用にコンソール出力を数値型に変換\n\t\t\tconst number = Number (consoleOutputs[consoleOutputs.length - 1]);\n\t\t\tif (isNaN (number)) {\n\t\t\t\treturn {cleared: false, failReason: \"最後にはストップウォッチで測った時間を出力してください。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-9\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tglobalVariables.addConstValue (\"Value\", 2);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"9.グローバル変数1\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>\n\t\t\t\t<span className={\"keyword\"}>ローカル変数</span>は定義した関数内でしかアクセスすることはできませんが、\n\t\t\t\t<span className={\"keyword\"}>グローバル変数</span>は様々な関数内から同じ領域にアクセスすることができます。\n\t\t\t</div>\n\t\t\t<div>その分バグが発生したときに原因の特定が困難になりやすいので、使用する用途には注意するようにしましょう。</div>\n\t\t\t<div>このツールではグローバル変数は必要なものが問題であらかじめ用意され、そこへ読み込み/書き込みしていくとう方法になっています。</div>\n\t\t\t<div>まずはグローバル変数の読み込みを行ってみます。画面中央にグローバル変数の一覧があり、今回は「Value」という変数があります。</div>\n\t\t\t<div>「グローバルデータ」カテゴリのグローバル変数読み込みブロックを使用し、この変数Valueの値を読み取りコンソールに表示してください。</div>\n\t\t</div>,\n\t\tmissionSummary: \"どの関数からもアクセスできる変数から値を読み取ってみましょう。\",\n\t\tmissionID: \"mission1-09\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>グローバル変数「Value」の値を読み込み、コンソールに表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_VARIABLE_READ],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tif (!isEqual (consoleOutputs[0], initialVariables[\"Value\"])) {\n\t\t\t\treturn {cleared: false, failReason: \"出力された数字が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-10\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tglobalVariables.addConstValue (\"Result\", 0);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"10.グローバル変数2\",\n\t\tmissionExplanation: <div>\n\t\t\t次はグローバル変数の書き込みを行ってみます。読み込みの時と同じ「グローバルデータ」カテゴリにあるグローバル変数書き込みブロックを使用します。\n\t\t</div>,\n\t\tmissionSummary: \"どの関数からもアクセスできる変数に値を書き込んでみましょう。\",\n\t\tmissionID: \"mission1-10\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>32 - 24の計算結果をグローバル変数「Result」に書き込む</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_VARIABLE_READ, BlockType.GLOBAL_VARIABLE_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (variablesResult[\"Result\"] !== 32 - 24) {\n\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-11\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\toneDimensionalArrays.addConstArray (\"Data\", [2, 4, 6, 8]);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"11.グローバル1次元配列1\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>\n\t\t\t\t<span className={\"keyword\"}>配列</span>は画面中央に図示されているように複数の値を記憶できるデータ構造です。\n\t\t\t\t値が入っているそれぞれの要素には<span className={\"keyword\"}>インデックス番号</span>を使ってアクセスします。\n\t\t\t</div>\n\t\t\t<div>このツールでは配列はグローバル領域のみで使用でき、グローバル変数と同じで各問題で必要なものが与えられます。</div>\n\t\t\t<div>\n\t\t\t\tグローバル配列の読み込みには「グローバルデータ」カテゴリの「グローバル配列読み込み」ブロックを使い、\n\t\t\t\t読み込みたい配列の名前とインデックス番号を指定します。\n\t\t\t</div>\n\t\t</div>,\n\t\tmissionSummary: \"どの関数からもアクセスできる1次元配列から値を読み取ってみましょう。\",\n\t\tmissionID: \"mission1-11\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>配列「Data」の2番目の要素を読み取り、その内容をコンソールに表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tif (!isEqual (consoleOutputs[0], initialOneDimensionalArrays[\"Data\"][2])) {\n\t\t\t\treturn {cleared: false, failReason: \"出力された数字が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-12\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\toneDimensionalArrays.addConstArray (\"Data\", [2, 4, 6, 8]);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"12.グローバル1次元配列2\",\n\t\tmissionExplanation: <div>\n\t\t\tグローバル配列に値を書き込む際も読み込みと同じ「グローバルデータ」カテゴリを使用します。\n\t\t\t書き込みには書き込む配列の名前、インデックス番号と書き込む値を指定して使用します。\n\t\t</div>,\n\t\tmissionSummary: \"どの関数からもアクセスできる1次元配列に値を書き込んでみましょう。\",\n\t\tmissionID: \"mission1-12\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>配列「Data」の全ての要素を0にする</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tfor (const value of oneDimensionalArraysResult[\"Data\"]) {\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\treturn {cleared: false, failReason: \"Dataに0でない要素が含まれています。\"};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-13\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\ttwoDimensionalArrays.addConstArray (\"Data\", [[1, 2, 3], [4, 5, 6]]);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"13.グローバル2次元配列\",\n\t\tmissionExplanation: <div>\n\t\t\t<span className={\"keyword\"}>2次元配列</span>は行と列をインデックス番号として指定し値の読み書きを行うデータ構造です。\n\t\t\tこれまでの配列と同じように読み込みと書き込みのブロックがあります。\n\t\t</div>,\n\t\tmissionSummary: \"どの関数からもアクセスできる2次元配列に値を読み書きしてみましょう。\",\n\t\tmissionID: \"mission1-13\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>配列「Data」の全ての要素を0にする</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tfor (const row of twoDimensionalArraysResult[\"Data\"]) {\n\t\t\t\tfor (const value of row) {\n\t\t\t\t\tif (value !== 0) {\n\t\t\t\t\t\treturn {cleared: false, failReason: \"Dataに0でない要素が含まれています。\"};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-14\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\ttwoDimensionalArrays.addRandomArray (\"Data\", 2, 3, 0, 99);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"14.ランダムな配列\",\n\t\tmissionExplanation: <div>\n\t\t\tグローバル2次元配列を使った計算を行ってみます。今回は要素の値が<span className={\"keyword\"}>ランダム</span>で決まるため、\n\t\t\tプログラムではなく自分で答えを計算しただ表示するという解法はできません。\n\t\t</div>,\n\t\tmissionSummary: \"このツールのグローバル変数や配列には、ステージごとにランダムな値が与えられる場合があります。\",\n\t\tmissionID: \"mission1-14\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>配列「Data」の全要素の平均をコンソールに出力する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tlet sum = 0;\n\t\t\tlet count = 0\n\t\t\tfor (const row of initialTwoDimensionalArrays[\"Data\"]) {\n\t\t\t\tfor (const value of row) {\n\t\t\t\t\tsum += value;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isEqual (consoleOutputs[0], sum / count)) {\n\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ1-15\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\ttwoDimensionalArrays.addRandomArray (\"Data\", 2, 3, 0, 99);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"1章 基本操作と逐次プログラミング\",\n\t\tchapterNameURL: \"chapter1\",\n\t\tmissionTitle: \"15.分岐\",\n\t\tmissionExplanation: <div>\n\t\t\t<div><span className={\"keyword\"}>分岐</span>を使うと、条件に応じて実行する処理を変えることができます。</div>\n\t\t\t<div>\n\t\t\t\t分岐は「分岐/論理」カテゴリ内にあり、条件を満たしたときのみ特定の処理を行う分岐(if文に相当)と、\n\t\t\t\t条件を満たしたときとそうでないときで別の処理を行わせる分岐(if-else文に相当)が存在します。\n\t\t\t</div>\n\t\t</div>,\n\t\tmissionSummary: \"条件によって処理を変えることができる「分岐」を学習します。\",\n\t\tmissionID: \"mission1-15\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>配列「Data」の全要素の平均を計算し、結果が50以上だったら「High」、それ以外の場合は「Low」とコンソールに出力する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: []\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tlet sum = 0;\n\t\t\tlet count = 0\n\t\t\tfor (const row of initialTwoDimensionalArrays[\"Data\"]) {\n\t\t\t\tfor (const value of row) {\n\t\t\t\t\tsum += value;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst average = sum / count;\n\t\t\tif (consoleOutputs[0] !== (average >= 50 ? \"High\" : \"Low\")) {\n\t\t\t\treturn {cleared: false, failReason: \"出力結果が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ2-1\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"2章 並列プログラミング入門\",\n\t\tchapterNameURL: \"chapter2\",\n\t\tmissionTitle: \"1.スレッドの生成\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>ここからいよいよ並列プログラミングに入ります。</div>\n\t\t\t<div>並列処理を行うためには指定した関数を<span className={\"keyword\"}>スレッド</span>として生成し複数個同時実行する必要があります。</div>\n\t\t\t<div>まずはHelloとコンソールに表示する関数を作りましょう。</div>\n\t\t\t<div>その後、スタート関数内に「並列処理」カテゴリのスレッド作成ブロックを用意し、関数名に作成した関数の名前を入力します。スレッド名はそれぞれのスレッドを区別するための名前で、他のスレッドと名前が被ってはいけません。</div>\n\t\t\t<div>「スレッド1」「スレッド2」というように何番目のスレッドかわかるようにすると良いでしょう。</div>\n\t\t\t<div>今回は4つのスレッドを同時実行するので、スタート関数内にはスレッド作成ブロックを4つ並べる必要があります。</div>\n\t\t</div>,\n\t\tmissionSummary: \"並列プログラミングの処理単位である「スレッド」の作成を行なってみます。\",\n\t\tmissionID: \"mission2-01\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>4つの<span className={\"keyword\"}>スレッド</span>を生成し、\n\t\t\tそれぞれの<span className={\"keyword\"}>スレッド</span>から1回ずつ「Hello」とコンソールに表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 4) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 4) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tfor (const outputs of consoleOutputs) {\n\t\t\t\tif (outputs !== \"Hello\") {\n\t\t\t\t\treturn {cleared: false, failReason: \"「Hello」ではないコンソール出力が混ざっています。\"};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ2-2\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"2章 並列プログラミング入門\",\n\t\tchapterNameURL: \"chapter2\",\n\t\tmissionTitle: \"2.スレッドの終了待ち1\",\n\t\tmissionExplanation: <div>\n\t\t\t今回は各スレッドで10回Helloと表示する必要があります。このようにスレッド内である程度時間のかかる処理を行う場合はある困ったことが起こります。\n\t\t</div>,\n\t\tmissionSummary: \"複数スレッドを作成する際に気をつけなければならないことがあります。\",\n\t\tmissionID: \"mission2-02\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>4つのスレッドを生成し、それぞれのスレッドから10回ずつ「Hello」とコンソールに表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ2-3\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"2章 並列プログラミング入門\",\n\t\tchapterNameURL: \"chapter2\",\n\t\tmissionTitle: \"3.スレッドの終了待ち2\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>前回では各スレッドの処理が終了する前にスタート関数が終了してしまったため、途中でプログラムが終了してしまいました。</div>\n\t\t\t<div>これを防ぐためには、スタート関数に各スレッドの処理終了を待機してもらう必要があります。</div>\n\t\t\t<div>\n\t\t\t\tここで使うのが<span className={\"keyword\"}>終了待ち機能(Join)</span>機能です。\n\t\t\t\t「並列処理」カテゴリの終了待ちブロックを使うと、指定した名前のスレッドの処理が終了するまでそのブロックでプログラムの実行が停止します。\n\t\t\t</div>\n\t\t\t<div>今回は4つのスレッドを生成するため、スタート関数内の終了待ちブロックも4つ必要になります。</div>\n\t\t</div>,\n\t\tmissionSummary: \"複数スレッド間で同期を取る方法を学習します。\",\n\t\tmissionID: \"mission2-03\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>4つのスレッドを生成し、それぞれのスレッドから10回ずつ「Hello」とコンソールに表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 4 * 10) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 4 * 10) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tfor (const output of consoleOutputs) {\n\t\t\t\tif (output !== \"Hello\") {\n\t\t\t\t\treturn {cleared: false, failReason: \"「Hello」ではないコンソール出力が混ざっています。\"};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ2-4\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\toneDimensionalArrays.addConstArray (\"Data\", [1, 2, 3, 4]);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"2章 並列プログラミング入門\",\n\t\tchapterNameURL: \"chapter2\",\n\t\tmissionTitle: \"4.スレッドの引数\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>関数と同じようにスレッドにも引数を渡すことができます。</div>\n\t\t\t<div>引数を渡す際にはスレッド作成ブロックの引数1~3の部分に値を入れます。\n\t\t\t\tスレッド内で引数を受け取るには関数の引数受け取りと同じように「関数」カテゴリの引数ブロックを使用します。\n\t\t\t</div>\n\t\t</div>,\n\t\tmissionSummary: \"スレッド生成時、通常の関数呼び出しと同じように引数を渡すことができます。\",\n\t\tmissionID: \"mission2-04\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>4つのスレッド使い、グローバル配列「Data」の要素を全て0にする</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tfor (const value of oneDimensionalArraysResult[\"Data\"]) {\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\treturn {cleared: false, failReason: \"Dataに0でない要素が含まれています。\"};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ2-5\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\ttwoDimensionalArrays.addConstArray (\"Data\", [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"2章 並列プログラミング入門\",\n\t\tchapterNameURL: \"chapter2\",\n\t\tmissionTitle: \"5.逐次処理と並列処理の比較1\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>今回と次回のステージでは並列処理を使わない逐次的なプログラムと並列プログラムでどのような処理速度の差が出るか比較します。</div>\n\t\t\t<div>今回は並列処理は使用せず、通常の逐次プログラムで2次元配列を処理し、最後にその処理にかかった時間をストップウォッチで測り表示してください。</div>\n\t\t</div>,\n\t\tmissionSummary: \"通常の逐次処理と並列処理のプログラムで処理時間を比較します。まずは逐次処理を作ってみます。\",\n\t\tmissionID: \"mission2-05\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>グローバル配列「Data」の値を並列処理を使わずに全て0にし、その処理にかかった時間を表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tfor (const row of twoDimensionalArraysResult[\"Data\"]) {\n\t\t\t\tfor (const col of row) {\n\t\t\t\t\tif (col !== 0) {\n\t\t\t\t\t\treturn {cleared: false, failReason: \"Dataに0でない要素が含まれています。\"};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isNaN (Number (consoleOutputs[0]))) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールには処理時間を出力してください。\"}\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ2-6\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\ttwoDimensionalArrays.addConstArray (\"Data\", [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"2章 並列プログラミング入門\",\n\t\tchapterNameURL: \"chapter2\",\n\t\tmissionTitle: \"6.逐次処理と並列処理の比較2\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>続いて今回は4スレッドの並列プログラムを使用して2次元配列を処理してください。</div>\n\t\t\t<div>配列の1行目を1スレッド目、2行目を2スレッド目...というように仕事を割り振り、処理させると良いでしょう。</div>\n\t\t\t<div>前回と同じように最後に処理にかかった時間をコンソールに表示し、前回のステージでの経過時間と比較してみてください。</div>\n\t\t</div>,\n\t\tmissionSummary: \"通常の逐次処理と並列処理のプログラムで処理時間を比較します。並列処理で同じ動きを作ってみます。\",\n\t\tmissionID: \"mission2-06\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>グローバル配列「Data」の値を並列処理で全て0にし、その処理にかかった時間を表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tfor (const row of twoDimensionalArraysResult[\"Data\"]) {\n\t\t\t\tfor (const col of row) {\n\t\t\t\t\tif (col !== 0) {\n\t\t\t\t\t\treturn {cleared: false, failReason: \"Dataに0でない要素が含まれています。\"};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isNaN (Number (consoleOutputs[0]))) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールには処理時間を出力してください。\"}\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ2-7\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tconst array = [];\n\tconst rowCount = 8;\n\tconst colCount = 16;\n\tfor (let i = 0; i < rowCount; i++) {\n\t\tconst row = [];\n\t\tfor (let j = 0; j < colCount; j++) {\n\t\t\trow.push (i * rowCount + j);\n\t\t}\n\t\tarray.push (row);\n\t}\n\ttwoDimensionalArrays.addConstArray (\"Data\", array);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"2章 並列プログラミング入門\",\n\t\tchapterNameURL: \"chapter2\",\n\t\tmissionTitle: \"7.仕事の割り振り\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>今回のステージでは8行16列という大きいサイズの配列の処理に挑戦します。</div>\n\t\t\t<div>最大4スレッドまでしか使えない中、各スレッドにどのように仕事を割り振れば良いでしょうか。</div>\n\t\t</div>,\n\t\tmissionSummary: \"大量のデータを並列処理するとき、各スレッドにどのように仕事を割り振れば良いでしょうか。\",\n\t\tmissionID: \"mission2-07\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>グローバル配列「Data」の値を並列処理で全て0にし、その処理にかかった時間を表示する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (consoleOutputs.length < 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が少なすぎます。\"};\n\t\t\t} else if (consoleOutputs.length > 1) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールへの出力が多すぎます。\"};\n\t\t\t}\n\n\t\t\tfor (const row of twoDimensionalArraysResult[\"Data\"]) {\n\t\t\t\tfor (const col of row) {\n\t\t\t\t\tif (col !== 0) {\n\t\t\t\t\t\treturn {cleared: false, failReason: \"Dataに0でない要素が含まれています。\"};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isNaN (Number (consoleOutputs[0]))) {\n\t\t\t\treturn {cleared: false, failReason: \"コンソールには処理時間を出力してください。\"}\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ2-8\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tconst rowCount = 4;\n\tconst colCount = 8;\n\ttwoDimensionalArrays.addRandomArray (\"A\", rowCount, colCount, 0, 10);\n\ttwoDimensionalArrays.addRandomArray (\"B\", rowCount, colCount, 0, 10);\n\tconst array: number[][] = Array (4);\n\tconst row = Array (8);\n\trow.fill (0);\n\tarray.fill (row);\n\ttwoDimensionalArrays.addConstArray (\"A+B\", array);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"2章 並列プログラミング入門\",\n\t\tchapterNameURL: \"chapter2\",\n\t\tmissionTitle: \"8.行列計算\",\n\t\tmissionExplanation: <div>\n\t\t\t並列処理を使用して行列計算を行ってみましょう。\n\t\t</div>,\n\t\tmissionSummary: \"実践的な並列プログラミングを練習してみましょう。\",\n\t\tmissionID: \"mission2-08\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>グローバル2次元配列を行列に見立て、「A」の行列と「B」の行列を加算した結果を「A+B」の行列に代入する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tfor (let row = 0; row < initialTwoDimensionalArrays[\"A+B\"].length; row++) {\n\t\t\t\tfor (let col = 0; col < initialTwoDimensionalArrays[\"A+B\"][0].length; col++) {\n\t\t\t\t\tconst correct = initialTwoDimensionalArrays[\"A\"][row][col] + initialTwoDimensionalArrays[\"B\"][row][col];\n\t\t\t\t\tif (twoDimensionalArraysResult[\"A+B\"][row][col] !== correct) {\n\t\t\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ3-1\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\toneDimensionalArrays.addConstArray (\"fib\", [0, 0, 0, 0, 0, 0, 0, 0]);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"3章 並列プログラミング基礎\",\n\t\tchapterNameURL: \"chapter3\",\n\t\tmissionTitle: \"1.並列化困難なアルゴリズム\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>世の中には並列化が難しいアルゴリズムも存在します。</div>\n\t\t\t<div>今回使用するフィボナッチ数列は有名な例です。フィボナッチ数列は、</div>\n\t\t\t<div>F0 = 0</div>\n\t\t\t<div>F1 = 1</div>\n\t\t\t<div>Fn+2 = Fn + Fn+1</div>\n\t\t\t<div>で与えられる数列です。</div>\n\t\t</div>,\n\t\tmissionSummary: \"世の中には並列化が難しいアルゴリズムも存在します。\",\n\t\tmissionID: \"mission3-01\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>フィボナッチ数列を求め、0番目の要素にF0の値、1番目の要素にF1の値...というように配列「fib」を完成させる</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tconst correct = [0, 1, 1, 2, 3, 5, 8, 13];\n\t\t\tfor (let i = 0; i < correct.length; i++) {\n\t\t\t\tif (oneDimensionalArraysResult[\"fib\"][i] !== correct[i]) {\n\t\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ3-2\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\ttwoDimensionalArrays.addRandomArray (\"Data\", 4, 4, 1, 9);\n\tglobalVariables.addConstValue (\"Sum\", 0);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"3章 並列プログラミング基礎\",\n\t\tchapterNameURL: \"chapter3\",\n\t\tmissionTitle: \"2.排他制御1\",\n\t\tmissionExplanation: <div>複数スレッドからグローバル領域の同じ場所に書き込みを行う時には注意が必要です。</div>,\n\t\tmissionSummary: \"複数スレッドからグローバル領域の同じ場所に書き込みを行う際、逐次プログラミングでは起こらないある現象に注意が必要です。\",\n\t\tmissionID: \"mission3-02\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>配列「Data」の各要素の合計を並列処理で求め、グローバル変数「sum」に代入する</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_VARIABLE_READ, BlockType.GLOBAL_VARIABLE_WRITE, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (variablesResult[\"Sum\"] === 0) {\n\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ3-3\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\ttwoDimensionalArrays.addRandomArray (\"Data\", 4, 4, 1, 9);\n\tglobalVariables.addConstValue (\"Sum\", 0);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"3章 並列プログラミング基礎\",\n\t\tchapterNameURL: \"chapter3\",\n\t\tmissionTitle: \"3.排他制御2\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>前回のステージでは変数「Sum」への加算処理が各スレッドで衝突してしまい、誤った結果が計算されてしまいました。</div>\n\t\t\t<div>ミューテックスを使うと複数スレッドから安全にグローバル領域に書き込みを行うことができます。</div>\n\t\t</div>,\n\t\tmissionSummary: \"安全に複数スレッドからグローバル領域に書き込みを行うにはどうしたら良いでしょうか。\",\n\t\tmissionID: \"mission3-03\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>グローバル変数「sum」に配列「Data」の各要素の合計を並列処理で入れる。</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_VARIABLE_READ, BlockType.GLOBAL_VARIABLE_WRITE, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN, BlockType.MUTEX_LOCK, BlockType.MUTEX_UNLOCK]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tlet sum = 0;\n\t\t\tfor (const row of initialTwoDimensionalArrays[\"Data\"]) {\n\t\t\t\tfor (const col of row) {\n\t\t\t\t\tsum += col;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (variablesResult[\"Sum\"] !== sum) {\n\t\t\t\treturn {cleared: false, failReason: \"計算結果が異なります。\"};\n\t\t\t}\n\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ3-4\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tglobalVariables.addConstValue (\"Value1\", 0);\n\tglobalVariables.addConstValue (\"Value2\", 0);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"3章 並列プログラミング基礎\",\n\t\tchapterNameURL: \"chapter3\",\n\t\tmissionTitle: \"4.デッドロック1\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>ミューテックスは便利な機能ですが、使い方に注意しないとプログラムがフリーズする原因となります。</div>\n\t\t\t<div>このステージではあらかじめ用意されたプログラムを実行し、その現象を確認してみます。プログラムは編集不可になっています。</div>\n\t\t</div>,\n\t\tmissionSummary: \"ミューテックスは便利な機能ですが、使い方に注意しないとプログラムがフリーズする原因となります。\",\n\t\tmissionID: \"mission3-04\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><block type=\\\"entry_point\\\" id=\\\"5e{JeNdzKRK}Nyg(x2Ul\\\" x=\\\"58\\\" y=\\\"59\\\"><statement name=\\\"routine\\\"><block type=\\\"thread_create\\\" id=\\\"M-u)d9Kj*Y0/p(xZa|?@\\\"><field name=\\\"thread_function_name\\\">スレッドA</field><value name=\\\"thread_name\\\"><shadow type=\\\"text\\\" id=\\\"b3V,_dF.((/@2N[?,}ai\\\"><field name=\\\"TEXT\\\">スレッド1</field></shadow></value><value name=\\\"argument1\\\"><shadow type=\\\"math_number\\\" id=\\\"/hk3C)59^~}gn1tdebqQ\\\"><field name=\\\"NUM\\\">0</field></shadow></value><value name=\\\"argument2\\\"><shadow type=\\\"math_number\\\" id=\\\"sKJQMZNlyr(WidSgzrxU\\\"><field name=\\\"NUM\\\">0</field></shadow></value><value name=\\\"argument3\\\"><shadow type=\\\"math_number\\\" id=\\\"p{{-gLjtOJ.ZmC3m3[+s\\\"><field name=\\\"NUM\\\">0</field></shadow></value><next><block type=\\\"thread_create\\\" id=\\\"]7i*2m~H-f?,G#}EkOM5\\\"><field name=\\\"thread_function_name\\\">スレッドB</field><value name=\\\"thread_name\\\"><shadow type=\\\"text\\\" id=\\\"~fgy!ViH%TLLg?TE/][#\\\"><field name=\\\"TEXT\\\">スレッド2</field></shadow></value><value name=\\\"argument1\\\"><shadow type=\\\"math_number\\\" id=\\\"mBzH?(v~goBow8|`n90O\\\"><field name=\\\"NUM\\\">0</field></shadow></value><value name=\\\"argument2\\\"><shadow type=\\\"math_number\\\" id=\\\"pho}#mIGcCjwW,nmS?:A\\\"><field name=\\\"NUM\\\">0</field></shadow></value><value name=\\\"argument3\\\"><shadow type=\\\"math_number\\\" id=\\\"sZ`sj+xw?X7{#f8hz9Md\\\"><field name=\\\"NUM\\\">0</field></shadow></value><next><block type=\\\"thread_join\\\" id=\\\"+ozu|.Uvf2wuBGQrPk/0\\\"><value name=\\\"thread_name\\\"><shadow type=\\\"text\\\" id=\\\"r5c{3j/+plxClP{*0sa*\\\"><field name=\\\"TEXT\\\">スレッド1</field></shadow></value><next><block type=\\\"thread_join\\\" id=\\\"D@`ZWgGn/),/PPZ%Da]z\\\"><value name=\\\"thread_name\\\"><shadow type=\\\"text\\\" id=\\\"?Awa9y@$}Rp/|Kk1{{y$\\\"><field name=\\\"TEXT\\\">スレッド2</field></shadow></value></block></next></block></next></block></next></block></statement></block><block type=\\\"function_definition\\\" id=\\\"uf]-n=qS=[Vr3;LnO^[,\\\" x=\\\"60\\\" y=\\\"306\\\"><field name=\\\"name\\\">スレッドA</field><statement name=\\\"routine\\\"><block type=\\\"controls_repeat_ext\\\" id=\\\"Mupq}=Zy`:XL4yjbHE]-\\\"><value name=\\\"TIMES\\\"><shadow type=\\\"math_number\\\" id=\\\"k7y-97P3^N/(Bhh1g%Dn\\\"><field name=\\\"NUM\\\">10</field></shadow></value><statement name=\\\"DO\\\"><block type=\\\"mutex_lock\\\" id=\\\"~LQ3KvQ%HXSr?+(,dncg\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"GIa!2HaLbxqsA{tG%NP2\\\"><field name=\\\"TEXT\\\">Value1</field></shadow></value><next><block type=\\\"global_variable_write\\\" id=\\\"gUnjd.Q_N,N}cQ$4S@5r\\\"><field name=\\\"name\\\">Value1</field><value name=\\\"value\\\"><shadow type=\\\"math_number\\\" id=\\\"t#TDnVY9)Wp3:W7DVlh7\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"Z}`!9,U30Ks;KVkW_=r+\\\"><field name=\\\"OP\\\">ADD</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\" id=\\\"OaA0qK:[_vk~a$Zo-J,~\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"global_variable_read\\\" id=\\\"Q+9Z%(pn5n@8@zQ*O:Y)\\\"><field name=\\\"name\\\">Value1</field></block></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"0=dbF)3y::1D$AvqYxj{\\\"><field name=\\\"NUM\\\">1</field></shadow></value></block></value><next><block type=\\\"mutex_lock\\\" id=\\\"PfTJ}wsEc$duOCE}.C6P\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"{,RhKFK@WS8vm]-i?D$a\\\"><field name=\\\"TEXT\\\">Value2</field></shadow></value><next><block type=\\\"global_variable_write\\\" id=\\\"*eP0cs;iTrb_E2:cIGeK\\\"><field name=\\\"name\\\">Value2</field><value name=\\\"value\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"6RORErS-`-R~IV@aH~CY\\\"><field name=\\\"OP\\\">ADD</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"global_variable_read\\\" id=\\\"NaSG4hOaj3kmKHlAMm!h\\\"><field name=\\\"name\\\">Value2</field></block></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"wY9bHW.;KUY|+Ko=ex4]\\\"><field name=\\\"NUM\\\">1</field></shadow></value></block></value><next><block type=\\\"mutex_unlock\\\" id=\\\"M*5{g$gJBP@$OEjpe.7@\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"y*5}tO=)dU^GQEy6#:AJ\\\"><field name=\\\"TEXT\\\">Value1</field></shadow></value><next><block type=\\\"mutex_unlock\\\" id=\\\"aaGJ8;pJ/dkTp}pyhRGd\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"Kcy!4Q]oo52+mc2^4na3\\\"><field name=\\\"TEXT\\\">Value2</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></statement></block></statement></block><block type=\\\"function_definition\\\" id=\\\"aUCR?li!A[up^OHB)jOL\\\" x=\\\"58\\\" y=\\\"718\\\"><field name=\\\"name\\\">スレッドB</field><statement name=\\\"routine\\\"><block type=\\\"controls_repeat_ext\\\" id=\\\"$nrcvf$r_xi(|48Gl/_y\\\"><value name=\\\"TIMES\\\"><shadow type=\\\"math_number\\\" id=\\\"[JWavU]@MY#e=/K#$|6R\\\"><field name=\\\"NUM\\\">10</field></shadow></value><statement name=\\\"DO\\\"><block type=\\\"mutex_lock\\\" id=\\\"8d79oZE?F#zllNK4MH30\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"`|uv_51`=ok;Dp6D!ch=\\\"><field name=\\\"TEXT\\\">Value2</field></shadow></value><next><block type=\\\"global_variable_write\\\" id=\\\"/gw98b(]sXhl9nwHex[`\\\"><field name=\\\"name\\\">Value2</field><value name=\\\"value\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"0?{WuOu@cs[?qy~nNhz{\\\"><field name=\\\"OP\\\">ADD</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"global_variable_read\\\" id=\\\"hU-xleuOFO+qD^nd/e0p\\\"><field name=\\\"name\\\">Value2</field></block></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"*[4+1nr9C/;MWTjw(tBk\\\"><field name=\\\"NUM\\\">1</field></shadow></value></block></value><next><block type=\\\"mutex_lock\\\" id=\\\"gXO.n~jgmhq_d^vz28so\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\";wm9.jLUa}KUBX|b$1/H\\\"><field name=\\\"TEXT\\\">Value1</field></shadow></value><next><block type=\\\"global_variable_write\\\" id=\\\"J%;WuZwa}NkolQb,X}Fb\\\"><field name=\\\"name\\\">Value1</field><value name=\\\"value\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"5{e|@0aE;+GOwDC.x`~e\\\"><field name=\\\"OP\\\">ADD</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"global_variable_read\\\" id=\\\"!*+^F}f(g-thw9(YaiD*\\\"><field name=\\\"name\\\">Value1</field></block></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"n?9Q/`2#T;SeqAp@9i,9\\\"><field name=\\\"NUM\\\">1</field></shadow></value></block></value><next><block type=\\\"mutex_unlock\\\" id=\\\"Y~.[l(bmK5A{3xQr(qJ9\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"@I#/5v!nB1p-^=;o_gNY\\\"><field name=\\\"TEXT\\\">Value2</field></shadow></value><next><block type=\\\"mutex_unlock\\\" id=\\\"Fz~zI.XOyC-Q}v8Q1jgo\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"/(05zQx#,.Y3^sB7OJoW\\\"><field name=\\\"TEXT\\\">Value1</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></statement></block></statement></block></xml>\",\n\t\tprogram: \"\",\n\t\tgoal: <div>用意されたプログラムを実行する。</div>,\n\t\teditable: false,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_VARIABLE_READ, BlockType.GLOBAL_VARIABLE_WRITE, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN, BlockType.MUTEX_LOCK, BlockType.MUTEX_UNLOCK]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// ステージ3-5\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tglobalVariables.addConstValue (\"Value1\", 0);\n\tglobalVariables.addConstValue (\"Value2\", 0);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"3章 並列プログラミング基礎\",\n\t\tchapterNameURL: \"chapter3\",\n\t\tmissionTitle: \"5.デッドロック2\",\n\t\tmissionExplanation: <div>\n\t\t\t<div>\n\t\t\t\t先ほどのような、お互いに相手のスレッドのロック解除を待ってしまいプログラムが先に進まなくなる現象を\n\t\t\t\t<span className={\"keyword\"}>デッドロック</span>と言います。\n\t\t\t</div>\n\t\t\t<div>このような現象を防止するにはどのようにすれば良いでしょうか。先ほどのプログラムを改造して動作を改善してみましょう。</div>\n\t\t</div>,\n\t\tmissionSummary: \"デッドロックを防止するにはどのようにすれば良いでしょうか。\",\n\t\tmissionID: \"mission3-05\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"><block type=\\\"entry_point\\\" id=\\\"5e{JeNdzKRK}Nyg(x2Ul\\\" x=\\\"58\\\" y=\\\"59\\\"><statement name=\\\"routine\\\"><block type=\\\"thread_create\\\" id=\\\"M-u)d9Kj*Y0/p(xZa|?@\\\"><field name=\\\"thread_function_name\\\">スレッドA</field><value name=\\\"thread_name\\\"><shadow type=\\\"text\\\" id=\\\"b3V,_dF.((/@2N[?,}ai\\\"><field name=\\\"TEXT\\\">スレッド1</field></shadow></value><value name=\\\"argument1\\\"><shadow type=\\\"math_number\\\" id=\\\"/hk3C)59^~}gn1tdebqQ\\\"><field name=\\\"NUM\\\">0</field></shadow></value><value name=\\\"argument2\\\"><shadow type=\\\"math_number\\\" id=\\\"sKJQMZNlyr(WidSgzrxU\\\"><field name=\\\"NUM\\\">0</field></shadow></value><value name=\\\"argument3\\\"><shadow type=\\\"math_number\\\" id=\\\"p{{-gLjtOJ.ZmC3m3[+s\\\"><field name=\\\"NUM\\\">0</field></shadow></value><next><block type=\\\"thread_create\\\" id=\\\"]7i*2m~H-f?,G#}EkOM5\\\"><field name=\\\"thread_function_name\\\">スレッドB</field><value name=\\\"thread_name\\\"><shadow type=\\\"text\\\" id=\\\"~fgy!ViH%TLLg?TE/][#\\\"><field name=\\\"TEXT\\\">スレッド2</field></shadow></value><value name=\\\"argument1\\\"><shadow type=\\\"math_number\\\" id=\\\"mBzH?(v~goBow8|`n90O\\\"><field name=\\\"NUM\\\">0</field></shadow></value><value name=\\\"argument2\\\"><shadow type=\\\"math_number\\\" id=\\\"pho}#mIGcCjwW,nmS?:A\\\"><field name=\\\"NUM\\\">0</field></shadow></value><value name=\\\"argument3\\\"><shadow type=\\\"math_number\\\" id=\\\"sZ`sj+xw?X7{#f8hz9Md\\\"><field name=\\\"NUM\\\">0</field></shadow></value><next><block type=\\\"thread_join\\\" id=\\\"+ozu|.Uvf2wuBGQrPk/0\\\"><value name=\\\"thread_name\\\"><shadow type=\\\"text\\\" id=\\\"r5c{3j/+plxClP{*0sa*\\\"><field name=\\\"TEXT\\\">スレッド1</field></shadow></value><next><block type=\\\"thread_join\\\" id=\\\"D@`ZWgGn/),/PPZ%Da]z\\\"><value name=\\\"thread_name\\\"><shadow type=\\\"text\\\" id=\\\"?Awa9y@$}Rp/|Kk1{{y$\\\"><field name=\\\"TEXT\\\">スレッド2</field></shadow></value></block></next></block></next></block></next></block></statement></block><block type=\\\"function_definition\\\" id=\\\"uf]-n=qS=[Vr3;LnO^[,\\\" x=\\\"60\\\" y=\\\"306\\\"><field name=\\\"name\\\">スレッドA</field><statement name=\\\"routine\\\"><block type=\\\"controls_repeat_ext\\\" id=\\\"Mupq}=Zy`:XL4yjbHE]-\\\"><value name=\\\"TIMES\\\"><shadow type=\\\"math_number\\\" id=\\\"k7y-97P3^N/(Bhh1g%Dn\\\"><field name=\\\"NUM\\\">10</field></shadow></value><statement name=\\\"DO\\\"><block type=\\\"mutex_lock\\\" id=\\\"~LQ3KvQ%HXSr?+(,dncg\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"GIa!2HaLbxqsA{tG%NP2\\\"><field name=\\\"TEXT\\\">Value1</field></shadow></value><next><block type=\\\"global_variable_write\\\" id=\\\"gUnjd.Q_N,N}cQ$4S@5r\\\"><field name=\\\"name\\\">Value1</field><value name=\\\"value\\\"><shadow type=\\\"math_number\\\" id=\\\"t#TDnVY9)Wp3:W7DVlh7\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"Z}`!9,U30Ks;KVkW_=r+\\\"><field name=\\\"OP\\\">ADD</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\" id=\\\"OaA0qK:[_vk~a$Zo-J,~\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"global_variable_read\\\" id=\\\"Q+9Z%(pn5n@8@zQ*O:Y)\\\"><field name=\\\"name\\\">Value1</field></block></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"0=dbF)3y::1D$AvqYxj{\\\"><field name=\\\"NUM\\\">1</field></shadow></value></block></value><next><block type=\\\"mutex_lock\\\" id=\\\"PfTJ}wsEc$duOCE}.C6P\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"{,RhKFK@WS8vm]-i?D$a\\\"><field name=\\\"TEXT\\\">Value2</field></shadow></value><next><block type=\\\"global_variable_write\\\" id=\\\"*eP0cs;iTrb_E2:cIGeK\\\"><field name=\\\"name\\\">Value2</field><value name=\\\"value\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"6RORErS-`-R~IV@aH~CY\\\"><field name=\\\"OP\\\">ADD</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"global_variable_read\\\" id=\\\"NaSG4hOaj3kmKHlAMm!h\\\"><field name=\\\"name\\\">Value2</field></block></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"wY9bHW.;KUY|+Ko=ex4]\\\"><field name=\\\"NUM\\\">1</field></shadow></value></block></value><next><block type=\\\"mutex_unlock\\\" id=\\\"M*5{g$gJBP@$OEjpe.7@\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"y*5}tO=)dU^GQEy6#:AJ\\\"><field name=\\\"TEXT\\\">Value1</field></shadow></value><next><block type=\\\"mutex_unlock\\\" id=\\\"aaGJ8;pJ/dkTp}pyhRGd\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"Kcy!4Q]oo52+mc2^4na3\\\"><field name=\\\"TEXT\\\">Value2</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></statement></block></statement></block><block type=\\\"function_definition\\\" id=\\\"aUCR?li!A[up^OHB)jOL\\\" x=\\\"58\\\" y=\\\"718\\\"><field name=\\\"name\\\">スレッドB</field><statement name=\\\"routine\\\"><block type=\\\"controls_repeat_ext\\\" id=\\\"$nrcvf$r_xi(|48Gl/_y\\\"><value name=\\\"TIMES\\\"><shadow type=\\\"math_number\\\" id=\\\"[JWavU]@MY#e=/K#$|6R\\\"><field name=\\\"NUM\\\">10</field></shadow></value><statement name=\\\"DO\\\"><block type=\\\"mutex_lock\\\" id=\\\"8d79oZE?F#zllNK4MH30\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"`|uv_51`=ok;Dp6D!ch=\\\"><field name=\\\"TEXT\\\">Value2</field></shadow></value><next><block type=\\\"global_variable_write\\\" id=\\\"/gw98b(]sXhl9nwHex[`\\\"><field name=\\\"name\\\">Value2</field><value name=\\\"value\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"0?{WuOu@cs[?qy~nNhz{\\\"><field name=\\\"OP\\\">ADD</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"global_variable_read\\\" id=\\\"hU-xleuOFO+qD^nd/e0p\\\"><field name=\\\"name\\\">Value2</field></block></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"*[4+1nr9C/;MWTjw(tBk\\\"><field name=\\\"NUM\\\">1</field></shadow></value></block></value><next><block type=\\\"mutex_lock\\\" id=\\\"gXO.n~jgmhq_d^vz28so\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\";wm9.jLUa}KUBX|b$1/H\\\"><field name=\\\"TEXT\\\">Value1</field></shadow></value><next><block type=\\\"global_variable_write\\\" id=\\\"J%;WuZwa}NkolQb,X}Fb\\\"><field name=\\\"name\\\">Value1</field><value name=\\\"value\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"math_arithmetic\\\" id=\\\"5{e|@0aE;+GOwDC.x`~e\\\"><field name=\\\"OP\\\">ADD</field><value name=\\\"A\\\"><shadow type=\\\"math_number\\\"><field name=\\\"NUM\\\">0</field></shadow><block type=\\\"global_variable_read\\\" id=\\\"!*+^F}f(g-thw9(YaiD*\\\"><field name=\\\"name\\\">Value1</field></block></value><value name=\\\"B\\\"><shadow type=\\\"math_number\\\" id=\\\"n?9Q/`2#T;SeqAp@9i,9\\\"><field name=\\\"NUM\\\">1</field></shadow></value></block></value><next><block type=\\\"mutex_unlock\\\" id=\\\"Y~.[l(bmK5A{3xQr(qJ9\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"@I#/5v!nB1p-^=;o_gNY\\\"><field name=\\\"TEXT\\\">Value2</field></shadow></value><next><block type=\\\"mutex_unlock\\\" id=\\\"Fz~zI.XOyC-Q}v8Q1jgo\\\"><value name=\\\"mutex_id\\\"><shadow type=\\\"text\\\" id=\\\"/(05zQx#,.Y3^sB7OJoW\\\"><field name=\\\"TEXT\\\">Value1</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></statement></block></statement></block></xml>\",\n\t\tprogram: \"\",\n\t\tgoal: <div>用意されたプログラムを改造し、グローバル変数Value1とValue2が無事に20になるようにする</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: {\n\t\t\tbehaviors: [BlockType.TEXT_PRINT, BlockType.WAIT_MS, BlockType.WAIT_S],\n\t\t\tlogic: [BlockType.CONTROLS_IF, BlockType.CONTROLS_IFELSE, BlockType.LOGIC_COMPARE, BlockType.LOGIC_OPERATION, BlockType.LOGIC_NEGATE],\n\t\t\tloops: [BlockType.CONTROLS_REPEAT_EXT, BlockType.CONTROLS_WHILEUNTIL],\n\t\t\tmath: [BlockType.MATH_NUMBER, BlockType.MATH_ARITHMETIC],\n\t\t\ttext: [BlockType.TEXT, BlockType.STR_ARITHMETIC],\n\t\t\tlocalVariables: [BlockType.LOCAL_VARIABLE_AVAILABLE],\n\t\t\tglobalArrays: [BlockType.GLOBAL_VARIABLE_READ, BlockType.GLOBAL_VARIABLE_WRITE, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_ONE_DIMENSIONAL_ARRAY_WRITE, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_READ, BlockType.GLOBAL_TWO_DIMENSIONAL_ARRAY_WRITE],\n\t\t\tfunctions: [BlockType.FUNCTION_DEFINITION, BlockType.FUNCTION_CALL, BlockType.ENTRY_POINT, BlockType.GET_ARGUMENT],\n\t\t\tmeasurement: [BlockType.STOPWATCH_START, BlockType.STOPWATCH_STOP, BlockType.STOPWATCH_RESET, BlockType.STOPWATCH_READ],\n\t\t\tparallel: [BlockType.THREAD_CREATE, BlockType.THREAD_JOIN, BlockType.MUTEX_LOCK, BlockType.MUTEX_UNLOCK]\n\t\t},\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tif (variablesResult[\"Value1\"] !== 20) {\n\t\t\t\treturn {cleared: false, failReason: \"Value1の値が異なります。\"};\n\t\t\t}\n\t\t\tif (variablesResult[\"Value2\"] !== 20) {\n\t\t\t\treturn {cleared: false, failReason: \"Value2の値が異なります。\"};\n\t\t\t}\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n\n// サンプルステージ\n{\n\tconst twoDimensionalArrays = new Mission.TwoDimensionalArrays ();\n\ttwoDimensionalArrays.addConstArray (\"Array1\", [\n\t\t[1, 2, 3, 4],\n\t\t[5, 6, 7, 8]\n\t]);\n\ttwoDimensionalArrays.addRandomArray (\"Array2\", 2, 2, 0, 100);\n\tconst oneDimensionalArrays = new Mission.OneDimensionalArrays ();\n\toneDimensionalArrays.addRandomArray (\"Array3\", 4, 0, 10);\n\tconst globalVariables = new Mission.GlobalVariables ();\n\tglobalVariables.addConstValue (\"Value1\", 2);\n\tglobalVariables.addRandomValue (\"Value2\", 0, 99);\n\tmissionContents.addMissionContent ({\n\t\tchapterName: \"サンプル\",\n\t\tchapterNameURL: \"sample\",\n\t\tmissionTitle: \"グローバル配列\",\n\t\tmissionExplanation: <div>グローバル配列について学びます。</div>,\n\t\tmissionSummary: \"サンプルステージです。\",\n\t\tmissionID: \"sample\",\n\t\tscore: new Mission.MissionScore (),\n\t\tdefaultProgram: \"\",\n\t\tprogram: \"\",\n\t\tgoal: <div>グローバル配列 \"Array1\" の値をすべて0にする</div>,\n\t\teditable: true,\n\t\tblockCountLimit: -1,\n\t\tblockList: getAllBlockListXml (),\n\t\ttwoDimensionalArrays: twoDimensionalArrays,\n\t\toneDimensionalArrays: oneDimensionalArrays,\n\t\tglobalVariables: globalVariables,\n\t\tjudge: (consoleOutputs,\n\t\t\t\tinitialTwoDimensionalArrays, initialOneDimensionalArrays, initialVariables,\n\t\t\t\ttwoDimensionalArraysResult, oneDimensionalArraysResult, variablesResult) => {\n\t\t\tfor (const row of twoDimensionalArraysResult[\"Array1\"]) {\n\t\t\t\tfor (const element of row) {\n\t\t\t\t\tif (element !== 0) {\n\t\t\t\t\t\treturn {cleared: false, failReason: \"Dataに0でない要素が含まれています。\"};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {cleared: true, failReason: \"\"};\n\t\t}\n\t});\n}\n","export default __webpack_public_path__ + \"static/media/Clear.7b83afca.svg\";","import React from \"react\";\nimport {BrowserRouter, Route, Link} from \"react-router-dom\";\nimport {missionContents} from \"./missionContents\";\n\nimport Playground from \"./playground\";\n\nimport HomeIcon from \"./img/Home.svg\";\nimport ClearIcon from \"./img/Clear.svg\";\n\nimport \"./App.scss\";\nimport \"./common.scss\";\n\nfunction Top () {\n\tconsole.log(\"Start\");\n\n\tconst chapters = missionContents.missionContents.map ((chapter) => {\n\t\tconst missionLinks = chapter.contents.map ((missionContent) => {\n\t\t\treturn (\n\t\t\t\t<Link to={`./missions/${missionContent.chapterNameURL}/${missionContent.missionID}`}\n\t\t\t\t\t  key={missionContent.missionID} className={\"mission-panel\"}>\n\t\t\t\t\t<div className={\"mission-title\"}>{missionContent.missionTitle}</div>\n\t\t\t\t\t<div className={\"mission-text\"}>{missionContent.missionSummary}</div>\n\t\t\t\t\t<div style={{visibility: missionContent.score.isClear () ? \"visible\" : \"hidden\",}}\n\t\t\t\t\t\t className={\"mission-clear-icon-container\"}>\n\t\t\t\t\t\t<img src={ClearIcon} className={\"mission-clear-icon\"}/>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className={\"chapter-container\"} key={chapter.chapterName}>\n\t\t\t\t<div className={\"chapter-title\"}>{chapter.chapterName}</div>\n\t\t\t\t<div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n\t\t\t\t\t{missionLinks}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<div id={\"header\"}>\n\t\t\t\t<div id={\"header-left\"}>\n\t\t\t\t\t<Link to={\"/\"} id={\"home-icon-container\"}><img src={HomeIcon} id={\"home-icon\"}/></Link>\n\t\t\t\t\t<div id={\"title\"}>ステージ一覧</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{chapters}\n\t\t</div>\n\t)\n}\n\nfunction App () {\n\t// 基本的なRoutes\n\tconst commonRoutes = [\n\t\t{\n\t\t\turl: \"/\",\n\t\t\tcomponent: <Top/>\n\t\t}\n\t];\n\t// 既存ステージのRoutes\n\tconst missionRoutes = [];\n\tfor (const chapter of missionContents.missionContents) {\n\t\tfor (const missionContent of chapter.contents) {\n\t\t\tmissionRoutes.push ({\n\t\t\t\turl: `/missions/${missionContent.chapterNameURL}/${missionContent.missionID}`,\n\t\t\t\tcomponent: <Playground missionID={missionContent.missionID}/>\n\t\t\t});\n\t\t}\n\t}\n\tconst routes = commonRoutes.concat (missionRoutes);\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t{routes.map ((route) => {\n\t\t\t\treturn <Route key={route.url} path={route.url} exact render={() => route.component}/>\n\t\t\t})}\n\t\t</BrowserRouter>\n\t)\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}